// Code generated by protoc-gen-go. DO NOT EDIT.
// source: steammessages_clientserver_login.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package protobuf is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package protobuf to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CMsgClientHeartBeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientHeartBeat) Reset()         { *m = CMsgClientHeartBeat{} }
func (m *CMsgClientHeartBeat) String() string { return proto.CompactTextString(m) }
func (*CMsgClientHeartBeat) ProtoMessage()    {}
func (*CMsgClientHeartBeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{0}
}

func (m *CMsgClientHeartBeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientHeartBeat.Unmarshal(m, b)
}
func (m *CMsgClientHeartBeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientHeartBeat.Marshal(b, m, deterministic)
}
func (m *CMsgClientHeartBeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientHeartBeat.Merge(m, src)
}
func (m *CMsgClientHeartBeat) XXX_Size() int {
	return xxx_messageInfo_CMsgClientHeartBeat.Size(m)
}
func (m *CMsgClientHeartBeat) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientHeartBeat.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientHeartBeat proto.InternalMessageInfo

type CMsgClientServerTimestampRequest struct {
	ClientRequestTimestamp *uint64  `protobuf:"varint,1,opt,name=client_request_timestamp,json=clientRequestTimestamp" json:"client_request_timestamp,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgClientServerTimestampRequest) Reset()         { *m = CMsgClientServerTimestampRequest{} }
func (m *CMsgClientServerTimestampRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientServerTimestampRequest) ProtoMessage()    {}
func (*CMsgClientServerTimestampRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{1}
}

func (m *CMsgClientServerTimestampRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientServerTimestampRequest.Unmarshal(m, b)
}
func (m *CMsgClientServerTimestampRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientServerTimestampRequest.Marshal(b, m, deterministic)
}
func (m *CMsgClientServerTimestampRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientServerTimestampRequest.Merge(m, src)
}
func (m *CMsgClientServerTimestampRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientServerTimestampRequest.Size(m)
}
func (m *CMsgClientServerTimestampRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientServerTimestampRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientServerTimestampRequest proto.InternalMessageInfo

func (m *CMsgClientServerTimestampRequest) GetClientRequestTimestamp() uint64 {
	if m != nil && m.ClientRequestTimestamp != nil {
		return *m.ClientRequestTimestamp
	}
	return 0
}

type CMsgClientServerTimestampResponse struct {
	ClientRequestTimestamp *uint64  `protobuf:"varint,1,opt,name=client_request_timestamp,json=clientRequestTimestamp" json:"client_request_timestamp,omitempty"`
	ServerTimestampMs      *uint64  `protobuf:"varint,2,opt,name=server_timestamp_ms,json=serverTimestampMs" json:"server_timestamp_ms,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgClientServerTimestampResponse) Reset()         { *m = CMsgClientServerTimestampResponse{} }
func (m *CMsgClientServerTimestampResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientServerTimestampResponse) ProtoMessage()    {}
func (*CMsgClientServerTimestampResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{2}
}

func (m *CMsgClientServerTimestampResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientServerTimestampResponse.Unmarshal(m, b)
}
func (m *CMsgClientServerTimestampResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientServerTimestampResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientServerTimestampResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientServerTimestampResponse.Merge(m, src)
}
func (m *CMsgClientServerTimestampResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientServerTimestampResponse.Size(m)
}
func (m *CMsgClientServerTimestampResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientServerTimestampResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientServerTimestampResponse proto.InternalMessageInfo

func (m *CMsgClientServerTimestampResponse) GetClientRequestTimestamp() uint64 {
	if m != nil && m.ClientRequestTimestamp != nil {
		return *m.ClientRequestTimestamp
	}
	return 0
}

func (m *CMsgClientServerTimestampResponse) GetServerTimestampMs() uint64 {
	if m != nil && m.ServerTimestampMs != nil {
		return *m.ServerTimestampMs
	}
	return 0
}

type CMsgClientSecret struct {
	Version              *uint32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	Appid                *uint32  `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Deviceid             *uint32  `protobuf:"varint,3,opt,name=deviceid" json:"deviceid,omitempty"`
	Nonce                *uint64  `protobuf:"fixed64,4,opt,name=nonce" json:"nonce,omitempty"`
	Hmac                 []byte   `protobuf:"bytes,5,opt,name=hmac" json:"hmac,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientSecret) Reset()         { *m = CMsgClientSecret{} }
func (m *CMsgClientSecret) String() string { return proto.CompactTextString(m) }
func (*CMsgClientSecret) ProtoMessage()    {}
func (*CMsgClientSecret) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{3}
}

func (m *CMsgClientSecret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientSecret.Unmarshal(m, b)
}
func (m *CMsgClientSecret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientSecret.Marshal(b, m, deterministic)
}
func (m *CMsgClientSecret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientSecret.Merge(m, src)
}
func (m *CMsgClientSecret) XXX_Size() int {
	return xxx_messageInfo_CMsgClientSecret.Size(m)
}
func (m *CMsgClientSecret) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientSecret.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientSecret proto.InternalMessageInfo

func (m *CMsgClientSecret) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CMsgClientSecret) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CMsgClientSecret) GetDeviceid() uint32 {
	if m != nil && m.Deviceid != nil {
		return *m.Deviceid
	}
	return 0
}

func (m *CMsgClientSecret) GetNonce() uint64 {
	if m != nil && m.Nonce != nil {
		return *m.Nonce
	}
	return 0
}

func (m *CMsgClientSecret) GetHmac() []byte {
	if m != nil {
		return m.Hmac
	}
	return nil
}

type CMsgClientLogon struct {
	ProtocolVersion                   *uint32           `protobuf:"varint,1,opt,name=protocol_version,json=protocolVersion" json:"protocol_version,omitempty"`
	DeprecatedObfustucatedPrivateIp   *uint32           `protobuf:"varint,2,opt,name=deprecated_obfustucated_private_ip,json=deprecatedObfustucatedPrivateIp" json:"deprecated_obfustucated_private_ip,omitempty"`
	CellId                            *uint32           `protobuf:"varint,3,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	LastSessionId                     *uint32           `protobuf:"varint,4,opt,name=last_session_id,json=lastSessionId" json:"last_session_id,omitempty"`
	ClientPackageVersion              *uint32           `protobuf:"varint,5,opt,name=client_package_version,json=clientPackageVersion" json:"client_package_version,omitempty"`
	ClientLanguage                    *string           `protobuf:"bytes,6,opt,name=client_language,json=clientLanguage" json:"client_language,omitempty"`
	ClientOsType                      *uint32           `protobuf:"varint,7,opt,name=client_os_type,json=clientOsType" json:"client_os_type,omitempty"`
	ShouldRememberPassword            *bool             `protobuf:"varint,8,opt,name=should_remember_password,json=shouldRememberPassword,def=0" json:"should_remember_password,omitempty"`
	WineVersion                       *string           `protobuf:"bytes,9,opt,name=wine_version,json=wineVersion" json:"wine_version,omitempty"`
	Deprecated_10                     *uint32           `protobuf:"varint,10,opt,name=deprecated_10,json=deprecated10" json:"deprecated_10,omitempty"`
	ObfuscatedPrivateIp               *CMsgIPAddress    `protobuf:"bytes,11,opt,name=obfuscated_private_ip,json=obfuscatedPrivateIp" json:"obfuscated_private_ip,omitempty"`
	DeprecatedPublicIp                *uint32           `protobuf:"varint,20,opt,name=deprecated_public_ip,json=deprecatedPublicIp" json:"deprecated_public_ip,omitempty"`
	QosLevel                          *uint32           `protobuf:"varint,21,opt,name=qos_level,json=qosLevel" json:"qos_level,omitempty"`
	ClientSuppliedSteamId             *uint64           `protobuf:"fixed64,22,opt,name=client_supplied_steam_id,json=clientSuppliedSteamId" json:"client_supplied_steam_id,omitempty"`
	PublicIp                          *CMsgIPAddress    `protobuf:"bytes,23,opt,name=public_ip,json=publicIp" json:"public_ip,omitempty"`
	MachineId                         []byte            `protobuf:"bytes,30,opt,name=machine_id,json=machineId" json:"machine_id,omitempty"`
	LauncherType                      *uint32           `protobuf:"varint,31,opt,name=launcher_type,json=launcherType,def=0" json:"launcher_type,omitempty"`
	UiMode                            *uint32           `protobuf:"varint,32,opt,name=ui_mode,json=uiMode,def=0" json:"ui_mode,omitempty"`
	ChatMode                          *uint32           `protobuf:"varint,33,opt,name=chat_mode,json=chatMode,def=0" json:"chat_mode,omitempty"`
	Steam2AuthTicket                  []byte            `protobuf:"bytes,41,opt,name=steam2_auth_ticket,json=steam2AuthTicket" json:"steam2_auth_ticket,omitempty"`
	EmailAddress                      *string           `protobuf:"bytes,42,opt,name=email_address,json=emailAddress" json:"email_address,omitempty"`
	Rtime32AccountCreation            *uint32           `protobuf:"fixed32,43,opt,name=rtime32_account_creation,json=rtime32AccountCreation" json:"rtime32_account_creation,omitempty"`
	AccountName                       *string           `protobuf:"bytes,50,opt,name=account_name,json=accountName" json:"account_name,omitempty"`
	Password                          *string           `protobuf:"bytes,51,opt,name=password" json:"password,omitempty"`
	GameServerToken                   *string           `protobuf:"bytes,52,opt,name=game_server_token,json=gameServerToken" json:"game_server_token,omitempty"`
	LoginKey                          *string           `protobuf:"bytes,60,opt,name=login_key,json=loginKey" json:"login_key,omitempty"`
	WasConvertedDeprecatedMsg         *bool             `protobuf:"varint,70,opt,name=was_converted_deprecated_msg,json=wasConvertedDeprecatedMsg,def=0" json:"was_converted_deprecated_msg,omitempty"`
	AnonUserTargetAccountName         *string           `protobuf:"bytes,80,opt,name=anon_user_target_account_name,json=anonUserTargetAccountName" json:"anon_user_target_account_name,omitempty"`
	ResolvedUserSteamId               *uint64           `protobuf:"fixed64,81,opt,name=resolved_user_steam_id,json=resolvedUserSteamId" json:"resolved_user_steam_id,omitempty"`
	EresultSentryfile                 *int32            `protobuf:"varint,82,opt,name=eresult_sentryfile,json=eresultSentryfile" json:"eresult_sentryfile,omitempty"`
	ShaSentryfile                     []byte            `protobuf:"bytes,83,opt,name=sha_sentryfile,json=shaSentryfile" json:"sha_sentryfile,omitempty"`
	AuthCode                          *string           `protobuf:"bytes,84,opt,name=auth_code,json=authCode" json:"auth_code,omitempty"`
	OtpType                           *int32            `protobuf:"varint,85,opt,name=otp_type,json=otpType" json:"otp_type,omitempty"`
	OtpValue                          *uint32           `protobuf:"varint,86,opt,name=otp_value,json=otpValue" json:"otp_value,omitempty"`
	OtpIdentifier                     *string           `protobuf:"bytes,87,opt,name=otp_identifier,json=otpIdentifier" json:"otp_identifier,omitempty"`
	Steam2TicketRequest               *bool             `protobuf:"varint,88,opt,name=steam2_ticket_request,json=steam2TicketRequest" json:"steam2_ticket_request,omitempty"`
	SonyPsnTicket                     []byte            `protobuf:"bytes,90,opt,name=sony_psn_ticket,json=sonyPsnTicket" json:"sony_psn_ticket,omitempty"`
	SonyPsnServiceId                  *string           `protobuf:"bytes,91,opt,name=sony_psn_service_id,json=sonyPsnServiceId" json:"sony_psn_service_id,omitempty"`
	CreateNewPsnLinkedAccountIfNeeded *bool             `protobuf:"varint,92,opt,name=create_new_psn_linked_account_if_needed,json=createNewPsnLinkedAccountIfNeeded,def=0" json:"create_new_psn_linked_account_if_needed,omitempty"`
	SonyPsnName                       *string           `protobuf:"bytes,93,opt,name=sony_psn_name,json=sonyPsnName" json:"sony_psn_name,omitempty"`
	GameServerAppId                   *int32            `protobuf:"varint,94,opt,name=game_server_app_id,json=gameServerAppId" json:"game_server_app_id,omitempty"`
	SteamguardDontRememberComputer    *bool             `protobuf:"varint,95,opt,name=steamguard_dont_remember_computer,json=steamguardDontRememberComputer" json:"steamguard_dont_remember_computer,omitempty"`
	MachineName                       *string           `protobuf:"bytes,96,opt,name=machine_name,json=machineName" json:"machine_name,omitempty"`
	MachineNameUserchosen             *string           `protobuf:"bytes,97,opt,name=machine_name_userchosen,json=machineNameUserchosen" json:"machine_name_userchosen,omitempty"`
	CountryOverride                   *string           `protobuf:"bytes,98,opt,name=country_override,json=countryOverride" json:"country_override,omitempty"`
	IsSteamBox                        *bool             `protobuf:"varint,99,opt,name=is_steam_box,json=isSteamBox" json:"is_steam_box,omitempty"`
	ClientInstanceId                  *uint64           `protobuf:"varint,100,opt,name=client_instance_id,json=clientInstanceId" json:"client_instance_id,omitempty"`
	TwoFactorCode                     *string           `protobuf:"bytes,101,opt,name=two_factor_code,json=twoFactorCode" json:"two_factor_code,omitempty"`
	SupportsRateLimitResponse         *bool             `protobuf:"varint,102,opt,name=supports_rate_limit_response,json=supportsRateLimitResponse" json:"supports_rate_limit_response,omitempty"`
	WebLogonNonce                     *string           `protobuf:"bytes,103,opt,name=web_logon_nonce,json=webLogonNonce" json:"web_logon_nonce,omitempty"`
	PriorityReason                    *int32            `protobuf:"varint,104,opt,name=priority_reason,json=priorityReason" json:"priority_reason,omitempty"`
	EmbeddedClientSecret              *CMsgClientSecret `protobuf:"bytes,105,opt,name=embedded_client_secret,json=embeddedClientSecret" json:"embedded_client_secret,omitempty"`
	XXX_NoUnkeyedLiteral              struct{}          `json:"-"`
	XXX_unrecognized                  []byte            `json:"-"`
	XXX_sizecache                     int32             `json:"-"`
}

func (m *CMsgClientLogon) Reset()         { *m = CMsgClientLogon{} }
func (m *CMsgClientLogon) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLogon) ProtoMessage()    {}
func (*CMsgClientLogon) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{4}
}

func (m *CMsgClientLogon) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLogon.Unmarshal(m, b)
}
func (m *CMsgClientLogon) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLogon.Marshal(b, m, deterministic)
}
func (m *CMsgClientLogon) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLogon.Merge(m, src)
}
func (m *CMsgClientLogon) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLogon.Size(m)
}
func (m *CMsgClientLogon) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLogon.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLogon proto.InternalMessageInfo

const Default_CMsgClientLogon_ShouldRememberPassword bool = false
const Default_CMsgClientLogon_LauncherType uint32 = 0
const Default_CMsgClientLogon_UiMode uint32 = 0
const Default_CMsgClientLogon_ChatMode uint32 = 0
const Default_CMsgClientLogon_WasConvertedDeprecatedMsg bool = false
const Default_CMsgClientLogon_CreateNewPsnLinkedAccountIfNeeded bool = false

func (m *CMsgClientLogon) GetProtocolVersion() uint32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return 0
}

func (m *CMsgClientLogon) GetDeprecatedObfustucatedPrivateIp() uint32 {
	if m != nil && m.DeprecatedObfustucatedPrivateIp != nil {
		return *m.DeprecatedObfustucatedPrivateIp
	}
	return 0
}

func (m *CMsgClientLogon) GetCellId() uint32 {
	if m != nil && m.CellId != nil {
		return *m.CellId
	}
	return 0
}

func (m *CMsgClientLogon) GetLastSessionId() uint32 {
	if m != nil && m.LastSessionId != nil {
		return *m.LastSessionId
	}
	return 0
}

func (m *CMsgClientLogon) GetClientPackageVersion() uint32 {
	if m != nil && m.ClientPackageVersion != nil {
		return *m.ClientPackageVersion
	}
	return 0
}

func (m *CMsgClientLogon) GetClientLanguage() string {
	if m != nil && m.ClientLanguage != nil {
		return *m.ClientLanguage
	}
	return ""
}

func (m *CMsgClientLogon) GetClientOsType() uint32 {
	if m != nil && m.ClientOsType != nil {
		return *m.ClientOsType
	}
	return 0
}

func (m *CMsgClientLogon) GetShouldRememberPassword() bool {
	if m != nil && m.ShouldRememberPassword != nil {
		return *m.ShouldRememberPassword
	}
	return Default_CMsgClientLogon_ShouldRememberPassword
}

func (m *CMsgClientLogon) GetWineVersion() string {
	if m != nil && m.WineVersion != nil {
		return *m.WineVersion
	}
	return ""
}

func (m *CMsgClientLogon) GetDeprecated_10() uint32 {
	if m != nil && m.Deprecated_10 != nil {
		return *m.Deprecated_10
	}
	return 0
}

func (m *CMsgClientLogon) GetObfuscatedPrivateIp() *CMsgIPAddress {
	if m != nil {
		return m.ObfuscatedPrivateIp
	}
	return nil
}

func (m *CMsgClientLogon) GetDeprecatedPublicIp() uint32 {
	if m != nil && m.DeprecatedPublicIp != nil {
		return *m.DeprecatedPublicIp
	}
	return 0
}

func (m *CMsgClientLogon) GetQosLevel() uint32 {
	if m != nil && m.QosLevel != nil {
		return *m.QosLevel
	}
	return 0
}

func (m *CMsgClientLogon) GetClientSuppliedSteamId() uint64 {
	if m != nil && m.ClientSuppliedSteamId != nil {
		return *m.ClientSuppliedSteamId
	}
	return 0
}

func (m *CMsgClientLogon) GetPublicIp() *CMsgIPAddress {
	if m != nil {
		return m.PublicIp
	}
	return nil
}

func (m *CMsgClientLogon) GetMachineId() []byte {
	if m != nil {
		return m.MachineId
	}
	return nil
}

func (m *CMsgClientLogon) GetLauncherType() uint32 {
	if m != nil && m.LauncherType != nil {
		return *m.LauncherType
	}
	return Default_CMsgClientLogon_LauncherType
}

func (m *CMsgClientLogon) GetUiMode() uint32 {
	if m != nil && m.UiMode != nil {
		return *m.UiMode
	}
	return Default_CMsgClientLogon_UiMode
}

func (m *CMsgClientLogon) GetChatMode() uint32 {
	if m != nil && m.ChatMode != nil {
		return *m.ChatMode
	}
	return Default_CMsgClientLogon_ChatMode
}

func (m *CMsgClientLogon) GetSteam2AuthTicket() []byte {
	if m != nil {
		return m.Steam2AuthTicket
	}
	return nil
}

func (m *CMsgClientLogon) GetEmailAddress() string {
	if m != nil && m.EmailAddress != nil {
		return *m.EmailAddress
	}
	return ""
}

func (m *CMsgClientLogon) GetRtime32AccountCreation() uint32 {
	if m != nil && m.Rtime32AccountCreation != nil {
		return *m.Rtime32AccountCreation
	}
	return 0
}

func (m *CMsgClientLogon) GetAccountName() string {
	if m != nil && m.AccountName != nil {
		return *m.AccountName
	}
	return ""
}

func (m *CMsgClientLogon) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgClientLogon) GetGameServerToken() string {
	if m != nil && m.GameServerToken != nil {
		return *m.GameServerToken
	}
	return ""
}

func (m *CMsgClientLogon) GetLoginKey() string {
	if m != nil && m.LoginKey != nil {
		return *m.LoginKey
	}
	return ""
}

func (m *CMsgClientLogon) GetWasConvertedDeprecatedMsg() bool {
	if m != nil && m.WasConvertedDeprecatedMsg != nil {
		return *m.WasConvertedDeprecatedMsg
	}
	return Default_CMsgClientLogon_WasConvertedDeprecatedMsg
}

func (m *CMsgClientLogon) GetAnonUserTargetAccountName() string {
	if m != nil && m.AnonUserTargetAccountName != nil {
		return *m.AnonUserTargetAccountName
	}
	return ""
}

func (m *CMsgClientLogon) GetResolvedUserSteamId() uint64 {
	if m != nil && m.ResolvedUserSteamId != nil {
		return *m.ResolvedUserSteamId
	}
	return 0
}

func (m *CMsgClientLogon) GetEresultSentryfile() int32 {
	if m != nil && m.EresultSentryfile != nil {
		return *m.EresultSentryfile
	}
	return 0
}

func (m *CMsgClientLogon) GetShaSentryfile() []byte {
	if m != nil {
		return m.ShaSentryfile
	}
	return nil
}

func (m *CMsgClientLogon) GetAuthCode() string {
	if m != nil && m.AuthCode != nil {
		return *m.AuthCode
	}
	return ""
}

func (m *CMsgClientLogon) GetOtpType() int32 {
	if m != nil && m.OtpType != nil {
		return *m.OtpType
	}
	return 0
}

func (m *CMsgClientLogon) GetOtpValue() uint32 {
	if m != nil && m.OtpValue != nil {
		return *m.OtpValue
	}
	return 0
}

func (m *CMsgClientLogon) GetOtpIdentifier() string {
	if m != nil && m.OtpIdentifier != nil {
		return *m.OtpIdentifier
	}
	return ""
}

func (m *CMsgClientLogon) GetSteam2TicketRequest() bool {
	if m != nil && m.Steam2TicketRequest != nil {
		return *m.Steam2TicketRequest
	}
	return false
}

func (m *CMsgClientLogon) GetSonyPsnTicket() []byte {
	if m != nil {
		return m.SonyPsnTicket
	}
	return nil
}

func (m *CMsgClientLogon) GetSonyPsnServiceId() string {
	if m != nil && m.SonyPsnServiceId != nil {
		return *m.SonyPsnServiceId
	}
	return ""
}

func (m *CMsgClientLogon) GetCreateNewPsnLinkedAccountIfNeeded() bool {
	if m != nil && m.CreateNewPsnLinkedAccountIfNeeded != nil {
		return *m.CreateNewPsnLinkedAccountIfNeeded
	}
	return Default_CMsgClientLogon_CreateNewPsnLinkedAccountIfNeeded
}

func (m *CMsgClientLogon) GetSonyPsnName() string {
	if m != nil && m.SonyPsnName != nil {
		return *m.SonyPsnName
	}
	return ""
}

func (m *CMsgClientLogon) GetGameServerAppId() int32 {
	if m != nil && m.GameServerAppId != nil {
		return *m.GameServerAppId
	}
	return 0
}

func (m *CMsgClientLogon) GetSteamguardDontRememberComputer() bool {
	if m != nil && m.SteamguardDontRememberComputer != nil {
		return *m.SteamguardDontRememberComputer
	}
	return false
}

func (m *CMsgClientLogon) GetMachineName() string {
	if m != nil && m.MachineName != nil {
		return *m.MachineName
	}
	return ""
}

func (m *CMsgClientLogon) GetMachineNameUserchosen() string {
	if m != nil && m.MachineNameUserchosen != nil {
		return *m.MachineNameUserchosen
	}
	return ""
}

func (m *CMsgClientLogon) GetCountryOverride() string {
	if m != nil && m.CountryOverride != nil {
		return *m.CountryOverride
	}
	return ""
}

func (m *CMsgClientLogon) GetIsSteamBox() bool {
	if m != nil && m.IsSteamBox != nil {
		return *m.IsSteamBox
	}
	return false
}

func (m *CMsgClientLogon) GetClientInstanceId() uint64 {
	if m != nil && m.ClientInstanceId != nil {
		return *m.ClientInstanceId
	}
	return 0
}

func (m *CMsgClientLogon) GetTwoFactorCode() string {
	if m != nil && m.TwoFactorCode != nil {
		return *m.TwoFactorCode
	}
	return ""
}

func (m *CMsgClientLogon) GetSupportsRateLimitResponse() bool {
	if m != nil && m.SupportsRateLimitResponse != nil {
		return *m.SupportsRateLimitResponse
	}
	return false
}

func (m *CMsgClientLogon) GetWebLogonNonce() string {
	if m != nil && m.WebLogonNonce != nil {
		return *m.WebLogonNonce
	}
	return ""
}

func (m *CMsgClientLogon) GetPriorityReason() int32 {
	if m != nil && m.PriorityReason != nil {
		return *m.PriorityReason
	}
	return 0
}

func (m *CMsgClientLogon) GetEmbeddedClientSecret() *CMsgClientSecret {
	if m != nil {
		return m.EmbeddedClientSecret
	}
	return nil
}

type CMsgClientLogonResponse struct {
	Eresult                     *int32         `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	OutOfGameHeartbeatSeconds   *int32         `protobuf:"varint,2,opt,name=out_of_game_heartbeat_seconds,json=outOfGameHeartbeatSeconds" json:"out_of_game_heartbeat_seconds,omitempty"`
	InGameHeartbeatSeconds      *int32         `protobuf:"varint,3,opt,name=in_game_heartbeat_seconds,json=inGameHeartbeatSeconds" json:"in_game_heartbeat_seconds,omitempty"`
	DeprecatedPublicIp          *uint32        `protobuf:"varint,4,opt,name=deprecated_public_ip,json=deprecatedPublicIp" json:"deprecated_public_ip,omitempty"`
	Rtime32ServerTime           *uint32        `protobuf:"fixed32,5,opt,name=rtime32_server_time,json=rtime32ServerTime" json:"rtime32_server_time,omitempty"`
	AccountFlags                *uint32        `protobuf:"varint,6,opt,name=account_flags,json=accountFlags" json:"account_flags,omitempty"`
	CellId                      *uint32        `protobuf:"varint,7,opt,name=cell_id,json=cellId" json:"cell_id,omitempty"`
	EmailDomain                 *string        `protobuf:"bytes,8,opt,name=email_domain,json=emailDomain" json:"email_domain,omitempty"`
	Steam2Ticket                []byte         `protobuf:"bytes,9,opt,name=steam2_ticket,json=steam2Ticket" json:"steam2_ticket,omitempty"`
	EresultExtended             *int32         `protobuf:"varint,10,opt,name=eresult_extended,json=eresultExtended" json:"eresult_extended,omitempty"`
	WebapiAuthenticateUserNonce *string        `protobuf:"bytes,11,opt,name=webapi_authenticate_user_nonce,json=webapiAuthenticateUserNonce" json:"webapi_authenticate_user_nonce,omitempty"`
	CellIdPingThreshold         *uint32        `protobuf:"varint,12,opt,name=cell_id_ping_threshold,json=cellIdPingThreshold" json:"cell_id_ping_threshold,omitempty"`
	UsePics                     *bool          `protobuf:"varint,13,opt,name=use_pics,json=usePics" json:"use_pics,omitempty"`
	VanityUrl                   *string        `protobuf:"bytes,14,opt,name=vanity_url,json=vanityUrl" json:"vanity_url,omitempty"`
	PublicIp                    *CMsgIPAddress `protobuf:"bytes,15,opt,name=public_ip,json=publicIp" json:"public_ip,omitempty"`
	ClientSuppliedSteamid       *uint64        `protobuf:"fixed64,20,opt,name=client_supplied_steamid,json=clientSuppliedSteamid" json:"client_supplied_steamid,omitempty"`
	IpCountryCode               *string        `protobuf:"bytes,21,opt,name=ip_country_code,json=ipCountryCode" json:"ip_country_code,omitempty"`
	ParentalSettings            []byte         `protobuf:"bytes,22,opt,name=parental_settings,json=parentalSettings" json:"parental_settings,omitempty"`
	ParentalSettingSignature    []byte         `protobuf:"bytes,23,opt,name=parental_setting_signature,json=parentalSettingSignature" json:"parental_setting_signature,omitempty"`
	CountLoginfailuresToMigrate *int32         `protobuf:"varint,24,opt,name=count_loginfailures_to_migrate,json=countLoginfailuresToMigrate" json:"count_loginfailures_to_migrate,omitempty"`
	CountDisconnectsToMigrate   *int32         `protobuf:"varint,25,opt,name=count_disconnects_to_migrate,json=countDisconnectsToMigrate" json:"count_disconnects_to_migrate,omitempty"`
	OgsDataReportTimeWindow     *int32         `protobuf:"varint,26,opt,name=ogs_data_report_time_window,json=ogsDataReportTimeWindow" json:"ogs_data_report_time_window,omitempty"`
	ClientInstanceId            *uint64        `protobuf:"varint,27,opt,name=client_instance_id,json=clientInstanceId" json:"client_instance_id,omitempty"`
	ForceClientUpdateCheck      *bool          `protobuf:"varint,28,opt,name=force_client_update_check,json=forceClientUpdateCheck" json:"force_client_update_check,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}       `json:"-"`
	XXX_unrecognized            []byte         `json:"-"`
	XXX_sizecache               int32          `json:"-"`
}

func (m *CMsgClientLogonResponse) Reset()         { *m = CMsgClientLogonResponse{} }
func (m *CMsgClientLogonResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLogonResponse) ProtoMessage()    {}
func (*CMsgClientLogonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{5}
}

func (m *CMsgClientLogonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLogonResponse.Unmarshal(m, b)
}
func (m *CMsgClientLogonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLogonResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientLogonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLogonResponse.Merge(m, src)
}
func (m *CMsgClientLogonResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLogonResponse.Size(m)
}
func (m *CMsgClientLogonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLogonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLogonResponse proto.InternalMessageInfo

const Default_CMsgClientLogonResponse_Eresult int32 = 2

func (m *CMsgClientLogonResponse) GetEresult() int32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgClientLogonResponse_Eresult
}

func (m *CMsgClientLogonResponse) GetOutOfGameHeartbeatSeconds() int32 {
	if m != nil && m.OutOfGameHeartbeatSeconds != nil {
		return *m.OutOfGameHeartbeatSeconds
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetInGameHeartbeatSeconds() int32 {
	if m != nil && m.InGameHeartbeatSeconds != nil {
		return *m.InGameHeartbeatSeconds
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetDeprecatedPublicIp() uint32 {
	if m != nil && m.DeprecatedPublicIp != nil {
		return *m.DeprecatedPublicIp
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetRtime32ServerTime() uint32 {
	if m != nil && m.Rtime32ServerTime != nil {
		return *m.Rtime32ServerTime
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetAccountFlags() uint32 {
	if m != nil && m.AccountFlags != nil {
		return *m.AccountFlags
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetCellId() uint32 {
	if m != nil && m.CellId != nil {
		return *m.CellId
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetEmailDomain() string {
	if m != nil && m.EmailDomain != nil {
		return *m.EmailDomain
	}
	return ""
}

func (m *CMsgClientLogonResponse) GetSteam2Ticket() []byte {
	if m != nil {
		return m.Steam2Ticket
	}
	return nil
}

func (m *CMsgClientLogonResponse) GetEresultExtended() int32 {
	if m != nil && m.EresultExtended != nil {
		return *m.EresultExtended
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetWebapiAuthenticateUserNonce() string {
	if m != nil && m.WebapiAuthenticateUserNonce != nil {
		return *m.WebapiAuthenticateUserNonce
	}
	return ""
}

func (m *CMsgClientLogonResponse) GetCellIdPingThreshold() uint32 {
	if m != nil && m.CellIdPingThreshold != nil {
		return *m.CellIdPingThreshold
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetUsePics() bool {
	if m != nil && m.UsePics != nil {
		return *m.UsePics
	}
	return false
}

func (m *CMsgClientLogonResponse) GetVanityUrl() string {
	if m != nil && m.VanityUrl != nil {
		return *m.VanityUrl
	}
	return ""
}

func (m *CMsgClientLogonResponse) GetPublicIp() *CMsgIPAddress {
	if m != nil {
		return m.PublicIp
	}
	return nil
}

func (m *CMsgClientLogonResponse) GetClientSuppliedSteamid() uint64 {
	if m != nil && m.ClientSuppliedSteamid != nil {
		return *m.ClientSuppliedSteamid
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetIpCountryCode() string {
	if m != nil && m.IpCountryCode != nil {
		return *m.IpCountryCode
	}
	return ""
}

func (m *CMsgClientLogonResponse) GetParentalSettings() []byte {
	if m != nil {
		return m.ParentalSettings
	}
	return nil
}

func (m *CMsgClientLogonResponse) GetParentalSettingSignature() []byte {
	if m != nil {
		return m.ParentalSettingSignature
	}
	return nil
}

func (m *CMsgClientLogonResponse) GetCountLoginfailuresToMigrate() int32 {
	if m != nil && m.CountLoginfailuresToMigrate != nil {
		return *m.CountLoginfailuresToMigrate
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetCountDisconnectsToMigrate() int32 {
	if m != nil && m.CountDisconnectsToMigrate != nil {
		return *m.CountDisconnectsToMigrate
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetOgsDataReportTimeWindow() int32 {
	if m != nil && m.OgsDataReportTimeWindow != nil {
		return *m.OgsDataReportTimeWindow
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetClientInstanceId() uint64 {
	if m != nil && m.ClientInstanceId != nil {
		return *m.ClientInstanceId
	}
	return 0
}

func (m *CMsgClientLogonResponse) GetForceClientUpdateCheck() bool {
	if m != nil && m.ForceClientUpdateCheck != nil {
		return *m.ForceClientUpdateCheck
	}
	return false
}

type CMsgClientRequestWebAPIAuthenticateUserNonce struct {
	TokenType            *int32   `protobuf:"varint,1,opt,name=token_type,json=tokenType,def=-1" json:"token_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) Reset() {
	*m = CMsgClientRequestWebAPIAuthenticateUserNonce{}
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientRequestWebAPIAuthenticateUserNonce) ProtoMessage() {}
func (*CMsgClientRequestWebAPIAuthenticateUserNonce) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{6}
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce.Unmarshal(m, b)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce.Marshal(b, m, deterministic)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce.Merge(m, src)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) XXX_Size() int {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce.Size(m)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonce proto.InternalMessageInfo

const Default_CMsgClientRequestWebAPIAuthenticateUserNonce_TokenType int32 = -1

func (m *CMsgClientRequestWebAPIAuthenticateUserNonce) GetTokenType() int32 {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return Default_CMsgClientRequestWebAPIAuthenticateUserNonce_TokenType
}

type CMsgClientRequestWebAPIAuthenticateUserNonceResponse struct {
	Eresult                     *int32   `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	WebapiAuthenticateUserNonce *string  `protobuf:"bytes,11,opt,name=webapi_authenticate_user_nonce,json=webapiAuthenticateUserNonce" json:"webapi_authenticate_user_nonce,omitempty"`
	TokenType                   *int32   `protobuf:"varint,3,opt,name=token_type,json=tokenType,def=-1" json:"token_type,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) Reset() {
	*m = CMsgClientRequestWebAPIAuthenticateUserNonceResponse{}
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgClientRequestWebAPIAuthenticateUserNonceResponse) ProtoMessage() {}
func (*CMsgClientRequestWebAPIAuthenticateUserNonceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{7}
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse.Unmarshal(m, b)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse.Merge(m, src)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse.Size(m)
}
func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientRequestWebAPIAuthenticateUserNonceResponse proto.InternalMessageInfo

const Default_CMsgClientRequestWebAPIAuthenticateUserNonceResponse_Eresult int32 = 2
const Default_CMsgClientRequestWebAPIAuthenticateUserNonceResponse_TokenType int32 = -1

func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) GetEresult() int32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgClientRequestWebAPIAuthenticateUserNonceResponse_Eresult
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) GetWebapiAuthenticateUserNonce() string {
	if m != nil && m.WebapiAuthenticateUserNonce != nil {
		return *m.WebapiAuthenticateUserNonce
	}
	return ""
}

func (m *CMsgClientRequestWebAPIAuthenticateUserNonceResponse) GetTokenType() int32 {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return Default_CMsgClientRequestWebAPIAuthenticateUserNonceResponse_TokenType
}

type CMsgClientLogOff struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientLogOff) Reset()         { *m = CMsgClientLogOff{} }
func (m *CMsgClientLogOff) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLogOff) ProtoMessage()    {}
func (*CMsgClientLogOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{8}
}

func (m *CMsgClientLogOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLogOff.Unmarshal(m, b)
}
func (m *CMsgClientLogOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLogOff.Marshal(b, m, deterministic)
}
func (m *CMsgClientLogOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLogOff.Merge(m, src)
}
func (m *CMsgClientLogOff) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLogOff.Size(m)
}
func (m *CMsgClientLogOff) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLogOff.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLogOff proto.InternalMessageInfo

type CMsgClientLoggedOff struct {
	Eresult              *int32   `protobuf:"varint,1,opt,name=eresult,def=2" json:"eresult,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientLoggedOff) Reset()         { *m = CMsgClientLoggedOff{} }
func (m *CMsgClientLoggedOff) String() string { return proto.CompactTextString(m) }
func (*CMsgClientLoggedOff) ProtoMessage()    {}
func (*CMsgClientLoggedOff) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{9}
}

func (m *CMsgClientLoggedOff) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientLoggedOff.Unmarshal(m, b)
}
func (m *CMsgClientLoggedOff) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientLoggedOff.Marshal(b, m, deterministic)
}
func (m *CMsgClientLoggedOff) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientLoggedOff.Merge(m, src)
}
func (m *CMsgClientLoggedOff) XXX_Size() int {
	return xxx_messageInfo_CMsgClientLoggedOff.Size(m)
}
func (m *CMsgClientLoggedOff) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientLoggedOff.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientLoggedOff proto.InternalMessageInfo

const Default_CMsgClientLoggedOff_Eresult int32 = 2

func (m *CMsgClientLoggedOff) GetEresult() int32 {
	if m != nil && m.Eresult != nil {
		return *m.Eresult
	}
	return Default_CMsgClientLoggedOff_Eresult
}

type CMsgClientNewLoginKey struct {
	UniqueId             *uint32  `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	LoginKey             *string  `protobuf:"bytes,2,opt,name=login_key,json=loginKey" json:"login_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientNewLoginKey) Reset()         { *m = CMsgClientNewLoginKey{} }
func (m *CMsgClientNewLoginKey) String() string { return proto.CompactTextString(m) }
func (*CMsgClientNewLoginKey) ProtoMessage()    {}
func (*CMsgClientNewLoginKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{10}
}

func (m *CMsgClientNewLoginKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientNewLoginKey.Unmarshal(m, b)
}
func (m *CMsgClientNewLoginKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientNewLoginKey.Marshal(b, m, deterministic)
}
func (m *CMsgClientNewLoginKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientNewLoginKey.Merge(m, src)
}
func (m *CMsgClientNewLoginKey) XXX_Size() int {
	return xxx_messageInfo_CMsgClientNewLoginKey.Size(m)
}
func (m *CMsgClientNewLoginKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientNewLoginKey.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientNewLoginKey proto.InternalMessageInfo

func (m *CMsgClientNewLoginKey) GetUniqueId() uint32 {
	if m != nil && m.UniqueId != nil {
		return *m.UniqueId
	}
	return 0
}

func (m *CMsgClientNewLoginKey) GetLoginKey() string {
	if m != nil && m.LoginKey != nil {
		return *m.LoginKey
	}
	return ""
}

type CMsgClientNewLoginKeyAccepted struct {
	UniqueId             *uint32  `protobuf:"varint,1,opt,name=unique_id,json=uniqueId" json:"unique_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientNewLoginKeyAccepted) Reset()         { *m = CMsgClientNewLoginKeyAccepted{} }
func (m *CMsgClientNewLoginKeyAccepted) String() string { return proto.CompactTextString(m) }
func (*CMsgClientNewLoginKeyAccepted) ProtoMessage()    {}
func (*CMsgClientNewLoginKeyAccepted) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{11}
}

func (m *CMsgClientNewLoginKeyAccepted) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientNewLoginKeyAccepted.Unmarshal(m, b)
}
func (m *CMsgClientNewLoginKeyAccepted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientNewLoginKeyAccepted.Marshal(b, m, deterministic)
}
func (m *CMsgClientNewLoginKeyAccepted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientNewLoginKeyAccepted.Merge(m, src)
}
func (m *CMsgClientNewLoginKeyAccepted) XXX_Size() int {
	return xxx_messageInfo_CMsgClientNewLoginKeyAccepted.Size(m)
}
func (m *CMsgClientNewLoginKeyAccepted) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientNewLoginKeyAccepted.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientNewLoginKeyAccepted proto.InternalMessageInfo

func (m *CMsgClientNewLoginKeyAccepted) GetUniqueId() uint32 {
	if m != nil && m.UniqueId != nil {
		return *m.UniqueId
	}
	return 0
}

type CMsgClientAccountInfo struct {
	PersonaName                     *string  `protobuf:"bytes,1,opt,name=persona_name,json=personaName" json:"persona_name,omitempty"`
	IpCountry                       *string  `protobuf:"bytes,2,opt,name=ip_country,json=ipCountry" json:"ip_country,omitempty"`
	CountAuthedComputers            *int32   `protobuf:"varint,5,opt,name=count_authed_computers,json=countAuthedComputers" json:"count_authed_computers,omitempty"`
	AccountFlags                    *uint32  `protobuf:"varint,7,opt,name=account_flags,json=accountFlags" json:"account_flags,omitempty"`
	FacebookId                      *uint64  `protobuf:"varint,8,opt,name=facebook_id,json=facebookId" json:"facebook_id,omitempty"`
	FacebookName                    *string  `protobuf:"bytes,9,opt,name=facebook_name,json=facebookName" json:"facebook_name,omitempty"`
	SteamguardNotifyNewmachines     *bool    `protobuf:"varint,14,opt,name=steamguard_notify_newmachines,json=steamguardNotifyNewmachines" json:"steamguard_notify_newmachines,omitempty"`
	SteamguardMachineNameUserChosen *string  `protobuf:"bytes,15,opt,name=steamguard_machine_name_user_chosen,json=steamguardMachineNameUserChosen" json:"steamguard_machine_name_user_chosen,omitempty"`
	IsPhoneVerified                 *bool    `protobuf:"varint,16,opt,name=is_phone_verified,json=isPhoneVerified" json:"is_phone_verified,omitempty"`
	TwoFactorState                  *uint32  `protobuf:"varint,17,opt,name=two_factor_state,json=twoFactorState" json:"two_factor_state,omitempty"`
	IsPhoneIdentifying              *bool    `protobuf:"varint,18,opt,name=is_phone_identifying,json=isPhoneIdentifying" json:"is_phone_identifying,omitempty"`
	IsPhoneNeedingReverify          *bool    `protobuf:"varint,19,opt,name=is_phone_needing_reverify,json=isPhoneNeedingReverify" json:"is_phone_needing_reverify,omitempty"`
	XXX_NoUnkeyedLiteral            struct{} `json:"-"`
	XXX_unrecognized                []byte   `json:"-"`
	XXX_sizecache                   int32    `json:"-"`
}

func (m *CMsgClientAccountInfo) Reset()         { *m = CMsgClientAccountInfo{} }
func (m *CMsgClientAccountInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgClientAccountInfo) ProtoMessage()    {}
func (*CMsgClientAccountInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{12}
}

func (m *CMsgClientAccountInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientAccountInfo.Unmarshal(m, b)
}
func (m *CMsgClientAccountInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientAccountInfo.Marshal(b, m, deterministic)
}
func (m *CMsgClientAccountInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientAccountInfo.Merge(m, src)
}
func (m *CMsgClientAccountInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgClientAccountInfo.Size(m)
}
func (m *CMsgClientAccountInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientAccountInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientAccountInfo proto.InternalMessageInfo

func (m *CMsgClientAccountInfo) GetPersonaName() string {
	if m != nil && m.PersonaName != nil {
		return *m.PersonaName
	}
	return ""
}

func (m *CMsgClientAccountInfo) GetIpCountry() string {
	if m != nil && m.IpCountry != nil {
		return *m.IpCountry
	}
	return ""
}

func (m *CMsgClientAccountInfo) GetCountAuthedComputers() int32 {
	if m != nil && m.CountAuthedComputers != nil {
		return *m.CountAuthedComputers
	}
	return 0
}

func (m *CMsgClientAccountInfo) GetAccountFlags() uint32 {
	if m != nil && m.AccountFlags != nil {
		return *m.AccountFlags
	}
	return 0
}

func (m *CMsgClientAccountInfo) GetFacebookId() uint64 {
	if m != nil && m.FacebookId != nil {
		return *m.FacebookId
	}
	return 0
}

func (m *CMsgClientAccountInfo) GetFacebookName() string {
	if m != nil && m.FacebookName != nil {
		return *m.FacebookName
	}
	return ""
}

func (m *CMsgClientAccountInfo) GetSteamguardNotifyNewmachines() bool {
	if m != nil && m.SteamguardNotifyNewmachines != nil {
		return *m.SteamguardNotifyNewmachines
	}
	return false
}

func (m *CMsgClientAccountInfo) GetSteamguardMachineNameUserChosen() string {
	if m != nil && m.SteamguardMachineNameUserChosen != nil {
		return *m.SteamguardMachineNameUserChosen
	}
	return ""
}

func (m *CMsgClientAccountInfo) GetIsPhoneVerified() bool {
	if m != nil && m.IsPhoneVerified != nil {
		return *m.IsPhoneVerified
	}
	return false
}

func (m *CMsgClientAccountInfo) GetTwoFactorState() uint32 {
	if m != nil && m.TwoFactorState != nil {
		return *m.TwoFactorState
	}
	return 0
}

func (m *CMsgClientAccountInfo) GetIsPhoneIdentifying() bool {
	if m != nil && m.IsPhoneIdentifying != nil {
		return *m.IsPhoneIdentifying
	}
	return false
}

func (m *CMsgClientAccountInfo) GetIsPhoneNeedingReverify() bool {
	if m != nil && m.IsPhoneNeedingReverify != nil {
		return *m.IsPhoneNeedingReverify
	}
	return false
}

type CMsgClientChallengeRequest struct {
	Steamid              *uint64  `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientChallengeRequest) Reset()         { *m = CMsgClientChallengeRequest{} }
func (m *CMsgClientChallengeRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgClientChallengeRequest) ProtoMessage()    {}
func (*CMsgClientChallengeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{13}
}

func (m *CMsgClientChallengeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientChallengeRequest.Unmarshal(m, b)
}
func (m *CMsgClientChallengeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientChallengeRequest.Marshal(b, m, deterministic)
}
func (m *CMsgClientChallengeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientChallengeRequest.Merge(m, src)
}
func (m *CMsgClientChallengeRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgClientChallengeRequest.Size(m)
}
func (m *CMsgClientChallengeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientChallengeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientChallengeRequest proto.InternalMessageInfo

func (m *CMsgClientChallengeRequest) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CMsgClientChallengeResponse struct {
	Challenge            *uint64  `protobuf:"fixed64,1,opt,name=challenge" json:"challenge,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgClientChallengeResponse) Reset()         { *m = CMsgClientChallengeResponse{} }
func (m *CMsgClientChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgClientChallengeResponse) ProtoMessage()    {}
func (*CMsgClientChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c98cb07f62c057af, []int{14}
}

func (m *CMsgClientChallengeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgClientChallengeResponse.Unmarshal(m, b)
}
func (m *CMsgClientChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgClientChallengeResponse.Marshal(b, m, deterministic)
}
func (m *CMsgClientChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgClientChallengeResponse.Merge(m, src)
}
func (m *CMsgClientChallengeResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgClientChallengeResponse.Size(m)
}
func (m *CMsgClientChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgClientChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgClientChallengeResponse proto.InternalMessageInfo

func (m *CMsgClientChallengeResponse) GetChallenge() uint64 {
	if m != nil && m.Challenge != nil {
		return *m.Challenge
	}
	return 0
}

func init() {
	proto.RegisterType((*CMsgClientHeartBeat)(nil), "CMsgClientHeartBeat")
	proto.RegisterType((*CMsgClientServerTimestampRequest)(nil), "CMsgClientServerTimestampRequest")
	proto.RegisterType((*CMsgClientServerTimestampResponse)(nil), "CMsgClientServerTimestampResponse")
	proto.RegisterType((*CMsgClientSecret)(nil), "CMsgClientSecret")
	proto.RegisterType((*CMsgClientLogon)(nil), "CMsgClientLogon")
	proto.RegisterType((*CMsgClientLogonResponse)(nil), "CMsgClientLogonResponse")
	proto.RegisterType((*CMsgClientRequestWebAPIAuthenticateUserNonce)(nil), "CMsgClientRequestWebAPIAuthenticateUserNonce")
	proto.RegisterType((*CMsgClientRequestWebAPIAuthenticateUserNonceResponse)(nil), "CMsgClientRequestWebAPIAuthenticateUserNonceResponse")
	proto.RegisterType((*CMsgClientLogOff)(nil), "CMsgClientLogOff")
	proto.RegisterType((*CMsgClientLoggedOff)(nil), "CMsgClientLoggedOff")
	proto.RegisterType((*CMsgClientNewLoginKey)(nil), "CMsgClientNewLoginKey")
	proto.RegisterType((*CMsgClientNewLoginKeyAccepted)(nil), "CMsgClientNewLoginKeyAccepted")
	proto.RegisterType((*CMsgClientAccountInfo)(nil), "CMsgClientAccountInfo")
	proto.RegisterType((*CMsgClientChallengeRequest)(nil), "CMsgClientChallengeRequest")
	proto.RegisterType((*CMsgClientChallengeResponse)(nil), "CMsgClientChallengeResponse")
}

func init() {
	proto.RegisterFile("steammessages_clientserver_login.proto", fileDescriptor_c98cb07f62c057af)
}

var fileDescriptor_c98cb07f62c057af = []byte{
	// 2287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x58, 0x5b, 0x73, 0x1b, 0xb7,
	0x15, 0x2e, 0x13, 0xc9, 0x14, 0x21, 0xea, 0xb6, 0xba, 0x41, 0x92, 0x2f, 0x12, 0xd3, 0x3a, 0x4a,
	0x9c, 0x78, 0x1c, 0x39, 0x93, 0x36, 0xa9, 0x67, 0x52, 0x59, 0xae, 0x13, 0x4e, 0x74, 0xa1, 0x57,
	0xb2, 0xdd, 0x4b, 0x5a, 0x14, 0xdc, 0x3d, 0x5c, 0x62, 0xb4, 0x04, 0xd6, 0x0b, 0xac, 0x68, 0xbe,
	0xf5, 0xb1, 0x2f, 0xfd, 0x0d, 0xfd, 0x21, 0xfd, 0x11, 0x7d, 0xea, 0xff, 0xe9, 0xe0, 0x00, 0x4b,
	0x2e, 0x6d, 0xd9, 0xbd, 0x4c, 0xdf, 0xb4, 0xdf, 0xf9, 0x00, 0x1c, 0xe0, 0xdc, 0x3e, 0x8a, 0xdc,
	0xd5, 0x06, 0xf8, 0x60, 0x00, 0x5a, 0xf3, 0x04, 0x34, 0x8b, 0x52, 0x01, 0xd2, 0x68, 0xc8, 0xaf,
	0x20, 0x67, 0xa9, 0x4a, 0x84, 0xbc, 0x9f, 0xe5, 0xca, 0xa8, 0x6d, 0x3a, 0xcd, 0xeb, 0x72, 0x0d,
	0xce, 0xd2, 0x5a, 0x27, 0xab, 0x47, 0x27, 0x3a, 0x39, 0xc2, 0x95, 0xdf, 0x03, 0xcf, 0xcd, 0x63,
	0xe0, 0xa6, 0xf5, 0x23, 0xd9, 0x9d, 0xc0, 0xe7, 0xb8, 0xe1, 0x85, 0x18, 0x80, 0x36, 0x7c, 0x90,
	0x85, 0xf0, 0xaa, 0x00, 0x6d, 0x82, 0x5f, 0x10, 0xea, 0x0e, 0x64, 0xb9, 0x43, 0x98, 0x29, 0x29,
	0xb4, 0xb6, 0x5b, 0xdb, 0x9f, 0x09, 0x37, 0x9c, 0xdd, 0x2f, 0x18, 0x6f, 0xd0, 0xfa, 0x6b, 0x8d,
	0xec, 0xbd, 0x67, 0x7b, 0x9d, 0x29, 0xa9, 0xe1, 0x7f, 0xdf, 0x3f, 0xb8, 0x4f, 0x56, 0xfd, 0x23,
	0x8c, 0x57, 0xb0, 0x81, 0xa6, 0x1f, 0xe0, 0xa2, 0x15, 0x3d, 0x7d, 0xde, 0x89, 0x6e, 0xfd, 0xa5,
	0x46, 0x96, 0xab, 0xfe, 0x44, 0x39, 0x98, 0x80, 0x92, 0xfa, 0x15, 0xe4, 0x5a, 0x28, 0x89, 0xa7,
	0x2d, 0x84, 0xe5, 0x67, 0xb0, 0x46, 0x66, 0x79, 0x96, 0x89, 0x18, 0x37, 0x5c, 0x08, 0xdd, 0x47,
	0xb0, 0x4d, 0xe6, 0x62, 0xb8, 0x12, 0x11, 0x88, 0x98, 0x7e, 0x88, 0x86, 0xf1, 0xb7, 0x5d, 0x21,
	0x95, 0x8c, 0x80, 0xce, 0xec, 0xd6, 0xf6, 0x6f, 0x84, 0xee, 0x23, 0x08, 0xc8, 0x4c, 0x7f, 0xc0,
	0x23, 0x3a, 0xbb, 0x5b, 0xdb, 0x6f, 0x86, 0xf8, 0x77, 0xeb, 0x9f, 0x01, 0x59, 0x9a, 0xb8, 0x72,
	0xac, 0x12, 0x25, 0x83, 0x4f, 0xc8, 0x32, 0x06, 0x2b, 0x52, 0x29, 0x9b, 0x76, 0x69, 0xa9, 0xc4,
	0x5f, 0x78, 0xd7, 0x7e, 0x20, 0xad, 0x18, 0xb2, 0x1c, 0x22, 0x6e, 0x20, 0x66, 0xaa, 0xdb, 0x2b,
	0xb4, 0x29, 0xdc, 0x47, 0x96, 0x8b, 0x2b, 0x6e, 0x80, 0x89, 0xcc, 0xfb, 0x7d, 0x67, 0xc2, 0x3c,
	0xab, 0x10, 0x3b, 0x8e, 0xd7, 0xce, 0x82, 0x4d, 0x52, 0x8f, 0x20, 0x4d, 0xd9, 0xf8, 0x42, 0x37,
	0xec, 0x67, 0x3b, 0x0e, 0xee, 0x92, 0xa5, 0x94, 0x6b, 0xc3, 0x34, 0x68, 0x7b, 0xaa, 0x25, 0xcc,
	0x20, 0x61, 0xc1, 0xc2, 0xe7, 0x0e, 0x6d, 0xc7, 0xc1, 0x97, 0xc4, 0x47, 0x88, 0x65, 0x3c, 0xba,
	0xe4, 0x09, 0x8c, 0xdd, 0x9f, 0x45, 0xfa, 0x9a, 0xb3, 0x76, 0x9c, 0xb1, 0xbc, 0xc3, 0xc7, 0x64,
	0xc9, 0xaf, 0x4a, 0xb9, 0x4c, 0x0a, 0x9e, 0x00, 0xbd, 0xb1, 0x5b, 0xdb, 0x6f, 0x84, 0x8b, 0x0e,
	0x3e, 0xf6, 0x68, 0xf0, 0x53, 0xe2, 0x11, 0xa6, 0x34, 0x33, 0xa3, 0x0c, 0x68, 0x1d, 0xb7, 0x6d,
	0x3a, 0xf4, 0x4c, 0x5f, 0x8c, 0x32, 0x08, 0xbe, 0x25, 0x54, 0xf7, 0x55, 0x91, 0xc6, 0x2c, 0x87,
	0x01, 0x0c, 0xba, 0x90, 0xb3, 0x8c, 0x6b, 0x3d, 0x54, 0x79, 0x4c, 0xe7, 0x76, 0x6b, 0xfb, 0x73,
	0xdf, 0xcc, 0xf6, 0x78, 0xaa, 0x21, 0xdc, 0x70, 0xb4, 0xd0, 0xb3, 0x3a, 0x9e, 0x14, 0xec, 0x91,
	0xe6, 0x50, 0xc8, 0x89, 0xef, 0x0d, 0x74, 0x66, 0xde, 0x62, 0xa5, 0xcb, 0x1f, 0x91, 0x85, 0xca,
	0xb3, 0x7f, 0xf1, 0x80, 0x12, 0xe7, 0xc8, 0x04, 0xfc, 0xe2, 0x41, 0xf0, 0x98, 0xac, 0x63, 0x40,
	0xde, 0x0a, 0xc7, 0xfc, 0x6e, 0x6d, 0x7f, 0xfe, 0x60, 0xf1, 0xbe, 0x8d, 0x7b, 0xbb, 0x73, 0x18,
	0xc7, 0x39, 0x68, 0x1d, 0xae, 0x4e, 0xc8, 0x93, 0x90, 0x3c, 0x20, 0x6b, 0x95, 0x83, 0xb2, 0xa2,
	0x9b, 0x8a, 0xc8, 0x6e, 0xb1, 0x86, 0xe7, 0x05, 0x13, 0x5b, 0x07, 0x4d, 0xed, 0x2c, 0xd8, 0x21,
	0x8d, 0x57, 0x4a, 0xb3, 0x14, 0xae, 0x20, 0xa5, 0xeb, 0x2e, 0x2f, 0x5f, 0x29, 0x7d, 0x6c, 0xbf,
	0x83, 0x9f, 0x8f, 0x4b, 0x4c, 0x17, 0x59, 0x96, 0x0a, 0x88, 0x19, 0x76, 0x0a, 0x1b, 0xd1, 0x0d,
	0x4c, 0xd5, 0x75, 0x67, 0x3f, 0xf7, 0xe6, 0x73, 0x6b, 0x6d, 0xc7, 0xc1, 0x3d, 0xd2, 0x98, 0x1c,
	0xbe, 0x79, 0xad, 0xff, 0x73, 0x59, 0xe9, 0xc2, 0x2d, 0x42, 0x06, 0x3c, 0xea, 0xdb, 0x37, 0x14,
	0x31, 0xbd, 0x8d, 0xd9, 0xde, 0xf0, 0x08, 0x66, 0xd3, 0x42, 0xca, 0x0b, 0x19, 0xf5, 0x6d, 0xbd,
	0xda, 0x28, 0xde, 0xb1, 0x5e, 0x7e, 0x53, 0x7b, 0x10, 0x36, 0x4b, 0x1c, 0x03, 0xb9, 0x4d, 0xea,
	0x85, 0x60, 0x03, 0x15, 0x03, 0xdd, 0x2d, 0x19, 0x37, 0x0a, 0x71, 0xa2, 0x62, 0x08, 0x6e, 0x93,
	0x46, 0xd4, 0xe7, 0xc6, 0x59, 0xf7, 0x4a, 0xeb, 0x9c, 0xc5, 0xd0, 0xfe, 0x19, 0x09, 0xf0, 0x62,
	0x07, 0x8c, 0x17, 0xa6, 0xcf, 0x8c, 0x88, 0x2e, 0xc1, 0xd0, 0x4f, 0xd0, 0x95, 0x65, 0x67, 0x39,
	0x2c, 0x4c, 0xff, 0x02, 0x71, 0x1b, 0x4e, 0x18, 0x70, 0x91, 0x32, 0xee, 0xee, 0x42, 0x3f, 0xc5,
	0x90, 0x37, 0x11, 0xf4, 0xf7, 0xb3, 0xed, 0x29, 0xb7, 0xed, 0xe5, 0xe1, 0x01, 0xe3, 0x51, 0xa4,
	0x0a, 0x69, 0x58, 0x94, 0x03, 0x37, 0x36, 0x45, 0xee, 0xed, 0xd6, 0xf6, 0xeb, 0xe1, 0x86, 0xb7,
	0x1f, 0x3a, 0xf3, 0x91, 0xb7, 0xda, 0x84, 0x2a, 0x57, 0x48, 0x3e, 0x00, 0x7a, 0xe0, 0x12, 0xca,
	0x63, 0xa7, 0x7c, 0x60, 0xef, 0x3a, 0x37, 0x4e, 0xd2, 0x87, 0x68, 0x1e, 0x7f, 0x07, 0x9f, 0x92,
	0x95, 0x84, 0x0f, 0x80, 0x95, 0x2d, 0x4e, 0x5d, 0x82, 0xa4, 0x5f, 0x22, 0x69, 0xc9, 0x1a, 0x7c,
	0x3f, 0xb5, 0xb0, 0x8d, 0x3e, 0xce, 0x01, 0x76, 0x09, 0x23, 0xfa, 0xc8, 0x6d, 0x84, 0xc0, 0x0f,
	0x30, 0x0a, 0x9e, 0x92, 0x9b, 0x43, 0xae, 0x59, 0xa4, 0xe4, 0x15, 0xe4, 0x36, 0x9f, 0x2a, 0xa9,
	0x35, 0xd0, 0x09, 0x7d, 0x5a, 0xad, 0x8e, 0xad, 0x21, 0xd7, 0x47, 0x25, 0xf3, 0xc9, 0x98, 0x78,
	0xa2, 0x93, 0xe0, 0x57, 0xe4, 0x16, 0x97, 0x4a, 0xb2, 0x42, 0x5b, 0x77, 0x78, 0x9e, 0x80, 0x61,
	0x53, 0x17, 0xec, 0xe0, 0xc1, 0x5b, 0x96, 0xf4, 0x5c, 0x43, 0x7e, 0x81, 0x94, 0xc3, 0xca, 0x75,
	0x1f, 0x92, 0x8d, 0x1c, 0xb4, 0x4a, 0xaf, 0x20, 0x76, 0xbb, 0x8c, 0xb3, 0xf0, 0x19, 0x66, 0xe1,
	0x6a, 0x69, 0xb5, 0xcb, 0xcb, 0x1c, 0xfc, 0x9c, 0x04, 0x90, 0x83, 0x2e, 0x52, 0xdb, 0x88, 0xa4,
	0xc9, 0x47, 0x3d, 0x91, 0x02, 0x0d, 0x77, 0x6b, 0xfb, 0xb3, 0xe1, 0x8a, 0xb7, 0x9c, 0x8f, 0x0d,
	0xc1, 0xcf, 0xc8, 0xa2, 0xee, 0xf3, 0x2a, 0xf5, 0x1c, 0xc3, 0xbf, 0xa0, 0xfb, 0xbc, 0x42, 0xdb,
	0x21, 0x0d, 0x4c, 0x91, 0xc8, 0x66, 0xd2, 0x85, 0x7b, 0x31, 0x0b, 0x1c, 0xd9, 0x34, 0xda, 0x22,
	0x73, 0xca, 0x64, 0x2e, 0x4b, 0x9f, 0xe3, 0x41, 0x75, 0x65, 0x32, 0xcc, 0xce, 0x1d, 0xd2, 0xb0,
	0xa6, 0x2b, 0x9e, 0x16, 0x40, 0x5f, 0xb8, 0x3a, 0x53, 0x26, 0x7b, 0x61, 0xbf, 0xed, 0xd9, 0xd6,
	0x28, 0x62, 0x90, 0x46, 0xf4, 0x04, 0xe4, 0xf4, 0x25, 0xee, 0xbc, 0xa0, 0x4c, 0xd6, 0x1e, 0x83,
	0xc1, 0x01, 0x59, 0xf7, 0x59, 0xea, 0x12, 0xb4, 0x1c, 0x7c, 0xf4, 0x37, 0x36, 0x12, 0xe1, 0xaa,
	0x33, 0xba, 0x24, 0x2d, 0xa7, 0xf0, 0x5d, 0xb2, 0xa4, 0x95, 0x1c, 0xb1, 0x4c, 0xcb, 0x32, 0xad,
	0x7f, 0xe7, 0xef, 0xa5, 0xe4, 0xa8, 0xa3, 0xa5, 0xcf, 0xe9, 0xcf, 0xc9, 0xea, 0x98, 0x67, 0x33,
	0x47, 0x44, 0x58, 0x8d, 0xbf, 0x47, 0x3f, 0x96, 0x3d, 0xf7, 0xdc, 0x19, 0xda, 0x71, 0xf0, 0x5b,
	0xf2, 0x31, 0x66, 0x33, 0x30, 0x09, 0x43, 0x5c, 0x94, 0x0a, 0x79, 0x09, 0xf1, 0x38, 0xb0, 0xa2,
	0xc7, 0x24, 0x40, 0x0c, 0x31, 0xfd, 0xb1, 0x9a, 0x26, 0x7b, 0x6e, 0xd5, 0x29, 0x0c, 0x3b, 0x5a,
	0x1e, 0xe3, 0x12, 0x1f, 0xe8, 0x76, 0xef, 0x14, 0xf9, 0x41, 0x8b, 0x2c, 0x8c, 0x3d, 0xc1, 0xf4,
	0xf8, 0x83, 0xcb, 0x7f, 0xef, 0x03, 0x26, 0xc4, 0x3d, 0x12, 0x54, 0x73, 0x9c, 0x67, 0xf6, 0xf1,
	0xe8, 0x1f, 0xf1, 0xc9, 0x2b, 0x49, 0x7e, 0x98, 0x65, 0xed, 0x38, 0x68, 0x93, 0x3d, 0x7c, 0x99,
	0xa4, 0xe0, 0x79, 0xcc, 0x62, 0x85, 0x8a, 0xc1, 0xb7, 0xfa, 0x48, 0x0d, 0xb2, 0xc2, 0x40, 0x4e,
	0x19, 0x3e, 0xe1, 0xed, 0x09, 0xf1, 0x89, 0xb2, 0xca, 0xc1, 0xd1, 0x8e, 0x3c, 0xcb, 0x96, 0x66,
	0xd9, 0xaa, 0xd0, 0xb5, 0x3f, 0x39, 0xd7, 0x3c, 0x86, 0xae, 0x7d, 0x45, 0x36, 0xab, 0x14, 0xcc,
	0xd7, 0xa8, 0xaf, 0x34, 0x48, 0xca, 0x91, 0xbd, 0x5e, 0x61, 0x3f, 0x1f, 0x1b, 0xed, 0x14, 0xc7,
	0x77, 0xc8, 0x47, 0x4c, 0x5d, 0x41, 0x9e, 0x8b, 0x18, 0x68, 0xd7, 0x55, 0xad, 0xc7, 0xcf, 0x3c,
	0x1c, 0xec, 0x92, 0xa6, 0xd0, 0xbe, 0x06, 0xba, 0xea, 0x35, 0x8d, 0xd0, 0x77, 0x22, 0x34, 0xa6,
	0xfe, 0x63, 0xf5, 0xda, 0xf6, 0x33, 0xdf, 0xb8, 0x85, 0xd4, 0x86, 0x4b, 0x17, 0xcc, 0x18, 0x05,
	0xce, 0xb2, 0xb3, 0xb4, 0xbd, 0xc1, 0xcd, 0x6b, 0x33, 0x54, 0xac, 0xc7, 0x23, 0xa3, 0x72, 0x97,
	0xd9, 0xe0, 0xf2, 0xcf, 0x0c, 0xd5, 0x53, 0x44, 0x31, 0xbd, 0xbf, 0x25, 0x37, 0xed, 0x1c, 0x50,
	0xb9, 0xd1, 0x2c, 0xb7, 0xb1, 0x4f, 0xc5, 0x40, 0xd8, 0xc7, 0x74, 0x8a, 0x8c, 0xf6, 0xd0, 0x8f,
	0xad, 0x92, 0x13, 0x72, 0x03, 0xc7, 0x96, 0x31, 0x96, 0x6c, 0x77, 0xc9, 0xd2, 0x10, 0xba, 0x56,
	0x7a, 0x2a, 0xc9, 0x9c, 0xe2, 0x49, 0xdc, 0x41, 0x43, 0xe8, 0xa2, 0x98, 0x39, 0x45, 0xe5, 0xf3,
	0x31, 0x59, 0xca, 0x72, 0xa1, 0x72, 0x61, 0x46, 0x2c, 0x07, 0xae, 0x95, 0xa4, 0x7d, 0x8c, 0xed,
	0x62, 0x09, 0x87, 0x88, 0x06, 0xdf, 0x91, 0x0d, 0x1b, 0xa0, 0x38, 0x86, 0x98, 0x95, 0x93, 0x0a,
	0xe5, 0x19, 0x15, 0x38, 0x74, 0x56, 0xee, 0xbf, 0xa9, 0xdb, 0xc2, 0xb5, 0x72, 0x41, 0x15, 0x6d,
	0xfd, 0xad, 0x41, 0x36, 0xdf, 0xd0, 0x55, 0x63, 0xaf, 0x77, 0x48, 0xdd, 0xb7, 0x0b, 0x94, 0x55,
	0xb3, 0xdf, 0xd4, 0x0e, 0xc2, 0x12, 0xb1, 0xcd, 0x4d, 0x15, 0x86, 0xa9, 0x1e, 0xc3, 0x84, 0xec,
	0x5b, 0x89, 0xdc, 0x05, 0x8e, 0x7e, 0x28, 0x19, 0x3b, 0x55, 0x39, 0x1b, 0x6e, 0xa9, 0xc2, 0x9c,
	0xf5, 0xbe, 0xe3, 0x03, 0xf8, 0xbe, 0x64, 0x9c, 0x3b, 0x42, 0xf0, 0x35, 0xd9, 0x12, 0xf2, 0x5d,
	0xab, 0x3f, 0xc4, 0xd5, 0x1b, 0x42, 0x5e, 0xbb, 0xf4, 0x5d, 0xe3, 0x7e, 0xe6, 0x9d, 0xe3, 0xfe,
	0x3e, 0x59, 0x2d, 0xa7, 0x52, 0x45, 0x02, 0xa3, 0xde, 0xaa, 0x87, 0x2b, 0xde, 0x34, 0x51, 0xdc,
	0x76, 0xd4, 0x95, 0x15, 0xdd, 0x4b, 0x79, 0xa2, 0x51, 0x6a, 0x2d, 0x84, 0xe5, 0x80, 0x7a, 0x6a,
	0xb1, 0xaa, 0x10, 0xac, 0x4f, 0x09, 0xc1, 0x3d, 0xe2, 0x66, 0x22, 0x8b, 0xd5, 0x80, 0x0b, 0x89,
	0x7a, 0xaa, 0x11, 0xce, 0x23, 0xf6, 0x04, 0x21, 0x7b, 0xc0, 0x54, 0x4f, 0x43, 0xf9, 0xd4, 0x0c,
	0x9b, 0xd5, 0x5e, 0x66, 0x6b, 0xa3, 0x6c, 0xe5, 0xf0, 0xda, 0x80, 0xb4, 0x6d, 0x85, 0xb8, 0x62,
	0xf7, 0xf8, 0xaf, 0x3d, 0x1c, 0x1c, 0x91, 0xdb, 0x43, 0xe8, 0xf2, 0x4c, 0xe0, 0x24, 0xb7, 0xad,
	0xd3, 0x3e, 0x80, 0x9b, 0x1a, 0x2e, 0xe3, 0xe6, 0xd1, 0x89, 0x1d, 0xc7, 0x3a, 0xac, 0x90, 0x6c,
	0x31, 0xba, 0xfc, 0x7b, 0x48, 0x36, 0xfc, 0x85, 0x58, 0x26, 0x64, 0xc2, 0x4c, 0x3f, 0x07, 0xdd,
	0x57, 0x69, 0x4c, 0x9b, 0x78, 0xbf, 0x55, 0x77, 0xbf, 0x8e, 0x90, 0xc9, 0x45, 0x69, 0xb2, 0xcd,
	0xbf, 0xd0, 0xc0, 0x32, 0x11, 0x69, 0xba, 0x80, 0x95, 0x50, 0x2f, 0x34, 0x74, 0x44, 0xa4, 0xad,
	0xc2, 0xb9, 0xe2, 0xd2, 0x66, 0x73, 0x91, 0xa7, 0x74, 0x11, 0x1d, 0x68, 0x38, 0xe4, 0x79, 0x9e,
	0x4e, 0xab, 0xa5, 0xa5, 0x7f, 0xa3, 0x96, 0xbe, 0x22, 0x9b, 0xd7, 0x6a, 0x32, 0x11, 0xa3, 0xca,
	0xbb, 0x5e, 0x92, 0x09, 0x2c, 0x72, 0x91, 0xb1, 0xb2, 0xc5, 0x60, 0x91, 0xaf, 0xbb, 0xda, 0x13,
	0xd9, 0x91, 0x43, 0xb1, 0xc8, 0xef, 0x91, 0x95, 0x8c, 0xe7, 0x20, 0x0d, 0x4f, 0x99, 0x06, 0x63,
	0x84, 0x4c, 0x34, 0x8a, 0xbd, 0x66, 0xb8, 0x5c, 0x1a, 0xce, 0x3d, 0x1e, 0x3c, 0x22, 0xdb, 0x6f,
	0x92, 0x99, 0x16, 0x89, 0xe4, 0xa6, 0xc8, 0x01, 0x85, 0x5f, 0x33, 0xa4, 0x6f, 0xac, 0x3a, 0x2f,
	0xed, 0x36, 0x56, 0x2e, 0xb5, 0x50, 0x72, 0xf4, 0xb8, 0x48, 0x8b, 0x1c, 0x34, 0x33, 0x8a, 0x0d,
	0x44, 0x62, 0x1b, 0x0c, 0xa5, 0x18, 0xe4, 0x1d, 0x64, 0x1d, 0x57, 0x49, 0x17, 0xea, 0xc4, 0x51,
	0x6c, 0x53, 0x72, 0x9b, 0xc4, 0x42, 0x47, 0x4a, 0x4a, 0x88, 0xcc, 0xd4, 0x16, 0x5b, 0xae, 0xfe,
	0x90, 0xf3, 0x64, 0x42, 0x99, 0x6c, 0xf0, 0x88, 0xec, 0xa8, 0x44, 0xb3, 0x98, 0x1b, 0xce, 0x72,
	0xb0, 0x9d, 0x0b, 0x6b, 0x82, 0x0d, 0x85, 0x8c, 0xd5, 0x90, 0x6e, 0xe3, 0xfa, 0x4d, 0x95, 0xe8,
	0x27, 0xdc, 0xf0, 0x10, 0x09, 0xb6, 0x34, 0x5e, 0xa2, 0xf9, 0x1d, 0x9d, 0x76, 0xe7, 0x1d, 0x9d,
	0xf6, 0x6b, 0xb2, 0xd5, 0x53, 0x79, 0x04, 0x65, 0xb3, 0x2a, 0xb2, 0xd8, 0x66, 0x67, 0xd4, 0x87,
	0xe8, 0x92, 0xde, 0xc4, 0xa4, 0xd9, 0x40, 0x82, 0xeb, 0x43, 0xcf, 0xd1, 0x7c, 0x64, 0xad, 0xad,
	0x67, 0xe4, 0xb3, 0x49, 0x83, 0xf2, 0xd3, 0xfd, 0x25, 0x74, 0x0f, 0x3b, 0xed, 0xeb, 0x73, 0x78,
	0x8f, 0x10, 0x94, 0x7e, 0x4e, 0x8d, 0xb8, 0xc6, 0xf5, 0xc1, 0xe7, 0x5f, 0x84, 0x0d, 0x44, 0xad,
	0x26, 0x69, 0xfd, 0xbd, 0x46, 0xbe, 0xfc, 0x6f, 0xf6, 0xfc, 0xcf, 0x3a, 0xe2, 0xff, 0xa5, 0x02,
	0xa7, 0xbd, 0xff, 0xf0, 0x3a, 0xef, 0x83, 0xea, 0x8f, 0xf2, 0x63, 0x95, 0x9c, 0xf5, 0x7a, 0xad,
	0x83, 0xea, 0xbf, 0x2b, 0x8e, 0x55, 0x92, 0x40, 0x7c, 0xd6, 0xeb, 0xbd, 0xd7, 0xdf, 0xd6, 0x33,
	0xb2, 0x3e, 0x59, 0x73, 0x0a, 0xc3, 0xe3, 0x52, 0xff, 0xee, 0x90, 0x46, 0x21, 0xc5, 0xab, 0x02,
	0x23, 0xea, 0x7e, 0x50, 0xcf, 0x39, 0xa0, 0x1d, 0x4f, 0x2b, 0xe7, 0x0f, 0xa6, 0x95, 0x73, 0xeb,
	0x11, 0xb9, 0x75, 0xed, 0x96, 0x87, 0x51, 0x04, 0x99, 0x81, 0xf8, 0xbd, 0x5b, 0xb7, 0xfe, 0x31,
	0x53, 0xf5, 0xa8, 0x94, 0x47, 0xb2, 0xa7, 0x6c, 0x3f, 0xcd, 0x20, 0xd7, 0x4a, 0x72, 0x27, 0x3f,
	0x6a, 0xae, 0x9f, 0x7a, 0x0c, 0xe5, 0xc7, 0x2d, 0x42, 0x26, 0x65, 0xee, 0x1d, 0x6b, 0x8c, 0x2b,
	0x1c, 0x7f, 0x72, 0x63, 0xb5, 0x60, 0x6c, 0xe2, 0xb1, 0xfe, 0xd1, 0x38, 0x02, 0x66, 0xc3, 0x35,
	0xb4, 0x62, 0x4c, 0xe2, 0x52, 0xf5, 0xe8, 0xb7, 0xa7, 0x40, 0xfd, 0x9a, 0x29, 0x70, 0x87, 0xcc,
	0xf7, 0x78, 0x04, 0x5d, 0xa5, 0x2e, 0xed, 0xad, 0xe6, 0xb0, 0x04, 0x48, 0x09, 0xb5, 0x63, 0xbb,
	0xcb, 0x98, 0x80, 0xee, 0xbb, 0x5f, 0xca, 0xcd, 0x12, 0x44, 0xff, 0x1f, 0x93, 0x5b, 0x15, 0xb1,
	0x26, 0x95, 0x11, 0xbd, 0x91, 0xd5, 0x98, 0x5e, 0x34, 0x69, 0xec, 0x9e, 0x73, 0xe1, 0xce, 0x84,
	0x74, 0x8a, 0x9c, 0xd3, 0x09, 0x25, 0x38, 0x26, 0x1f, 0x55, 0xf6, 0x78, 0x4b, 0x8d, 0x31, 0x2f,
	0xc7, 0x96, 0xf0, 0xf8, 0x3b, 0x13, 0xea, 0xc9, 0xb4, 0x30, 0x3b, 0x72, 0xc2, 0xec, 0x53, 0xb2,
	0x22, 0x34, 0xcb, 0xfa, 0xca, 0xfd, 0xc6, 0xb7, 0x52, 0x3c, 0xa6, 0xcb, 0xe8, 0xc5, 0x92, 0xd0,
	0x1d, 0x8b, 0xbf, 0xf0, 0x70, 0xb0, 0x4f, 0x96, 0x2b, 0x4a, 0x4a, 0x1b, 0xdb, 0x80, 0x56, 0xf0,
	0xad, 0x16, 0xc7, 0x52, 0xea, 0xdc, 0xa2, 0x76, 0x74, 0x8f, 0x77, 0xf5, 0xba, 0x7f, 0x24, 0x64,
	0x42, 0x03, 0xdc, 0x38, 0xf0, 0x1b, 0xb7, 0x27, 0x16, 0xd4, 0x09, 0xe5, 0x0a, 0x2b, 0xad, 0x6d,
	0xaf, 0xcd, 0x01, 0x3d, 0x1a, 0xd1, 0x55, 0xd7, 0x3b, 0xfc, 0xb2, 0x53, 0x67, 0x0e, 0xbd, 0xb5,
	0xf5, 0x15, 0xd9, 0x9e, 0x24, 0xd4, 0x51, 0x9f, 0xa7, 0x29, 0xc8, 0x04, 0xca, 0x9f, 0x08, 0x94,
	0xd4, 0xcb, 0x09, 0x52, 0xc3, 0x09, 0x52, 0x7e, 0xb6, 0x7e, 0x49, 0x76, 0xae, 0x5d, 0xe7, 0xdb,
	0xc0, 0x4d, 0xfc, 0x55, 0xed, 0x40, 0xbf, 0x74, 0x02, 0x3c, 0x9e, 0xfd, 0xbe, 0xf6, 0xe7, 0xda,
	0x4f, 0xfe, 0x15, 0x00, 0x00, 0xff, 0xff, 0x66, 0x7e, 0xcc, 0xee, 0x84, 0x14, 0x00, 0x00,
}
