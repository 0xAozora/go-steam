// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dota_gcmessages_client_fantasy.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package protobuf is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package protobuf to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ETournamentGameState int32

const (
	ETournamentGameState_k_ETournamentGameState_Unknown                ETournamentGameState = 0
	ETournamentGameState_k_ETournamentGameState_Scheduled              ETournamentGameState = 1
	ETournamentGameState_k_ETournamentGameState_WaitingForLobbyToStart ETournamentGameState = 2
	ETournamentGameState_k_ETournamentGameState_Active                 ETournamentGameState = 3
	ETournamentGameState_k_ETournamentGameState_DireVictory            ETournamentGameState = 4
	ETournamentGameState_k_ETournamentGameState_RadVictory             ETournamentGameState = 5
	ETournamentGameState_k_ETournamentGameState_Canceled               ETournamentGameState = 6
	ETournamentGameState_k_ETournamentTeamState_NotNeeded              ETournamentGameState = 7
)

var ETournamentGameState_name = map[int32]string{
	0: "k_ETournamentGameState_Unknown",
	1: "k_ETournamentGameState_Scheduled",
	2: "k_ETournamentGameState_WaitingForLobbyToStart",
	3: "k_ETournamentGameState_Active",
	4: "k_ETournamentGameState_DireVictory",
	5: "k_ETournamentGameState_RadVictory",
	6: "k_ETournamentGameState_Canceled",
	7: "k_ETournamentTeamState_NotNeeded",
}

var ETournamentGameState_value = map[string]int32{
	"k_ETournamentGameState_Unknown":                0,
	"k_ETournamentGameState_Scheduled":              1,
	"k_ETournamentGameState_WaitingForLobbyToStart": 2,
	"k_ETournamentGameState_Active":                 3,
	"k_ETournamentGameState_DireVictory":            4,
	"k_ETournamentGameState_RadVictory":             5,
	"k_ETournamentGameState_Canceled":               6,
	"k_ETournamentTeamState_NotNeeded":              7,
}

func (x ETournamentGameState) Enum() *ETournamentGameState {
	p := new(ETournamentGameState)
	*p = x
	return p
}

func (x ETournamentGameState) String() string {
	return proto.EnumName(ETournamentGameState_name, int32(x))
}

func (x *ETournamentGameState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentGameState_value, data, "ETournamentGameState")
	if err != nil {
		return err
	}
	*x = ETournamentGameState(value)
	return nil
}

func (ETournamentGameState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{0}
}

type ETournamentTeamState int32

const (
	ETournamentTeamState_k_ETournamentTeamState_Unknown      ETournamentTeamState = 0
	ETournamentTeamState_k_ETournamentTeamState_Node1        ETournamentTeamState = 1
	ETournamentTeamState_k_ETournamentTeamState_NodeMax      ETournamentTeamState = 1024
	ETournamentTeamState_k_ETournamentTeamState_Eliminated   ETournamentTeamState = 14003
	ETournamentTeamState_k_ETournamentTeamState_Forfeited    ETournamentTeamState = 14004
	ETournamentTeamState_k_ETournamentTeamState_Finished1st  ETournamentTeamState = 15001
	ETournamentTeamState_k_ETournamentTeamState_Finished2nd  ETournamentTeamState = 15002
	ETournamentTeamState_k_ETournamentTeamState_Finished3rd  ETournamentTeamState = 15003
	ETournamentTeamState_k_ETournamentTeamState_Finished4th  ETournamentTeamState = 15004
	ETournamentTeamState_k_ETournamentTeamState_Finished5th  ETournamentTeamState = 15005
	ETournamentTeamState_k_ETournamentTeamState_Finished6th  ETournamentTeamState = 15006
	ETournamentTeamState_k_ETournamentTeamState_Finished7th  ETournamentTeamState = 15007
	ETournamentTeamState_k_ETournamentTeamState_Finished8th  ETournamentTeamState = 15008
	ETournamentTeamState_k_ETournamentTeamState_Finished9th  ETournamentTeamState = 15009
	ETournamentTeamState_k_ETournamentTeamState_Finished10th ETournamentTeamState = 15010
	ETournamentTeamState_k_ETournamentTeamState_Finished11th ETournamentTeamState = 15011
	ETournamentTeamState_k_ETournamentTeamState_Finished12th ETournamentTeamState = 15012
	ETournamentTeamState_k_ETournamentTeamState_Finished13th ETournamentTeamState = 15013
	ETournamentTeamState_k_ETournamentTeamState_Finished14th ETournamentTeamState = 15014
	ETournamentTeamState_k_ETournamentTeamState_Finished15th ETournamentTeamState = 15015
	ETournamentTeamState_k_ETournamentTeamState_Finished16th ETournamentTeamState = 15016
)

var ETournamentTeamState_name = map[int32]string{
	0:     "k_ETournamentTeamState_Unknown",
	1:     "k_ETournamentTeamState_Node1",
	1024:  "k_ETournamentTeamState_NodeMax",
	14003: "k_ETournamentTeamState_Eliminated",
	14004: "k_ETournamentTeamState_Forfeited",
	15001: "k_ETournamentTeamState_Finished1st",
	15002: "k_ETournamentTeamState_Finished2nd",
	15003: "k_ETournamentTeamState_Finished3rd",
	15004: "k_ETournamentTeamState_Finished4th",
	15005: "k_ETournamentTeamState_Finished5th",
	15006: "k_ETournamentTeamState_Finished6th",
	15007: "k_ETournamentTeamState_Finished7th",
	15008: "k_ETournamentTeamState_Finished8th",
	15009: "k_ETournamentTeamState_Finished9th",
	15010: "k_ETournamentTeamState_Finished10th",
	15011: "k_ETournamentTeamState_Finished11th",
	15012: "k_ETournamentTeamState_Finished12th",
	15013: "k_ETournamentTeamState_Finished13th",
	15014: "k_ETournamentTeamState_Finished14th",
	15015: "k_ETournamentTeamState_Finished15th",
	15016: "k_ETournamentTeamState_Finished16th",
}

var ETournamentTeamState_value = map[string]int32{
	"k_ETournamentTeamState_Unknown":      0,
	"k_ETournamentTeamState_Node1":        1,
	"k_ETournamentTeamState_NodeMax":      1024,
	"k_ETournamentTeamState_Eliminated":   14003,
	"k_ETournamentTeamState_Forfeited":    14004,
	"k_ETournamentTeamState_Finished1st":  15001,
	"k_ETournamentTeamState_Finished2nd":  15002,
	"k_ETournamentTeamState_Finished3rd":  15003,
	"k_ETournamentTeamState_Finished4th":  15004,
	"k_ETournamentTeamState_Finished5th":  15005,
	"k_ETournamentTeamState_Finished6th":  15006,
	"k_ETournamentTeamState_Finished7th":  15007,
	"k_ETournamentTeamState_Finished8th":  15008,
	"k_ETournamentTeamState_Finished9th":  15009,
	"k_ETournamentTeamState_Finished10th": 15010,
	"k_ETournamentTeamState_Finished11th": 15011,
	"k_ETournamentTeamState_Finished12th": 15012,
	"k_ETournamentTeamState_Finished13th": 15013,
	"k_ETournamentTeamState_Finished14th": 15014,
	"k_ETournamentTeamState_Finished15th": 15015,
	"k_ETournamentTeamState_Finished16th": 15016,
}

func (x ETournamentTeamState) Enum() *ETournamentTeamState {
	p := new(ETournamentTeamState)
	*p = x
	return p
}

func (x ETournamentTeamState) String() string {
	return proto.EnumName(ETournamentTeamState_name, int32(x))
}

func (x *ETournamentTeamState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentTeamState_value, data, "ETournamentTeamState")
	if err != nil {
		return err
	}
	*x = ETournamentTeamState(value)
	return nil
}

func (ETournamentTeamState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{1}
}

type ETournamentState int32

const (
	ETournamentState_k_ETournamentState_Unknown    ETournamentState = 0
	ETournamentState_k_ETournamentState_Setup      ETournamentState = 1
	ETournamentState_k_ETournamentState_Scheduled  ETournamentState = 2
	ETournamentState_k_ETournamentState_InProgress ETournamentState = 3
	ETournamentState_k_ETournamentState_Completed  ETournamentState = 4
	ETournamentState_k_ETournamentState_Canceled   ETournamentState = 5
)

var ETournamentState_name = map[int32]string{
	0: "k_ETournamentState_Unknown",
	1: "k_ETournamentState_Setup",
	2: "k_ETournamentState_Scheduled",
	3: "k_ETournamentState_InProgress",
	4: "k_ETournamentState_Completed",
	5: "k_ETournamentState_Canceled",
}

var ETournamentState_value = map[string]int32{
	"k_ETournamentState_Unknown":    0,
	"k_ETournamentState_Setup":      1,
	"k_ETournamentState_Scheduled":  2,
	"k_ETournamentState_InProgress": 3,
	"k_ETournamentState_Completed":  4,
	"k_ETournamentState_Canceled":   5,
}

func (x ETournamentState) Enum() *ETournamentState {
	p := new(ETournamentState)
	*p = x
	return p
}

func (x ETournamentState) String() string {
	return proto.EnumName(ETournamentState_name, int32(x))
}

func (x *ETournamentState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentState_value, data, "ETournamentState")
	if err != nil {
		return err
	}
	*x = ETournamentState(value)
	return nil
}

func (ETournamentState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{2}
}

type ETournamentNodeState int32

const (
	ETournamentNodeState_k_ETournamentNodeState_Unknown             ETournamentNodeState = 0
	ETournamentNodeState_k_ETournamentNodeState_TeamsNotYetAssigned ETournamentNodeState = 1
	ETournamentNodeState_k_ETournamentNodeState_InBetweenGames      ETournamentNodeState = 2
	ETournamentNodeState_k_ETournamentNodeState_GameInProgress      ETournamentNodeState = 3
	ETournamentNodeState_k_ETournamentNodeState_A_Won               ETournamentNodeState = 4
	ETournamentNodeState_k_ETournamentNodeState_B_Won               ETournamentNodeState = 5
	ETournamentNodeState_k_ETournamentNodeState_Canceled            ETournamentNodeState = 6
)

var ETournamentNodeState_name = map[int32]string{
	0: "k_ETournamentNodeState_Unknown",
	1: "k_ETournamentNodeState_TeamsNotYetAssigned",
	2: "k_ETournamentNodeState_InBetweenGames",
	3: "k_ETournamentNodeState_GameInProgress",
	4: "k_ETournamentNodeState_A_Won",
	5: "k_ETournamentNodeState_B_Won",
	6: "k_ETournamentNodeState_Canceled",
}

var ETournamentNodeState_value = map[string]int32{
	"k_ETournamentNodeState_Unknown":             0,
	"k_ETournamentNodeState_TeamsNotYetAssigned": 1,
	"k_ETournamentNodeState_InBetweenGames":      2,
	"k_ETournamentNodeState_GameInProgress":      3,
	"k_ETournamentNodeState_A_Won":               4,
	"k_ETournamentNodeState_B_Won":               5,
	"k_ETournamentNodeState_Canceled":            6,
}

func (x ETournamentNodeState) Enum() *ETournamentNodeState {
	p := new(ETournamentNodeState)
	*p = x
	return p
}

func (x ETournamentNodeState) String() string {
	return proto.EnumName(ETournamentNodeState_name, int32(x))
}

func (x *ETournamentNodeState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETournamentNodeState_value, data, "ETournamentNodeState")
	if err != nil {
		return err
	}
	*x = ETournamentNodeState(value)
	return nil
}

func (ETournamentNodeState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{3}
}

type DOTA_2013PassportSelectionIndices int32

const (
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_0    DOTA_2013PassportSelectionIndices = 0
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_1    DOTA_2013PassportSelectionIndices = 1
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_2    DOTA_2013PassportSelectionIndices = 2
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_3    DOTA_2013PassportSelectionIndices = 3
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_4    DOTA_2013PassportSelectionIndices = 4
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_5    DOTA_2013PassportSelectionIndices = 5
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_6    DOTA_2013PassportSelectionIndices = 6
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_7    DOTA_2013PassportSelectionIndices = 7
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_8    DOTA_2013PassportSelectionIndices = 8
	DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_9    DOTA_2013PassportSelectionIndices = 9
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_0     DOTA_2013PassportSelectionIndices = 10
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_1     DOTA_2013PassportSelectionIndices = 11
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_2     DOTA_2013PassportSelectionIndices = 12
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_3     DOTA_2013PassportSelectionIndices = 13
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_4     DOTA_2013PassportSelectionIndices = 14
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_5     DOTA_2013PassportSelectionIndices = 15
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_6     DOTA_2013PassportSelectionIndices = 16
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_7     DOTA_2013PassportSelectionIndices = 17
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_8     DOTA_2013PassportSelectionIndices = 18
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_9     DOTA_2013PassportSelectionIndices = 19
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_10    DOTA_2013PassportSelectionIndices = 20
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_11    DOTA_2013PassportSelectionIndices = 21
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_12    DOTA_2013PassportSelectionIndices = 22
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_13    DOTA_2013PassportSelectionIndices = 23
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_WEST_14    DOTA_2013PassportSelectionIndices = 24
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_0     DOTA_2013PassportSelectionIndices = 25
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_1     DOTA_2013PassportSelectionIndices = 26
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_2     DOTA_2013PassportSelectionIndices = 27
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_3     DOTA_2013PassportSelectionIndices = 28
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_4     DOTA_2013PassportSelectionIndices = 29
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_5     DOTA_2013PassportSelectionIndices = 30
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_6     DOTA_2013PassportSelectionIndices = 31
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_7     DOTA_2013PassportSelectionIndices = 32
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_8     DOTA_2013PassportSelectionIndices = 33
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_9     DOTA_2013PassportSelectionIndices = 34
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_10    DOTA_2013PassportSelectionIndices = 35
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_11    DOTA_2013PassportSelectionIndices = 36
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_12    DOTA_2013PassportSelectionIndices = 37
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_13    DOTA_2013PassportSelectionIndices = 38
	DOTA_2013PassportSelectionIndices_PP13_SEL_QUALPRED_EAST_14    DOTA_2013PassportSelectionIndices = 39
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_TEAM        DOTA_2013PassportSelectionIndices = 40
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_PLAYER      DOTA_2013PassportSelectionIndices = 41
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_TEAM_LOCK   DOTA_2013PassportSelectionIndices = 42
	DOTA_2013PassportSelectionIndices_PP13_SEL_TEAMCUP_PLAYER_LOCK DOTA_2013PassportSelectionIndices = 43
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_0         DOTA_2013PassportSelectionIndices = 44
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_1         DOTA_2013PassportSelectionIndices = 45
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_2         DOTA_2013PassportSelectionIndices = 46
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_3         DOTA_2013PassportSelectionIndices = 47
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_4         DOTA_2013PassportSelectionIndices = 48
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_5         DOTA_2013PassportSelectionIndices = 49
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_6         DOTA_2013PassportSelectionIndices = 50
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_7         DOTA_2013PassportSelectionIndices = 51
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_8         DOTA_2013PassportSelectionIndices = 52
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_9         DOTA_2013PassportSelectionIndices = 53
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_10        DOTA_2013PassportSelectionIndices = 54
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_11        DOTA_2013PassportSelectionIndices = 55
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_12        DOTA_2013PassportSelectionIndices = 56
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_13        DOTA_2013PassportSelectionIndices = 57
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_14        DOTA_2013PassportSelectionIndices = 58
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_15        DOTA_2013PassportSelectionIndices = 59
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_16        DOTA_2013PassportSelectionIndices = 60
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_17        DOTA_2013PassportSelectionIndices = 61
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_18        DOTA_2013PassportSelectionIndices = 62
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_19        DOTA_2013PassportSelectionIndices = 63
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_20        DOTA_2013PassportSelectionIndices = 64
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_21        DOTA_2013PassportSelectionIndices = 65
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_22        DOTA_2013PassportSelectionIndices = 66
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_23        DOTA_2013PassportSelectionIndices = 67
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_24        DOTA_2013PassportSelectionIndices = 68
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_25        DOTA_2013PassportSelectionIndices = 69
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_26        DOTA_2013PassportSelectionIndices = 70
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_27        DOTA_2013PassportSelectionIndices = 71
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_28        DOTA_2013PassportSelectionIndices = 72
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_29        DOTA_2013PassportSelectionIndices = 73
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_30        DOTA_2013PassportSelectionIndices = 74
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_31        DOTA_2013PassportSelectionIndices = 75
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_32        DOTA_2013PassportSelectionIndices = 76
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_33        DOTA_2013PassportSelectionIndices = 77
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_34        DOTA_2013PassportSelectionIndices = 78
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_35        DOTA_2013PassportSelectionIndices = 79
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_36        DOTA_2013PassportSelectionIndices = 80
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_37        DOTA_2013PassportSelectionIndices = 81
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_38        DOTA_2013PassportSelectionIndices = 82
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_39        DOTA_2013PassportSelectionIndices = 83
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_40        DOTA_2013PassportSelectionIndices = 84
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_41        DOTA_2013PassportSelectionIndices = 85
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_42        DOTA_2013PassportSelectionIndices = 86
	DOTA_2013PassportSelectionIndices_PP13_SEL_EVENTPRED_43        DOTA_2013PassportSelectionIndices = 87
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_0              DOTA_2013PassportSelectionIndices = 88
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_1              DOTA_2013PassportSelectionIndices = 89
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_2              DOTA_2013PassportSelectionIndices = 90
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_3              DOTA_2013PassportSelectionIndices = 91
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_4              DOTA_2013PassportSelectionIndices = 92
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_5              DOTA_2013PassportSelectionIndices = 93
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_6              DOTA_2013PassportSelectionIndices = 94
	DOTA_2013PassportSelectionIndices_PP13_SEL_SOLO_7              DOTA_2013PassportSelectionIndices = 95
)

var DOTA_2013PassportSelectionIndices_name = map[int32]string{
	0:  "PP13_SEL_ALLSTAR_PLAYER_0",
	1:  "PP13_SEL_ALLSTAR_PLAYER_1",
	2:  "PP13_SEL_ALLSTAR_PLAYER_2",
	3:  "PP13_SEL_ALLSTAR_PLAYER_3",
	4:  "PP13_SEL_ALLSTAR_PLAYER_4",
	5:  "PP13_SEL_ALLSTAR_PLAYER_5",
	6:  "PP13_SEL_ALLSTAR_PLAYER_6",
	7:  "PP13_SEL_ALLSTAR_PLAYER_7",
	8:  "PP13_SEL_ALLSTAR_PLAYER_8",
	9:  "PP13_SEL_ALLSTAR_PLAYER_9",
	10: "PP13_SEL_QUALPRED_WEST_0",
	11: "PP13_SEL_QUALPRED_WEST_1",
	12: "PP13_SEL_QUALPRED_WEST_2",
	13: "PP13_SEL_QUALPRED_WEST_3",
	14: "PP13_SEL_QUALPRED_WEST_4",
	15: "PP13_SEL_QUALPRED_WEST_5",
	16: "PP13_SEL_QUALPRED_WEST_6",
	17: "PP13_SEL_QUALPRED_WEST_7",
	18: "PP13_SEL_QUALPRED_WEST_8",
	19: "PP13_SEL_QUALPRED_WEST_9",
	20: "PP13_SEL_QUALPRED_WEST_10",
	21: "PP13_SEL_QUALPRED_WEST_11",
	22: "PP13_SEL_QUALPRED_WEST_12",
	23: "PP13_SEL_QUALPRED_WEST_13",
	24: "PP13_SEL_QUALPRED_WEST_14",
	25: "PP13_SEL_QUALPRED_EAST_0",
	26: "PP13_SEL_QUALPRED_EAST_1",
	27: "PP13_SEL_QUALPRED_EAST_2",
	28: "PP13_SEL_QUALPRED_EAST_3",
	29: "PP13_SEL_QUALPRED_EAST_4",
	30: "PP13_SEL_QUALPRED_EAST_5",
	31: "PP13_SEL_QUALPRED_EAST_6",
	32: "PP13_SEL_QUALPRED_EAST_7",
	33: "PP13_SEL_QUALPRED_EAST_8",
	34: "PP13_SEL_QUALPRED_EAST_9",
	35: "PP13_SEL_QUALPRED_EAST_10",
	36: "PP13_SEL_QUALPRED_EAST_11",
	37: "PP13_SEL_QUALPRED_EAST_12",
	38: "PP13_SEL_QUALPRED_EAST_13",
	39: "PP13_SEL_QUALPRED_EAST_14",
	40: "PP13_SEL_TEAMCUP_TEAM",
	41: "PP13_SEL_TEAMCUP_PLAYER",
	42: "PP13_SEL_TEAMCUP_TEAM_LOCK",
	43: "PP13_SEL_TEAMCUP_PLAYER_LOCK",
	44: "PP13_SEL_EVENTPRED_0",
	45: "PP13_SEL_EVENTPRED_1",
	46: "PP13_SEL_EVENTPRED_2",
	47: "PP13_SEL_EVENTPRED_3",
	48: "PP13_SEL_EVENTPRED_4",
	49: "PP13_SEL_EVENTPRED_5",
	50: "PP13_SEL_EVENTPRED_6",
	51: "PP13_SEL_EVENTPRED_7",
	52: "PP13_SEL_EVENTPRED_8",
	53: "PP13_SEL_EVENTPRED_9",
	54: "PP13_SEL_EVENTPRED_10",
	55: "PP13_SEL_EVENTPRED_11",
	56: "PP13_SEL_EVENTPRED_12",
	57: "PP13_SEL_EVENTPRED_13",
	58: "PP13_SEL_EVENTPRED_14",
	59: "PP13_SEL_EVENTPRED_15",
	60: "PP13_SEL_EVENTPRED_16",
	61: "PP13_SEL_EVENTPRED_17",
	62: "PP13_SEL_EVENTPRED_18",
	63: "PP13_SEL_EVENTPRED_19",
	64: "PP13_SEL_EVENTPRED_20",
	65: "PP13_SEL_EVENTPRED_21",
	66: "PP13_SEL_EVENTPRED_22",
	67: "PP13_SEL_EVENTPRED_23",
	68: "PP13_SEL_EVENTPRED_24",
	69: "PP13_SEL_EVENTPRED_25",
	70: "PP13_SEL_EVENTPRED_26",
	71: "PP13_SEL_EVENTPRED_27",
	72: "PP13_SEL_EVENTPRED_28",
	73: "PP13_SEL_EVENTPRED_29",
	74: "PP13_SEL_EVENTPRED_30",
	75: "PP13_SEL_EVENTPRED_31",
	76: "PP13_SEL_EVENTPRED_32",
	77: "PP13_SEL_EVENTPRED_33",
	78: "PP13_SEL_EVENTPRED_34",
	79: "PP13_SEL_EVENTPRED_35",
	80: "PP13_SEL_EVENTPRED_36",
	81: "PP13_SEL_EVENTPRED_37",
	82: "PP13_SEL_EVENTPRED_38",
	83: "PP13_SEL_EVENTPRED_39",
	84: "PP13_SEL_EVENTPRED_40",
	85: "PP13_SEL_EVENTPRED_41",
	86: "PP13_SEL_EVENTPRED_42",
	87: "PP13_SEL_EVENTPRED_43",
	88: "PP13_SEL_SOLO_0",
	89: "PP13_SEL_SOLO_1",
	90: "PP13_SEL_SOLO_2",
	91: "PP13_SEL_SOLO_3",
	92: "PP13_SEL_SOLO_4",
	93: "PP13_SEL_SOLO_5",
	94: "PP13_SEL_SOLO_6",
	95: "PP13_SEL_SOLO_7",
}

var DOTA_2013PassportSelectionIndices_value = map[string]int32{
	"PP13_SEL_ALLSTAR_PLAYER_0":    0,
	"PP13_SEL_ALLSTAR_PLAYER_1":    1,
	"PP13_SEL_ALLSTAR_PLAYER_2":    2,
	"PP13_SEL_ALLSTAR_PLAYER_3":    3,
	"PP13_SEL_ALLSTAR_PLAYER_4":    4,
	"PP13_SEL_ALLSTAR_PLAYER_5":    5,
	"PP13_SEL_ALLSTAR_PLAYER_6":    6,
	"PP13_SEL_ALLSTAR_PLAYER_7":    7,
	"PP13_SEL_ALLSTAR_PLAYER_8":    8,
	"PP13_SEL_ALLSTAR_PLAYER_9":    9,
	"PP13_SEL_QUALPRED_WEST_0":     10,
	"PP13_SEL_QUALPRED_WEST_1":     11,
	"PP13_SEL_QUALPRED_WEST_2":     12,
	"PP13_SEL_QUALPRED_WEST_3":     13,
	"PP13_SEL_QUALPRED_WEST_4":     14,
	"PP13_SEL_QUALPRED_WEST_5":     15,
	"PP13_SEL_QUALPRED_WEST_6":     16,
	"PP13_SEL_QUALPRED_WEST_7":     17,
	"PP13_SEL_QUALPRED_WEST_8":     18,
	"PP13_SEL_QUALPRED_WEST_9":     19,
	"PP13_SEL_QUALPRED_WEST_10":    20,
	"PP13_SEL_QUALPRED_WEST_11":    21,
	"PP13_SEL_QUALPRED_WEST_12":    22,
	"PP13_SEL_QUALPRED_WEST_13":    23,
	"PP13_SEL_QUALPRED_WEST_14":    24,
	"PP13_SEL_QUALPRED_EAST_0":     25,
	"PP13_SEL_QUALPRED_EAST_1":     26,
	"PP13_SEL_QUALPRED_EAST_2":     27,
	"PP13_SEL_QUALPRED_EAST_3":     28,
	"PP13_SEL_QUALPRED_EAST_4":     29,
	"PP13_SEL_QUALPRED_EAST_5":     30,
	"PP13_SEL_QUALPRED_EAST_6":     31,
	"PP13_SEL_QUALPRED_EAST_7":     32,
	"PP13_SEL_QUALPRED_EAST_8":     33,
	"PP13_SEL_QUALPRED_EAST_9":     34,
	"PP13_SEL_QUALPRED_EAST_10":    35,
	"PP13_SEL_QUALPRED_EAST_11":    36,
	"PP13_SEL_QUALPRED_EAST_12":    37,
	"PP13_SEL_QUALPRED_EAST_13":    38,
	"PP13_SEL_QUALPRED_EAST_14":    39,
	"PP13_SEL_TEAMCUP_TEAM":        40,
	"PP13_SEL_TEAMCUP_PLAYER":      41,
	"PP13_SEL_TEAMCUP_TEAM_LOCK":   42,
	"PP13_SEL_TEAMCUP_PLAYER_LOCK": 43,
	"PP13_SEL_EVENTPRED_0":         44,
	"PP13_SEL_EVENTPRED_1":         45,
	"PP13_SEL_EVENTPRED_2":         46,
	"PP13_SEL_EVENTPRED_3":         47,
	"PP13_SEL_EVENTPRED_4":         48,
	"PP13_SEL_EVENTPRED_5":         49,
	"PP13_SEL_EVENTPRED_6":         50,
	"PP13_SEL_EVENTPRED_7":         51,
	"PP13_SEL_EVENTPRED_8":         52,
	"PP13_SEL_EVENTPRED_9":         53,
	"PP13_SEL_EVENTPRED_10":        54,
	"PP13_SEL_EVENTPRED_11":        55,
	"PP13_SEL_EVENTPRED_12":        56,
	"PP13_SEL_EVENTPRED_13":        57,
	"PP13_SEL_EVENTPRED_14":        58,
	"PP13_SEL_EVENTPRED_15":        59,
	"PP13_SEL_EVENTPRED_16":        60,
	"PP13_SEL_EVENTPRED_17":        61,
	"PP13_SEL_EVENTPRED_18":        62,
	"PP13_SEL_EVENTPRED_19":        63,
	"PP13_SEL_EVENTPRED_20":        64,
	"PP13_SEL_EVENTPRED_21":        65,
	"PP13_SEL_EVENTPRED_22":        66,
	"PP13_SEL_EVENTPRED_23":        67,
	"PP13_SEL_EVENTPRED_24":        68,
	"PP13_SEL_EVENTPRED_25":        69,
	"PP13_SEL_EVENTPRED_26":        70,
	"PP13_SEL_EVENTPRED_27":        71,
	"PP13_SEL_EVENTPRED_28":        72,
	"PP13_SEL_EVENTPRED_29":        73,
	"PP13_SEL_EVENTPRED_30":        74,
	"PP13_SEL_EVENTPRED_31":        75,
	"PP13_SEL_EVENTPRED_32":        76,
	"PP13_SEL_EVENTPRED_33":        77,
	"PP13_SEL_EVENTPRED_34":        78,
	"PP13_SEL_EVENTPRED_35":        79,
	"PP13_SEL_EVENTPRED_36":        80,
	"PP13_SEL_EVENTPRED_37":        81,
	"PP13_SEL_EVENTPRED_38":        82,
	"PP13_SEL_EVENTPRED_39":        83,
	"PP13_SEL_EVENTPRED_40":        84,
	"PP13_SEL_EVENTPRED_41":        85,
	"PP13_SEL_EVENTPRED_42":        86,
	"PP13_SEL_EVENTPRED_43":        87,
	"PP13_SEL_SOLO_0":              88,
	"PP13_SEL_SOLO_1":              89,
	"PP13_SEL_SOLO_2":              90,
	"PP13_SEL_SOLO_3":              91,
	"PP13_SEL_SOLO_4":              92,
	"PP13_SEL_SOLO_5":              93,
	"PP13_SEL_SOLO_6":              94,
	"PP13_SEL_SOLO_7":              95,
}

func (x DOTA_2013PassportSelectionIndices) Enum() *DOTA_2013PassportSelectionIndices {
	p := new(DOTA_2013PassportSelectionIndices)
	*p = x
	return p
}

func (x DOTA_2013PassportSelectionIndices) String() string {
	return proto.EnumName(DOTA_2013PassportSelectionIndices_name, int32(x))
}

func (x *DOTA_2013PassportSelectionIndices) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(DOTA_2013PassportSelectionIndices_value, data, "DOTA_2013PassportSelectionIndices")
	if err != nil {
		return err
	}
	*x = DOTA_2013PassportSelectionIndices(value)
	return nil
}

func (DOTA_2013PassportSelectionIndices) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{4}
}

type CMsgDOTACreateFantasyLeagueResponse_EResult int32

const (
	CMsgDOTACreateFantasyLeagueResponse_SUCCESS                  CMsgDOTACreateFantasyLeagueResponse_EResult = 0
	CMsgDOTACreateFantasyLeagueResponse_ERROR_UNSPECIFIED        CMsgDOTACreateFantasyLeagueResponse_EResult = 1
	CMsgDOTACreateFantasyLeagueResponse_ERROR_TOO_MANY_LEAGUES   CMsgDOTACreateFantasyLeagueResponse_EResult = 2
	CMsgDOTACreateFantasyLeagueResponse_ERROR_INVALID_TEAM_COUNT CMsgDOTACreateFantasyLeagueResponse_EResult = 3
	CMsgDOTACreateFantasyLeagueResponse_ERROR_CREATION_DISABLED  CMsgDOTACreateFantasyLeagueResponse_EResult = 4
)

var CMsgDOTACreateFantasyLeagueResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_TOO_MANY_LEAGUES",
	3: "ERROR_INVALID_TEAM_COUNT",
	4: "ERROR_CREATION_DISABLED",
}

var CMsgDOTACreateFantasyLeagueResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_UNSPECIFIED":        1,
	"ERROR_TOO_MANY_LEAGUES":   2,
	"ERROR_INVALID_TEAM_COUNT": 3,
	"ERROR_CREATION_DISABLED":  4,
}

func (x CMsgDOTACreateFantasyLeagueResponse_EResult) Enum() *CMsgDOTACreateFantasyLeagueResponse_EResult {
	p := new(CMsgDOTACreateFantasyLeagueResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTACreateFantasyLeagueResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTACreateFantasyLeagueResponse_EResult_name, int32(x))
}

func (x *CMsgDOTACreateFantasyLeagueResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTACreateFantasyLeagueResponse_EResult_value, data, "CMsgDOTACreateFantasyLeagueResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTACreateFantasyLeagueResponse_EResult(value)
	return nil
}

func (CMsgDOTACreateFantasyLeagueResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{2, 0}
}

type CMsgDOTAFantasyLeagueEditInfoResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueEditInfoResponse_SUCCESS             CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 0
	CMsgDOTAFantasyLeagueEditInfoResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 1
	CMsgDOTAFantasyLeagueEditInfoResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyLeagueEditInfoResponse_EResult = 2
)

var CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyLeagueEditInfoResponse_EResult) Enum() *CMsgDOTAFantasyLeagueEditInfoResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueEditInfoResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueEditInfoResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueEditInfoResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value, data, "CMsgDOTAFantasyLeagueEditInfoResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueEditInfoResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueEditInfoResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{6, 0}
}

type CMsgDOTAFantasyLeagueFindResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueFindResponse_SUCCESS                CMsgDOTAFantasyLeagueFindResponse_EResult = 0
	CMsgDOTAFantasyLeagueFindResponse_ERROR_LEAGUE_NOT_FOUND CMsgDOTAFantasyLeagueFindResponse_EResult = 1
	CMsgDOTAFantasyLeagueFindResponse_ERROR_BAD_PASSWORD     CMsgDOTAFantasyLeagueFindResponse_EResult = 2
	CMsgDOTAFantasyLeagueFindResponse_ERROR_UNSPECIFIED      CMsgDOTAFantasyLeagueFindResponse_EResult = 3
	CMsgDOTAFantasyLeagueFindResponse_ERROR_FULL             CMsgDOTAFantasyLeagueFindResponse_EResult = 4
	CMsgDOTAFantasyLeagueFindResponse_ERROR_ALREADY_MEMBER   CMsgDOTAFantasyLeagueFindResponse_EResult = 5
	CMsgDOTAFantasyLeagueFindResponse_ERROR_LEAGUE_LOCKED    CMsgDOTAFantasyLeagueFindResponse_EResult = 6
)

var CMsgDOTAFantasyLeagueFindResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_LEAGUE_NOT_FOUND",
	2: "ERROR_BAD_PASSWORD",
	3: "ERROR_UNSPECIFIED",
	4: "ERROR_FULL",
	5: "ERROR_ALREADY_MEMBER",
	6: "ERROR_LEAGUE_LOCKED",
}

var CMsgDOTAFantasyLeagueFindResponse_EResult_value = map[string]int32{
	"SUCCESS":                0,
	"ERROR_LEAGUE_NOT_FOUND": 1,
	"ERROR_BAD_PASSWORD":     2,
	"ERROR_UNSPECIFIED":      3,
	"ERROR_FULL":             4,
	"ERROR_ALREADY_MEMBER":   5,
	"ERROR_LEAGUE_LOCKED":    6,
}

func (x CMsgDOTAFantasyLeagueFindResponse_EResult) Enum() *CMsgDOTAFantasyLeagueFindResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueFindResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueFindResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueFindResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueFindResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueFindResponse_EResult_value, data, "CMsgDOTAFantasyLeagueFindResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueFindResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueFindResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{8, 0}
}

type CMsgDOTAFantasyLeagueInfoResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueInfoResponse_SUCCESS             CMsgDOTAFantasyLeagueInfoResponse_EResult = 0
	CMsgDOTAFantasyLeagueInfoResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueInfoResponse_EResult = 1
	CMsgDOTAFantasyLeagueInfoResponse_ERROR_BAD_LEAGUE_ID CMsgDOTAFantasyLeagueInfoResponse_EResult = 2
)

var CMsgDOTAFantasyLeagueInfoResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_BAD_LEAGUE_ID",
}

var CMsgDOTAFantasyLeagueInfoResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_BAD_LEAGUE_ID": 2,
}

func (x CMsgDOTAFantasyLeagueInfoResponse_EResult) Enum() *CMsgDOTAFantasyLeagueInfoResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueInfoResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueInfoResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueInfoResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueInfoResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueInfoResponse_EResult_value, data, "CMsgDOTAFantasyLeagueInfoResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueInfoResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueInfoResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{10, 0}
}

type CMsgDOTAFantasyLeagueMatchupsResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueMatchupsResponse_SUCCESS             CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 0
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 1
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_BAD_LEAGUE_ID CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 2
	CMsgDOTAFantasyLeagueMatchupsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyLeagueMatchupsResponse_EResult = 3
)

var CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_BAD_LEAGUE_ID",
	3: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_BAD_LEAGUE_ID": 2,
	"ERROR_NO_PERMISSION": 3,
}

func (x CMsgDOTAFantasyLeagueMatchupsResponse_EResult) Enum() *CMsgDOTAFantasyLeagueMatchupsResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueMatchupsResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueMatchupsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueMatchupsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value, data, "CMsgDOTAFantasyLeagueMatchupsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueMatchupsResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueMatchupsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{12, 0}
}

type CMsgDOTAEditFantasyTeamResponse_EResult int32

const (
	CMsgDOTAEditFantasyTeamResponse_SUCCESS                  CMsgDOTAEditFantasyTeamResponse_EResult = 0
	CMsgDOTAEditFantasyTeamResponse_ERROR_UNSPECIFIED        CMsgDOTAEditFantasyTeamResponse_EResult = 1
	CMsgDOTAEditFantasyTeamResponse_ERROR_INVALID_TEAM_INFO  CMsgDOTAEditFantasyTeamResponse_EResult = 2
	CMsgDOTAEditFantasyTeamResponse_ERROR_NAME_ALREADY_TAKEN CMsgDOTAEditFantasyTeamResponse_EResult = 3
	CMsgDOTAEditFantasyTeamResponse_ERROR_NO_PERMISSION      CMsgDOTAEditFantasyTeamResponse_EResult = 4
)

var CMsgDOTAEditFantasyTeamResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_INVALID_TEAM_INFO",
	3: "ERROR_NAME_ALREADY_TAKEN",
	4: "ERROR_NO_PERMISSION",
}

var CMsgDOTAEditFantasyTeamResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_UNSPECIFIED":        1,
	"ERROR_INVALID_TEAM_INFO":  2,
	"ERROR_NAME_ALREADY_TAKEN": 3,
	"ERROR_NO_PERMISSION":      4,
}

func (x CMsgDOTAEditFantasyTeamResponse_EResult) Enum() *CMsgDOTAEditFantasyTeamResponse_EResult {
	p := new(CMsgDOTAEditFantasyTeamResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAEditFantasyTeamResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAEditFantasyTeamResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAEditFantasyTeamResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAEditFantasyTeamResponse_EResult_value, data, "CMsgDOTAEditFantasyTeamResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAEditFantasyTeamResponse_EResult(value)
	return nil
}

func (CMsgDOTAEditFantasyTeamResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{14, 0}
}

type CMsgDOTAFantasyTeamScoreResponse_EResult int32

const (
	CMsgDOTAFantasyTeamScoreResponse_SUCCESS                   CMsgDOTAFantasyTeamScoreResponse_EResult = 0
	CMsgDOTAFantasyTeamScoreResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamScoreResponse_EResult = 1
	CMsgDOTAFantasyTeamScoreResponse_ERROR_NO_PERMISSION       CMsgDOTAFantasyTeamScoreResponse_EResult = 2
	CMsgDOTAFantasyTeamScoreResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamScoreResponse_EResult = 3
)

var CMsgDOTAFantasyTeamScoreResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_OWNER_NOT_IN_LEAGUE",
}

var CMsgDOTAFantasyTeamScoreResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_NO_PERMISSION":       2,
	"ERROR_OWNER_NOT_IN_LEAGUE": 3,
}

func (x CMsgDOTAFantasyTeamScoreResponse_EResult) Enum() *CMsgDOTAFantasyTeamScoreResponse_EResult {
	p := new(CMsgDOTAFantasyTeamScoreResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamScoreResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamScoreResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamScoreResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamScoreResponse_EResult_value, data, "CMsgDOTAFantasyTeamScoreResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamScoreResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamScoreResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{20, 0}
}

type CMsgDOTAFantasyTeamStandingsResponse_EResult int32

const (
	CMsgDOTAFantasyTeamStandingsResponse_SUCCESS             CMsgDOTAFantasyTeamStandingsResponse_EResult = 0
	CMsgDOTAFantasyTeamStandingsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamStandingsResponse_EResult = 1
	CMsgDOTAFantasyTeamStandingsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamStandingsResponse_EResult = 2
)

var CMsgDOTAFantasyTeamStandingsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyTeamStandingsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyTeamStandingsResponse_EResult) Enum() *CMsgDOTAFantasyTeamStandingsResponse_EResult {
	p := new(CMsgDOTAFantasyTeamStandingsResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamStandingsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamStandingsResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamStandingsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamStandingsResponse_EResult_value, data, "CMsgDOTAFantasyTeamStandingsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamStandingsResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamStandingsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{22, 0}
}

type CMsgDOTAFantasyPlayerScoreResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerScoreResponse_SUCCESS             CMsgDOTAFantasyPlayerScoreResponse_EResult = 0
	CMsgDOTAFantasyPlayerScoreResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerScoreResponse_EResult = 1
	CMsgDOTAFantasyPlayerScoreResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerScoreResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerScoreResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyPlayerScoreResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerScoreResponse_EResult) Enum() *CMsgDOTAFantasyPlayerScoreResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerScoreResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyPlayerScoreResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerScoreResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyPlayerScoreResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerScoreResponse_EResult_value, data, "CMsgDOTAFantasyPlayerScoreResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerScoreResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyPlayerScoreResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{24, 0}
}

type CMsgDOTAFantasyPlayerStandingsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerStandingsResponse_SUCCESS             CMsgDOTAFantasyPlayerStandingsResponse_EResult = 0
	CMsgDOTAFantasyPlayerStandingsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerStandingsResponse_EResult = 1
	CMsgDOTAFantasyPlayerStandingsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerStandingsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerStandingsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyPlayerStandingsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerStandingsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerStandingsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerStandingsResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyPlayerStandingsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerStandingsResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyPlayerStandingsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerStandingsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerStandingsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerStandingsResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyPlayerStandingsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{26, 0}
}

type CMsgDOTAFantasyLeagueCreateResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueCreateResponse_SUCCESS                  CMsgDOTAFantasyLeagueCreateResponse_EResult = 0
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_NO_PERMISSION      CMsgDOTAFantasyLeagueCreateResponse_EResult = 1
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_SEASON_ID      CMsgDOTAFantasyLeagueCreateResponse_EResult = 2
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_LEAGUE_NAME    CMsgDOTAFantasyLeagueCreateResponse_EResult = 3
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_BAD_TEAM_NAME      CMsgDOTAFantasyLeagueCreateResponse_EResult = 4
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_UNSPECIFIED        CMsgDOTAFantasyLeagueCreateResponse_EResult = 5
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_FAILED_LOGO_UPLOAD CMsgDOTAFantasyLeagueCreateResponse_EResult = 6
	CMsgDOTAFantasyLeagueCreateResponse_ERROR_NO_TICKET          CMsgDOTAFantasyLeagueCreateResponse_EResult = 7
)

var CMsgDOTAFantasyLeagueCreateResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_NO_PERMISSION",
	2: "ERROR_BAD_SEASON_ID",
	3: "ERROR_BAD_LEAGUE_NAME",
	4: "ERROR_BAD_TEAM_NAME",
	5: "ERROR_UNSPECIFIED",
	6: "ERROR_FAILED_LOGO_UPLOAD",
	7: "ERROR_NO_TICKET",
}

var CMsgDOTAFantasyLeagueCreateResponse_EResult_value = map[string]int32{
	"SUCCESS":                  0,
	"ERROR_NO_PERMISSION":      1,
	"ERROR_BAD_SEASON_ID":      2,
	"ERROR_BAD_LEAGUE_NAME":    3,
	"ERROR_BAD_TEAM_NAME":      4,
	"ERROR_UNSPECIFIED":        5,
	"ERROR_FAILED_LOGO_UPLOAD": 6,
	"ERROR_NO_TICKET":          7,
}

func (x CMsgDOTAFantasyLeagueCreateResponse_EResult) Enum() *CMsgDOTAFantasyLeagueCreateResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueCreateResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueCreateResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueCreateResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueCreateResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueCreateResponse_EResult_value, data, "CMsgDOTAFantasyLeagueCreateResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueCreateResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueCreateResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{30, 0}
}

type CMsgDOTAFantasyTeamCreateResponse_EResult int32

const (
	CMsgDOTAFantasyTeamCreateResponse_SUCCESS                     CMsgDOTAFantasyTeamCreateResponse_EResult = 0
	CMsgDOTAFantasyTeamCreateResponse_ERROR_NO_PERMISSION         CMsgDOTAFantasyTeamCreateResponse_EResult = 1
	CMsgDOTAFantasyTeamCreateResponse_ERROR_FAILED_LOGO_UPLOAD    CMsgDOTAFantasyTeamCreateResponse_EResult = 2
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_FANTASY_LEAGUE_ID CMsgDOTAFantasyTeamCreateResponse_EResult = 3
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_NAME              CMsgDOTAFantasyTeamCreateResponse_EResult = 4
	CMsgDOTAFantasyTeamCreateResponse_ERROR_FULL                  CMsgDOTAFantasyTeamCreateResponse_EResult = 5
	CMsgDOTAFantasyTeamCreateResponse_ERROR_ALREADY_MEMBER        CMsgDOTAFantasyTeamCreateResponse_EResult = 6
	CMsgDOTAFantasyTeamCreateResponse_ERROR_BAD_PASSWORD          CMsgDOTAFantasyTeamCreateResponse_EResult = 7
	CMsgDOTAFantasyTeamCreateResponse_ERROR_UNSPECIFIED           CMsgDOTAFantasyTeamCreateResponse_EResult = 8
	CMsgDOTAFantasyTeamCreateResponse_ERROR_NO_TICKET             CMsgDOTAFantasyTeamCreateResponse_EResult = 9
	CMsgDOTAFantasyTeamCreateResponse_ERROR_LEAGUE_LOCKED         CMsgDOTAFantasyTeamCreateResponse_EResult = 10
)

var CMsgDOTAFantasyTeamCreateResponse_EResult_name = map[int32]string{
	0:  "SUCCESS",
	1:  "ERROR_NO_PERMISSION",
	2:  "ERROR_FAILED_LOGO_UPLOAD",
	3:  "ERROR_BAD_FANTASY_LEAGUE_ID",
	4:  "ERROR_BAD_NAME",
	5:  "ERROR_FULL",
	6:  "ERROR_ALREADY_MEMBER",
	7:  "ERROR_BAD_PASSWORD",
	8:  "ERROR_UNSPECIFIED",
	9:  "ERROR_NO_TICKET",
	10: "ERROR_LEAGUE_LOCKED",
}

var CMsgDOTAFantasyTeamCreateResponse_EResult_value = map[string]int32{
	"SUCCESS":                     0,
	"ERROR_NO_PERMISSION":         1,
	"ERROR_FAILED_LOGO_UPLOAD":    2,
	"ERROR_BAD_FANTASY_LEAGUE_ID": 3,
	"ERROR_BAD_NAME":              4,
	"ERROR_FULL":                  5,
	"ERROR_ALREADY_MEMBER":        6,
	"ERROR_BAD_PASSWORD":          7,
	"ERROR_UNSPECIFIED":           8,
	"ERROR_NO_TICKET":             9,
	"ERROR_LEAGUE_LOCKED":         10,
}

func (x CMsgDOTAFantasyTeamCreateResponse_EResult) Enum() *CMsgDOTAFantasyTeamCreateResponse_EResult {
	p := new(CMsgDOTAFantasyTeamCreateResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamCreateResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamCreateResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamCreateResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamCreateResponse_EResult_value, data, "CMsgDOTAFantasyTeamCreateResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamCreateResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamCreateResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{32, 0}
}

type CMsgDOTAFantasyLeagueEditInvitesResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueEditInvitesResponse_SUCCESS           CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = 0
	CMsgDOTAFantasyLeagueEditInvitesResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = 1
)

var CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}

var CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) Enum() *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value, data, "CMsgDOTAFantasyLeagueEditInvitesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueEditInvitesResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueEditInvitesResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{34, 0}
}

type CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult int32

const (
	CMsgDOTAFantasyLeagueDraftPlayerResponse_SUCCESS                           CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 0
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_UNSPECIFIED                 CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 1
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_INVALID_FANTASY_LEAGUE      CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 2
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_FANTASY_LEAGUE_NOT_DRAFTING CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 3
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_OWNER_NOT_IN_LEAGUE         CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 4
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_NOT_OWNERS_TURN             CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 5
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_INVALID              CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 6
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_UNAVAILABLE          CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 7
	CMsgDOTAFantasyLeagueDraftPlayerResponse_ERROR_PLAYER_NO_VALID_SLOTS       CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = 8
)

var CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_INVALID_FANTASY_LEAGUE",
	3: "ERROR_FANTASY_LEAGUE_NOT_DRAFTING",
	4: "ERROR_OWNER_NOT_IN_LEAGUE",
	5: "ERROR_NOT_OWNERS_TURN",
	6: "ERROR_PLAYER_INVALID",
	7: "ERROR_PLAYER_UNAVAILABLE",
	8: "ERROR_PLAYER_NO_VALID_SLOTS",
}

var CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value = map[string]int32{
	"SUCCESS":                           0,
	"ERROR_UNSPECIFIED":                 1,
	"ERROR_INVALID_FANTASY_LEAGUE":      2,
	"ERROR_FANTASY_LEAGUE_NOT_DRAFTING": 3,
	"ERROR_OWNER_NOT_IN_LEAGUE":         4,
	"ERROR_NOT_OWNERS_TURN":             5,
	"ERROR_PLAYER_INVALID":              6,
	"ERROR_PLAYER_UNAVAILABLE":          7,
	"ERROR_PLAYER_NO_VALID_SLOTS":       8,
}

func (x CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) Enum() *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult {
	p := new(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value, data, "CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{38, 0}
}

type CMsgDOTAFantasyTeamRosterSwapResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterSwapResponse_SUCCESS                   CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_SLOTS_INVALID       CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 3
	CMsgDOTAFantasyTeamRosterSwapResponse_ERROR_SLOT_LOCKED         CMsgDOTAFantasyTeamRosterSwapResponse_EResult = 4
)

var CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_OWNER_NOT_IN_LEAGUE",
	3: "ERROR_SLOTS_INVALID",
	4: "ERROR_SLOT_LOCKED",
}

var CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_OWNER_NOT_IN_LEAGUE": 2,
	"ERROR_SLOTS_INVALID":       3,
	"ERROR_SLOT_LOCKED":         4,
}

func (x CMsgDOTAFantasyTeamRosterSwapResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterSwapResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterSwapResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamRosterSwapResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamRosterSwapResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterSwapResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterSwapResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamRosterSwapResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{40, 0}
}

type CMsgDOTAFantasyTeamRosterAddDropResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterAddDropResponse_SUCCESS                     CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_UNSPECIFIED           CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_OWNER_NOT_IN_LEAGUE   CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_PLAYER_NOT_AVAILABLE  CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 3
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_PLAYER_NOT_ON_TEAM    CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 4
	CMsgDOTAFantasyTeamRosterAddDropResponse_ERROR_TRADE_ALREADY_PENDING CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = 5
)

var CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_OWNER_NOT_IN_LEAGUE",
	3: "ERROR_PLAYER_NOT_AVAILABLE",
	4: "ERROR_PLAYER_NOT_ON_TEAM",
	5: "ERROR_TRADE_ALREADY_PENDING",
}

var CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value = map[string]int32{
	"SUCCESS":                     0,
	"ERROR_UNSPECIFIED":           1,
	"ERROR_OWNER_NOT_IN_LEAGUE":   2,
	"ERROR_PLAYER_NOT_AVAILABLE":  3,
	"ERROR_PLAYER_NOT_ON_TEAM":    4,
	"ERROR_TRADE_ALREADY_PENDING": 5,
}

func (x CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterAddDropResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterAddDropResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamRosterAddDropResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{42, 0}
}

type CMsgDOTAFantasyTeamTradesResponse_EResult int32

const (
	CMsgDOTAFantasyTeamTradesResponse_SUCCESS             CMsgDOTAFantasyTeamTradesResponse_EResult = 0
	CMsgDOTAFantasyTeamTradesResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamTradesResponse_EResult = 1
	CMsgDOTAFantasyTeamTradesResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamTradesResponse_EResult = 2
)

var CMsgDOTAFantasyTeamTradesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyTeamTradesResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyTeamTradesResponse_EResult) Enum() *CMsgDOTAFantasyTeamTradesResponse_EResult {
	p := new(CMsgDOTAFantasyTeamTradesResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamTradesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamTradesResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamTradesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamTradesResponse_EResult_value, data, "CMsgDOTAFantasyTeamTradesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamTradesResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamTradesResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{44, 0}
}

type CMsgDOTAFantasyTeamTradeCancelResponse_EResult int32

const (
	CMsgDOTAFantasyTeamTradeCancelResponse_SUCCESS             CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 0
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 1
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 2
	CMsgDOTAFantasyTeamTradeCancelResponse_ERROR_NO_TRADE      CMsgDOTAFantasyTeamTradeCancelResponse_EResult = 3
)

var CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_NO_TRADE",
}

var CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
	"ERROR_NO_TRADE":      3,
}

func (x CMsgDOTAFantasyTeamTradeCancelResponse_EResult) Enum() *CMsgDOTAFantasyTeamTradeCancelResponse_EResult {
	p := new(CMsgDOTAFantasyTeamTradeCancelResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamTradeCancelResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamTradeCancelResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value, data, "CMsgDOTAFantasyTeamTradeCancelResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamTradeCancelResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamTradeCancelResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{46, 0}
}

type CMsgDOTAFantasyTeamRosterResponse_EResult int32

const (
	CMsgDOTAFantasyTeamRosterResponse_SUCCESS                   CMsgDOTAFantasyTeamRosterResponse_EResult = 0
	CMsgDOTAFantasyTeamRosterResponse_ERROR_UNSPECIFIED         CMsgDOTAFantasyTeamRosterResponse_EResult = 1
	CMsgDOTAFantasyTeamRosterResponse_ERROR_NO_PERMISSION       CMsgDOTAFantasyTeamRosterResponse_EResult = 2
	CMsgDOTAFantasyTeamRosterResponse_ERROR_OWNER_NOT_IN_LEAGUE CMsgDOTAFantasyTeamRosterResponse_EResult = 3
)

var CMsgDOTAFantasyTeamRosterResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_OWNER_NOT_IN_LEAGUE",
}

var CMsgDOTAFantasyTeamRosterResponse_EResult_value = map[string]int32{
	"SUCCESS":                   0,
	"ERROR_UNSPECIFIED":         1,
	"ERROR_NO_PERMISSION":       2,
	"ERROR_OWNER_NOT_IN_LEAGUE": 3,
}

func (x CMsgDOTAFantasyTeamRosterResponse_EResult) Enum() *CMsgDOTAFantasyTeamRosterResponse_EResult {
	p := new(CMsgDOTAFantasyTeamRosterResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyTeamRosterResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyTeamRosterResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyTeamRosterResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyTeamRosterResponse_EResult_value, data, "CMsgDOTAFantasyTeamRosterResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyTeamRosterResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyTeamRosterResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{48, 0}
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_SUCCESS             CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 0
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 1
	CMsgDOTAFantasyPlayerHisoricalStatsResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{50, 0}
}

type CMsgDOTAFantasyMessagesResponse_EResult int32

const (
	CMsgDOTAFantasyMessagesResponse_SUCCESS             CMsgDOTAFantasyMessagesResponse_EResult = 0
	CMsgDOTAFantasyMessagesResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyMessagesResponse_EResult = 1
	CMsgDOTAFantasyMessagesResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyMessagesResponse_EResult = 2
)

var CMsgDOTAFantasyMessagesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
}

var CMsgDOTAFantasyMessagesResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
}

func (x CMsgDOTAFantasyMessagesResponse_EResult) Enum() *CMsgDOTAFantasyMessagesResponse_EResult {
	p := new(CMsgDOTAFantasyMessagesResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyMessagesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyMessagesResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyMessagesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyMessagesResponse_EResult_value, data, "CMsgDOTAFantasyMessagesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyMessagesResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyMessagesResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{53, 0}
}

type CMsgDOTAFantasyRemoveOwnerResponse_EResult int32

const (
	CMsgDOTAFantasyRemoveOwnerResponse_SUCCESS             CMsgDOTAFantasyRemoveOwnerResponse_EResult = 0
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_UNSPECIFIED   CMsgDOTAFantasyRemoveOwnerResponse_EResult = 1
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_NO_PERMISSION CMsgDOTAFantasyRemoveOwnerResponse_EResult = 2
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_LEAGUE_LOCKED CMsgDOTAFantasyRemoveOwnerResponse_EResult = 3
	CMsgDOTAFantasyRemoveOwnerResponse_ERROR_NOT_A_MEMBER  CMsgDOTAFantasyRemoveOwnerResponse_EResult = 4
)

var CMsgDOTAFantasyRemoveOwnerResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NO_PERMISSION",
	3: "ERROR_LEAGUE_LOCKED",
	4: "ERROR_NOT_A_MEMBER",
}

var CMsgDOTAFantasyRemoveOwnerResponse_EResult_value = map[string]int32{
	"SUCCESS":             0,
	"ERROR_UNSPECIFIED":   1,
	"ERROR_NO_PERMISSION": 2,
	"ERROR_LEAGUE_LOCKED": 3,
	"ERROR_NOT_A_MEMBER":  4,
}

func (x CMsgDOTAFantasyRemoveOwnerResponse_EResult) Enum() *CMsgDOTAFantasyRemoveOwnerResponse_EResult {
	p := new(CMsgDOTAFantasyRemoveOwnerResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyRemoveOwnerResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyRemoveOwnerResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyRemoveOwnerResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyRemoveOwnerResponse_EResult_value, data, "CMsgDOTAFantasyRemoveOwnerResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyRemoveOwnerResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyRemoveOwnerResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{55, 0}
}

type CMsgDOTAFantasyScheduledMatchesResponse_EResult int32

const (
	CMsgDOTAFantasyScheduledMatchesResponse_SUCCESS           CMsgDOTAFantasyScheduledMatchesResponse_EResult = 0
	CMsgDOTAFantasyScheduledMatchesResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyScheduledMatchesResponse_EResult = 1
)

var CMsgDOTAFantasyScheduledMatchesResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
}

var CMsgDOTAFantasyScheduledMatchesResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
}

func (x CMsgDOTAFantasyScheduledMatchesResponse_EResult) Enum() *CMsgDOTAFantasyScheduledMatchesResponse_EResult {
	p := new(CMsgDOTAFantasyScheduledMatchesResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyScheduledMatchesResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyScheduledMatchesResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyScheduledMatchesResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyScheduledMatchesResponse_EResult_value, data, "CMsgDOTAFantasyScheduledMatchesResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyScheduledMatchesResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyScheduledMatchesResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{57, 0}
}

type CMsgDOTAFantasyLeaveLeagueResponse_EResult int32

const (
	CMsgDOTAFantasyLeaveLeagueResponse_SUCCESS                CMsgDOTAFantasyLeaveLeagueResponse_EResult = 0
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_UNSPECIFIED      CMsgDOTAFantasyLeaveLeagueResponse_EResult = 1
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_NOT_MEMBER       CMsgDOTAFantasyLeaveLeagueResponse_EResult = 2
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_LEAGUE_NOT_FOUND CMsgDOTAFantasyLeaveLeagueResponse_EResult = 3
	CMsgDOTAFantasyLeaveLeagueResponse_ERROR_DRAFT_ACTIVE     CMsgDOTAFantasyLeaveLeagueResponse_EResult = 4
)

var CMsgDOTAFantasyLeaveLeagueResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NOT_MEMBER",
	3: "ERROR_LEAGUE_NOT_FOUND",
	4: "ERROR_DRAFT_ACTIVE",
}

var CMsgDOTAFantasyLeaveLeagueResponse_EResult_value = map[string]int32{
	"SUCCESS":                0,
	"ERROR_UNSPECIFIED":      1,
	"ERROR_NOT_MEMBER":       2,
	"ERROR_LEAGUE_NOT_FOUND": 3,
	"ERROR_DRAFT_ACTIVE":     4,
}

func (x CMsgDOTAFantasyLeaveLeagueResponse_EResult) Enum() *CMsgDOTAFantasyLeaveLeagueResponse_EResult {
	p := new(CMsgDOTAFantasyLeaveLeagueResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyLeaveLeagueResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyLeaveLeagueResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyLeaveLeagueResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyLeaveLeagueResponse_EResult_value, data, "CMsgDOTAFantasyLeaveLeagueResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyLeaveLeagueResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyLeaveLeagueResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{59, 0}
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult int32

const (
	CMsgDOTAFantasyPlayerScoreDetailsResponse_SUCCESS           CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 0
	CMsgDOTAFantasyPlayerScoreDetailsResponse_ERROR_UNSPECIFIED CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 1
	CMsgDOTAFantasyPlayerScoreDetailsResponse_ERROR_NOT_MEMBER  CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = 2
)

var CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name = map[int32]string{
	0: "SUCCESS",
	1: "ERROR_UNSPECIFIED",
	2: "ERROR_NOT_MEMBER",
}

var CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value = map[string]int32{
	"SUCCESS":           0,
	"ERROR_UNSPECIFIED": 1,
	"ERROR_NOT_MEMBER":  2,
}

func (x CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) Enum() *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult {
	p := new(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult)
	*p = x
	return p
}

func (x CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) String() string {
	return proto.EnumName(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name, int32(x))
}

func (x *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value, data, "CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult")
	if err != nil {
		return err
	}
	*x = CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult(value)
	return nil
}

func (CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{61, 0}
}

type CMsgGCPlayerInfo struct {
	PlayerInfos          []*CMsgGCPlayerInfo_PlayerInfo        `protobuf:"bytes,1,rep,name=player_infos" json:"player_infos,omitempty"`
	Leaderboards         []*CMsgGCPlayerInfo_RegionLeaderboard `protobuf:"bytes,2,rep,name=leaderboards" json:"leaderboards,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                              `json:"-"`
	XXX_unrecognized     []byte                                `json:"-"`
	XXX_sizecache        int32                                 `json:"-"`
}

func (m *CMsgGCPlayerInfo) Reset()         { *m = CMsgGCPlayerInfo{} }
func (m *CMsgGCPlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfo) ProtoMessage()    {}
func (*CMsgGCPlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{0}
}

func (m *CMsgGCPlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCPlayerInfo.Unmarshal(m, b)
}
func (m *CMsgGCPlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCPlayerInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGCPlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCPlayerInfo.Merge(m, src)
}
func (m *CMsgGCPlayerInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGCPlayerInfo.Size(m)
}
func (m *CMsgGCPlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCPlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCPlayerInfo proto.InternalMessageInfo

func (m *CMsgGCPlayerInfo) GetPlayerInfos() []*CMsgGCPlayerInfo_PlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

func (m *CMsgGCPlayerInfo) GetLeaderboards() []*CMsgGCPlayerInfo_RegionLeaderboard {
	if m != nil {
		return m.Leaderboards
	}
	return nil
}

type CMsgGCPlayerInfo_PlayerInfo struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	CountryCode          *string  `protobuf:"bytes,3,opt,name=country_code" json:"country_code,omitempty"`
	FantasyRole          *uint32  `protobuf:"varint,4,opt,name=fantasy_role" json:"fantasy_role,omitempty"`
	TeamId               *uint32  `protobuf:"varint,5,opt,name=team_id" json:"team_id,omitempty"`
	TeamName             *string  `protobuf:"bytes,6,opt,name=team_name" json:"team_name,omitempty"`
	TeamTag              *string  `protobuf:"bytes,7,opt,name=team_tag" json:"team_tag,omitempty"`
	Sponsor              *string  `protobuf:"bytes,8,opt,name=sponsor" json:"sponsor,omitempty"`
	IsLocked             *bool    `protobuf:"varint,9,opt,name=is_locked" json:"is_locked,omitempty"`
	IsPro                *bool    `protobuf:"varint,10,opt,name=is_pro" json:"is_pro,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCPlayerInfo_PlayerInfo) Reset()         { *m = CMsgGCPlayerInfo_PlayerInfo{} }
func (m *CMsgGCPlayerInfo_PlayerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfo_PlayerInfo) ProtoMessage()    {}
func (*CMsgGCPlayerInfo_PlayerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{0, 0}
}

func (m *CMsgGCPlayerInfo_PlayerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo.Unmarshal(m, b)
}
func (m *CMsgGCPlayerInfo_PlayerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo.Marshal(b, m, deterministic)
}
func (m *CMsgGCPlayerInfo_PlayerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo.Merge(m, src)
}
func (m *CMsgGCPlayerInfo_PlayerInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo.Size(m)
}
func (m *CMsgGCPlayerInfo_PlayerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCPlayerInfo_PlayerInfo proto.InternalMessageInfo

func (m *CMsgGCPlayerInfo_PlayerInfo) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetFantasyRole() uint32 {
	if m != nil && m.FantasyRole != nil {
		return *m.FantasyRole
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetTeamTag() string {
	if m != nil && m.TeamTag != nil {
		return *m.TeamTag
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetSponsor() string {
	if m != nil && m.Sponsor != nil {
		return *m.Sponsor
	}
	return ""
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetIsLocked() bool {
	if m != nil && m.IsLocked != nil {
		return *m.IsLocked
	}
	return false
}

func (m *CMsgGCPlayerInfo_PlayerInfo) GetIsPro() bool {
	if m != nil && m.IsPro != nil {
		return *m.IsPro
	}
	return false
}

type CMsgGCPlayerInfo_RegionLeaderboard struct {
	Division             *uint32  `protobuf:"varint,1,opt,name=division" json:"division,omitempty"`
	AccountIds           []uint32 `protobuf:"varint,2,rep,name=account_ids" json:"account_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgGCPlayerInfo_RegionLeaderboard) Reset()         { *m = CMsgGCPlayerInfo_RegionLeaderboard{} }
func (m *CMsgGCPlayerInfo_RegionLeaderboard) String() string { return proto.CompactTextString(m) }
func (*CMsgGCPlayerInfo_RegionLeaderboard) ProtoMessage()    {}
func (*CMsgGCPlayerInfo_RegionLeaderboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{0, 1}
}

func (m *CMsgGCPlayerInfo_RegionLeaderboard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard.Unmarshal(m, b)
}
func (m *CMsgGCPlayerInfo_RegionLeaderboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard.Marshal(b, m, deterministic)
}
func (m *CMsgGCPlayerInfo_RegionLeaderboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard.Merge(m, src)
}
func (m *CMsgGCPlayerInfo_RegionLeaderboard) XXX_Size() int {
	return xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard.Size(m)
}
func (m *CMsgGCPlayerInfo_RegionLeaderboard) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgGCPlayerInfo_RegionLeaderboard proto.InternalMessageInfo

func (m *CMsgGCPlayerInfo_RegionLeaderboard) GetDivision() uint32 {
	if m != nil && m.Division != nil {
		return *m.Division
	}
	return 0
}

func (m *CMsgGCPlayerInfo_RegionLeaderboard) GetAccountIds() []uint32 {
	if m != nil {
		return m.AccountIds
	}
	return nil
}

type CMsgDOTACreateFantasyLeagueRequest struct {
	LeagueName           *string                 `protobuf:"bytes,1,opt,name=league_name" json:"league_name,omitempty"`
	LeagueLogo           *uint64                 `protobuf:"varint,2,opt,name=league_logo" json:"league_logo,omitempty"`
	SelectionMode        *Fantasy_Selection_Mode `protobuf:"varint,3,opt,name=selection_mode,enum=Fantasy_Selection_Mode,def=0" json:"selection_mode,omitempty"`
	TeamCount            *uint32                 `protobuf:"varint,4,opt,name=team_count" json:"team_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CMsgDOTACreateFantasyLeagueRequest) Reset()         { *m = CMsgDOTACreateFantasyLeagueRequest{} }
func (m *CMsgDOTACreateFantasyLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateFantasyLeagueRequest) ProtoMessage()    {}
func (*CMsgDOTACreateFantasyLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{1}
}

func (m *CMsgDOTACreateFantasyLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest.Unmarshal(m, b)
}
func (m *CMsgDOTACreateFantasyLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTACreateFantasyLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest.Merge(m, src)
}
func (m *CMsgDOTACreateFantasyLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest.Size(m)
}
func (m *CMsgDOTACreateFantasyLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTACreateFantasyLeagueRequest proto.InternalMessageInfo

const Default_CMsgDOTACreateFantasyLeagueRequest_SelectionMode Fantasy_Selection_Mode = Fantasy_Selection_Mode_FANTASY_SELECTION_INVALID

func (m *CMsgDOTACreateFantasyLeagueRequest) GetLeagueName() string {
	if m != nil && m.LeagueName != nil {
		return *m.LeagueName
	}
	return ""
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetLeagueLogo() uint64 {
	if m != nil && m.LeagueLogo != nil {
		return *m.LeagueLogo
	}
	return 0
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetSelectionMode() Fantasy_Selection_Mode {
	if m != nil && m.SelectionMode != nil {
		return *m.SelectionMode
	}
	return Default_CMsgDOTACreateFantasyLeagueRequest_SelectionMode
}

func (m *CMsgDOTACreateFantasyLeagueRequest) GetTeamCount() uint32 {
	if m != nil && m.TeamCount != nil {
		return *m.TeamCount
	}
	return 0
}

type CMsgDOTACreateFantasyLeagueResponse struct {
	Result               *CMsgDOTACreateFantasyLeagueResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTACreateFantasyLeagueResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgDOTACreateFantasyLeagueResponse) Reset()         { *m = CMsgDOTACreateFantasyLeagueResponse{} }
func (m *CMsgDOTACreateFantasyLeagueResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTACreateFantasyLeagueResponse) ProtoMessage()    {}
func (*CMsgDOTACreateFantasyLeagueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{2}
}

func (m *CMsgDOTACreateFantasyLeagueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse.Unmarshal(m, b)
}
func (m *CMsgDOTACreateFantasyLeagueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTACreateFantasyLeagueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse.Merge(m, src)
}
func (m *CMsgDOTACreateFantasyLeagueResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse.Size(m)
}
func (m *CMsgDOTACreateFantasyLeagueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTACreateFantasyLeagueResponse proto.InternalMessageInfo

const Default_CMsgDOTACreateFantasyLeagueResponse_Result CMsgDOTACreateFantasyLeagueResponse_EResult = CMsgDOTACreateFantasyLeagueResponse_SUCCESS

func (m *CMsgDOTACreateFantasyLeagueResponse) GetResult() CMsgDOTACreateFantasyLeagueResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTACreateFantasyLeagueResponse_Result
}

type CMsgFantasyLeagueScoring struct {
	Level                  *float32 `protobuf:"fixed32,1,opt,name=level" json:"level,omitempty"`
	Kills                  *float32 `protobuf:"fixed32,2,opt,name=kills" json:"kills,omitempty"`
	Deaths                 *float32 `protobuf:"fixed32,3,opt,name=deaths" json:"deaths,omitempty"`
	Assists                *float32 `protobuf:"fixed32,4,opt,name=assists" json:"assists,omitempty"`
	LastHits               *float32 `protobuf:"fixed32,5,opt,name=last_hits" json:"last_hits,omitempty"`
	Denies                 *float32 `protobuf:"fixed32,6,opt,name=denies" json:"denies,omitempty"`
	Gpm                    *float32 `protobuf:"fixed32,7,opt,name=gpm" json:"gpm,omitempty"`
	Xppm                   *float32 `protobuf:"fixed32,8,opt,name=xppm" json:"xppm,omitempty"`
	Stuns                  *float32 `protobuf:"fixed32,9,opt,name=stuns" json:"stuns,omitempty"`
	Healing                *float32 `protobuf:"fixed32,10,opt,name=healing" json:"healing,omitempty"`
	TowerKills             *float32 `protobuf:"fixed32,11,opt,name=tower_kills" json:"tower_kills,omitempty"`
	RoshanKills            *float32 `protobuf:"fixed32,12,opt,name=roshan_kills" json:"roshan_kills,omitempty"`
	MultiplierPremium      *float32 `protobuf:"fixed32,13,opt,name=multiplier_premium" json:"multiplier_premium,omitempty"`
	MultiplierProfessional *float32 `protobuf:"fixed32,14,opt,name=multiplier_professional" json:"multiplier_professional,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CMsgFantasyLeagueScoring) Reset()         { *m = CMsgFantasyLeagueScoring{} }
func (m *CMsgFantasyLeagueScoring) String() string { return proto.CompactTextString(m) }
func (*CMsgFantasyLeagueScoring) ProtoMessage()    {}
func (*CMsgFantasyLeagueScoring) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{3}
}

func (m *CMsgFantasyLeagueScoring) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgFantasyLeagueScoring.Unmarshal(m, b)
}
func (m *CMsgFantasyLeagueScoring) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgFantasyLeagueScoring.Marshal(b, m, deterministic)
}
func (m *CMsgFantasyLeagueScoring) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgFantasyLeagueScoring.Merge(m, src)
}
func (m *CMsgFantasyLeagueScoring) XXX_Size() int {
	return xxx_messageInfo_CMsgFantasyLeagueScoring.Size(m)
}
func (m *CMsgFantasyLeagueScoring) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgFantasyLeagueScoring.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgFantasyLeagueScoring proto.InternalMessageInfo

func (m *CMsgFantasyLeagueScoring) GetLevel() float32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetKills() float32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetDeaths() float32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetAssists() float32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetLastHits() float32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetDenies() float32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetXppm() float32 {
	if m != nil && m.Xppm != nil {
		return *m.Xppm
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetStuns() float32 {
	if m != nil && m.Stuns != nil {
		return *m.Stuns
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetHealing() float32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetTowerKills() float32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetRoshanKills() float32 {
	if m != nil && m.RoshanKills != nil {
		return *m.RoshanKills
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetMultiplierPremium() float32 {
	if m != nil && m.MultiplierPremium != nil {
		return *m.MultiplierPremium
	}
	return 0
}

func (m *CMsgFantasyLeagueScoring) GetMultiplierProfessional() float32 {
	if m != nil && m.MultiplierProfessional != nil {
		return *m.MultiplierProfessional
	}
	return 0
}

type CMsgDOTAFantasyLeagueInfo struct {
	FantasyLeagueId       *uint32                                `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	CommissionerAccountId *uint32                                `protobuf:"varint,2,opt,name=commissioner_account_id" json:"commissioner_account_id,omitempty"`
	FantasyLeagueName     *string                                `protobuf:"bytes,3,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	SelectionMode         *Fantasy_Selection_Mode                `protobuf:"varint,4,opt,name=selection_mode,enum=Fantasy_Selection_Mode,def=0" json:"selection_mode,omitempty"`
	TeamCount             *uint32                                `protobuf:"varint,5,opt,name=team_count" json:"team_count,omitempty"`
	Logo                  *uint64                                `protobuf:"varint,6,opt,name=logo" json:"logo,omitempty"`
	Scoring               *CMsgFantasyLeagueScoring              `protobuf:"bytes,7,opt,name=scoring" json:"scoring,omitempty"`
	DraftTime             *uint32                                `protobuf:"varint,12,opt,name=draft_time" json:"draft_time,omitempty"`
	DraftPickTime         *uint32                                `protobuf:"varint,13,opt,name=draft_pick_time" json:"draft_pick_time,omitempty"`
	SeasonStart           *uint32                                `protobuf:"varint,15,opt,name=season_start" json:"season_start,omitempty"`
	SeasonLength          *uint32                                `protobuf:"varint,16,opt,name=season_length" json:"season_length,omitempty"`
	VetoVotes             *uint32                                `protobuf:"varint,17,opt,name=veto_votes" json:"veto_votes,omitempty"`
	Acquisitions          *uint32                                `protobuf:"varint,18,opt,name=acquisitions" json:"acquisitions,omitempty"`
	Slot_1                *uint32                                `protobuf:"varint,19,opt,name=slot_1" json:"slot_1,omitempty"`
	Slot_2                *uint32                                `protobuf:"varint,20,opt,name=slot_2" json:"slot_2,omitempty"`
	Slot_3                *uint32                                `protobuf:"varint,21,opt,name=slot_3" json:"slot_3,omitempty"`
	Slot_4                *uint32                                `protobuf:"varint,22,opt,name=slot_4" json:"slot_4,omitempty"`
	Slot_5                *uint32                                `protobuf:"varint,23,opt,name=slot_5" json:"slot_5,omitempty"`
	BenchSlots            *uint32                                `protobuf:"varint,24,opt,name=bench_slots" json:"bench_slots,omitempty"`
	OwnerInfo             []*CMsgDOTAFantasyLeagueInfo_OwnerInfo `protobuf:"bytes,25,rep,name=owner_info" json:"owner_info,omitempty"`
	Players               []uint32                               `protobuf:"varint,26,rep,name=players" json:"players,omitempty"`
	TimeZone              *uint32                                `protobuf:"varint,27,opt,name=time_zone" json:"time_zone,omitempty"`
	Season                *uint32                                `protobuf:"varint,28,opt,name=season" json:"season,omitempty"`
	Password              *string                                `protobuf:"bytes,29,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                               `json:"-"`
	XXX_unrecognized      []byte                                 `json:"-"`
	XXX_sizecache         int32                                  `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfo) Reset()         { *m = CMsgDOTAFantasyLeagueInfo{} }
func (m *CMsgDOTAFantasyLeagueInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfo) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{4}
}

func (m *CMsgDOTAFantasyLeagueInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfo.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo.Size(m)
}
func (m *CMsgDOTAFantasyLeagueInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueInfo proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueInfo_SelectionMode Fantasy_Selection_Mode = Fantasy_Selection_Mode_FANTASY_SELECTION_INVALID

func (m *CMsgDOTAFantasyLeagueInfo) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetCommissionerAccountId() uint32 {
	if m != nil && m.CommissionerAccountId != nil {
		return *m.CommissionerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSelectionMode() Fantasy_Selection_Mode {
	if m != nil && m.SelectionMode != nil {
		return *m.SelectionMode
	}
	return Default_CMsgDOTAFantasyLeagueInfo_SelectionMode
}

func (m *CMsgDOTAFantasyLeagueInfo) GetTeamCount() uint32 {
	if m != nil && m.TeamCount != nil {
		return *m.TeamCount
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetScoring() *CMsgFantasyLeagueScoring {
	if m != nil {
		return m.Scoring
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetDraftTime() uint32 {
	if m != nil && m.DraftTime != nil {
		return *m.DraftTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetDraftPickTime() uint32 {
	if m != nil && m.DraftPickTime != nil {
		return *m.DraftPickTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeasonStart() uint32 {
	if m != nil && m.SeasonStart != nil {
		return *m.SeasonStart
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeasonLength() uint32 {
	if m != nil && m.SeasonLength != nil {
		return *m.SeasonLength
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetVetoVotes() uint32 {
	if m != nil && m.VetoVotes != nil {
		return *m.VetoVotes
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetAcquisitions() uint32 {
	if m != nil && m.Acquisitions != nil {
		return *m.Acquisitions
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_1() uint32 {
	if m != nil && m.Slot_1 != nil {
		return *m.Slot_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_2() uint32 {
	if m != nil && m.Slot_2 != nil {
		return *m.Slot_2
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_3() uint32 {
	if m != nil && m.Slot_3 != nil {
		return *m.Slot_3
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_4() uint32 {
	if m != nil && m.Slot_4 != nil {
		return *m.Slot_4
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSlot_5() uint32 {
	if m != nil && m.Slot_5 != nil {
		return *m.Slot_5
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetBenchSlots() uint32 {
	if m != nil && m.BenchSlots != nil {
		return *m.BenchSlots
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetOwnerInfo() []*CMsgDOTAFantasyLeagueInfo_OwnerInfo {
	if m != nil {
		return m.OwnerInfo
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetPlayers() []uint32 {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueInfo) GetTimeZone() uint32 {
	if m != nil && m.TimeZone != nil {
		return *m.TimeZone
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetSeason() uint32 {
	if m != nil && m.Season != nil {
		return *m.Season
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type CMsgDOTAFantasyLeagueInfo_OwnerInfo struct {
	OwnerAccountId       *uint32  `protobuf:"varint,1,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	LeftLeague           *bool    `protobuf:"varint,2,opt,name=left_league" json:"left_league,omitempty"`
	PlayerAccountId      []uint32 `protobuf:"varint,3,rep,name=player_account_id" json:"player_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) Reset()         { *m = CMsgDOTAFantasyLeagueInfo_OwnerInfo{} }
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfo_OwnerInfo) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueInfo_OwnerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{4, 0}
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo.Size(m)
}
func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueInfo_OwnerInfo proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetLeftLeague() bool {
	if m != nil && m.LeftLeague != nil {
		return *m.LeftLeague
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueInfo_OwnerInfo) GetPlayerAccountId() []uint32 {
	if m != nil {
		return m.PlayerAccountId
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInfoRequest struct {
	FantasyLeagueId      *uint32                    `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	EditInfo             *CMsgDOTAFantasyLeagueInfo `protobuf:"bytes,2,opt,name=edit_info" json:"edit_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) Reset()         { *m = CMsgDOTAFantasyLeagueEditInfoRequest{} }
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInfoRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueEditInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{5}
}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueEditInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInfoRequest) GetEditInfo() *CMsgDOTAFantasyLeagueInfo {
	if m != nil {
		return m.EditInfo
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInfoResponse struct {
	Result               *CMsgDOTAFantasyLeagueEditInfoResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueEditInfoResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInfoResponse) Reset()         { *m = CMsgDOTAFantasyLeagueEditInfoResponse{} }
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInfoResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueEditInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{6}
}

func (m *CMsgDOTAFantasyLeagueEditInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueEditInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueEditInfoResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueEditInfoResponse_Result CMsgDOTAFantasyLeagueEditInfoResponse_EResult = CMsgDOTAFantasyLeagueEditInfoResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueEditInfoResponse) GetResult() CMsgDOTAFantasyLeagueEditInfoResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueEditInfoResponse_Result
}

type CMsgDOTAFantasyLeagueFindRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password             *string  `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueFindRequest) Reset()         { *m = CMsgDOTAFantasyLeagueFindRequest{} }
func (m *CMsgDOTAFantasyLeagueFindRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueFindRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueFindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{7}
}

func (m *CMsgDOTAFantasyLeagueFindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueFindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueFindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueFindRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueFindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueFindRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueFindRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueFindRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type CMsgDOTAFantasyLeagueFindResponse struct {
	Result               *CMsgDOTAFantasyLeagueFindResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueFindResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueName    *string                                    `protobuf:"bytes,2,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	CommissionerName     *string                                    `protobuf:"bytes,3,opt,name=commissioner_name" json:"commissioner_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueFindResponse) Reset()         { *m = CMsgDOTAFantasyLeagueFindResponse{} }
func (m *CMsgDOTAFantasyLeagueFindResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueFindResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueFindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{8}
}

func (m *CMsgDOTAFantasyLeagueFindResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueFindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueFindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueFindResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueFindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueFindResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueFindResponse_Result CMsgDOTAFantasyLeagueFindResponse_EResult = CMsgDOTAFantasyLeagueFindResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueFindResponse) GetResult() CMsgDOTAFantasyLeagueFindResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueFindResponse_Result
}

func (m *CMsgDOTAFantasyLeagueFindResponse) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueFindResponse) GetCommissionerName() string {
	if m != nil && m.CommissionerName != nil {
		return *m.CommissionerName
	}
	return ""
}

type CMsgDOTAFantasyLeagueInfoRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfoRequest) Reset()         { *m = CMsgDOTAFantasyLeagueInfoRequest{} }
func (m *CMsgDOTAFantasyLeagueInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfoRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{9}
}

func (m *CMsgDOTAFantasyLeagueInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueInfoRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueInfoRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueInfoResponse struct {
	Result               *CMsgDOTAFantasyLeagueInfoResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueInfoResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueInfoResponse) Reset()         { *m = CMsgDOTAFantasyLeagueInfoResponse{} }
func (m *CMsgDOTAFantasyLeagueInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueInfoResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{10}
}

func (m *CMsgDOTAFantasyLeagueInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueInfoResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueInfoResponse_Result CMsgDOTAFantasyLeagueInfoResponse_EResult = CMsgDOTAFantasyLeagueInfoResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueInfoResponse) GetResult() CMsgDOTAFantasyLeagueInfoResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueInfoResponse_Result
}

type CMsgDOTAFantasyLeagueMatchupsRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsRequest) Reset()         { *m = CMsgDOTAFantasyLeagueMatchupsRequest{} }
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueMatchupsRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueMatchupsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{11}
}

func (m *CMsgDOTAFantasyLeagueMatchupsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueMatchupsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueMatchupsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueMatchupsResponse struct {
	Result               *CMsgDOTAFantasyLeagueMatchupsResponse_EResult          `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueMatchupsResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId      *uint32                                                 `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	WeeklyMatchups       []*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups `protobuf:"bytes,3,rep,name=weekly_matchups" json:"weekly_matchups,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) Reset()         { *m = CMsgDOTAFantasyLeagueMatchupsResponse{} }
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueMatchupsResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueMatchupsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{12}
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueMatchupsResponse_Result CMsgDOTAFantasyLeagueMatchupsResponse_EResult = CMsgDOTAFantasyLeagueMatchupsResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetResult() CMsgDOTAFantasyLeagueMatchupsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueMatchupsResponse_Result
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse) GetWeeklyMatchups() []*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups {
	if m != nil {
		return m.WeeklyMatchups
	}
	return nil
}

type CMsgDOTAFantasyLeagueMatchupsResponse_Matchup struct {
	OwnerAccountId_1     *uint32  `protobuf:"varint,1,opt,name=owner_account_id_1" json:"owner_account_id_1,omitempty"`
	OwnerAccountId_2     *uint32  `protobuf:"varint,2,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	Score_1              *float32 `protobuf:"fixed32,3,opt,name=score_1" json:"score_1,omitempty"`
	Score_2              *float32 `protobuf:"fixed32,4,opt,name=score_2" json:"score_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) Reset() {
	*m = CMsgDOTAFantasyLeagueMatchupsResponse_Matchup{}
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) ProtoMessage() {}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{12, 0}
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup.Size(m)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_Matchup proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetOwnerAccountId_1() uint32 {
	if m != nil && m.OwnerAccountId_1 != nil {
		return *m.OwnerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetScore_1() float32 {
	if m != nil && m.Score_1 != nil {
		return *m.Score_1
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_Matchup) GetScore_2() float32 {
	if m != nil && m.Score_2 != nil {
		return *m.Score_2
	}
	return 0
}

type CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups struct {
	Matchup              []*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup `protobuf:"bytes,1,rep,name=matchup" json:"matchup,omitempty"`
	StartTime            *uint32                                          `protobuf:"varint,2,opt,name=start_time" json:"start_time,omitempty"`
	EndTime              *uint32                                          `protobuf:"varint,3,opt,name=end_time" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                         `json:"-"`
	XXX_unrecognized     []byte                                           `json:"-"`
	XXX_sizecache        int32                                            `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) Reset() {
	*m = CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups{}
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) ProtoMessage() {}
func (*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{12, 1}
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups.Size(m)
}
func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetMatchup() []*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup {
	if m != nil {
		return m.Matchup
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CMsgDOTAEditFantasyTeamRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	TeamName             *string  `protobuf:"bytes,3,opt,name=team_name" json:"team_name,omitempty"`
	TeamLogo             *uint64  `protobuf:"varint,4,opt,name=team_logo" json:"team_logo,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAEditFantasyTeamRequest) Reset()         { *m = CMsgDOTAEditFantasyTeamRequest{} }
func (m *CMsgDOTAEditFantasyTeamRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditFantasyTeamRequest) ProtoMessage()    {}
func (*CMsgDOTAEditFantasyTeamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{13}
}

func (m *CMsgDOTAEditFantasyTeamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAEditFantasyTeamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAEditFantasyTeamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest.Merge(m, src)
}
func (m *CMsgDOTAEditFantasyTeamRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest.Size(m)
}
func (m *CMsgDOTAEditFantasyTeamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAEditFantasyTeamRequest proto.InternalMessageInfo

func (m *CMsgDOTAEditFantasyTeamRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAEditFantasyTeamRequest) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

type CMsgDOTAEditFantasyTeamResponse struct {
	Result               *CMsgDOTAEditFantasyTeamResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAEditFantasyTeamResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *CMsgDOTAEditFantasyTeamResponse) Reset()         { *m = CMsgDOTAEditFantasyTeamResponse{} }
func (m *CMsgDOTAEditFantasyTeamResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAEditFantasyTeamResponse) ProtoMessage()    {}
func (*CMsgDOTAEditFantasyTeamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{14}
}

func (m *CMsgDOTAEditFantasyTeamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAEditFantasyTeamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAEditFantasyTeamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse.Merge(m, src)
}
func (m *CMsgDOTAEditFantasyTeamResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse.Size(m)
}
func (m *CMsgDOTAEditFantasyTeamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAEditFantasyTeamResponse proto.InternalMessageInfo

const Default_CMsgDOTAEditFantasyTeamResponse_Result CMsgDOTAEditFantasyTeamResponse_EResult = CMsgDOTAEditFantasyTeamResponse_SUCCESS

func (m *CMsgDOTAEditFantasyTeamResponse) GetResult() CMsgDOTAEditFantasyTeamResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAEditFantasyTeamResponse_Result
}

type CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) Reset() {
	*m = CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID{}
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) ProtoMessage() {}
func (*CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{15}
}

func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.Size(m)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID struct {
	OwnerAccountId       *uint32  `protobuf:"varint,1,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) Reset() {
	*m = CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID{}
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) ProtoMessage() {}
func (*CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{16}
}

func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.Size(m)
}
func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

type CMsgDOTAFantasyTeamInfoResponse struct {
	Results              []*CMsgDOTAFantasyTeamInfo `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfoResponse) Reset()         { *m = CMsgDOTAFantasyTeamInfoResponse{} }
func (m *CMsgDOTAFantasyTeamInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamInfoResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{17}
}

func (m *CMsgDOTAFantasyTeamInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamInfoResponse proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamInfoResponse) GetResults() []*CMsgDOTAFantasyTeamInfo {
	if m != nil {
		return m.Results
	}
	return nil
}

type CMsgDOTAFantasyTeamInfo struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId       *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex     *uint32  `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	TeamName             *string  `protobuf:"bytes,4,opt,name=team_name" json:"team_name,omitempty"`
	TeamLogo             *uint64  `protobuf:"varint,5,opt,name=team_logo" json:"team_logo,omitempty"`
	Wins                 *uint32  `protobuf:"varint,6,opt,name=wins" json:"wins,omitempty"`
	Losses               *uint32  `protobuf:"varint,7,opt,name=losses" json:"losses,omitempty"`
	CurrentRoster        []uint32 `protobuf:"varint,8,rep,name=current_roster" json:"current_roster,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamInfo) Reset()         { *m = CMsgDOTAFantasyTeamInfo{} }
func (m *CMsgDOTAFantasyTeamInfo) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamInfo) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{18}
}

func (m *CMsgDOTAFantasyTeamInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfo.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfo.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfo.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamInfo) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamInfo.Size(m)
}
func (m *CMsgDOTAFantasyTeamInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamInfo proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamInfo) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamInfo) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamInfo) GetCurrentRoster() []uint32 {
	if m != nil {
		return m.CurrentRoster
	}
	return nil
}

type CMsgDOTAFantasyTeamScoreRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId       *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex     *uint32  `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	FilterMatchId        *uint64  `protobuf:"varint,4,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterStartTime      *uint32  `protobuf:"varint,5,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime        *uint32  `protobuf:"varint,6,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	IncludeBench         *bool    `protobuf:"varint,7,opt,name=include_bench" json:"include_bench,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreRequest) Reset()         { *m = CMsgDOTAFantasyTeamScoreRequest{} }
func (m *CMsgDOTAFantasyTeamScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamScoreRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{19}
}

func (m *CMsgDOTAFantasyTeamScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamScoreRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamScoreRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterMatchId() uint64 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreRequest) GetIncludeBench() bool {
	if m != nil && m.IncludeBench != nil {
		return *m.IncludeBench
	}
	return false
}

type CMsgDOTAFantasyTeamScoreResponse struct {
	Result               *CMsgDOTAFantasyTeamScoreResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamScoreResponse_EResult,def=0" json:"result,omitempty"`
	FantasyTeamScore     *float32                                            `protobuf:"fixed32,2,opt,name=fantasy_team_score" json:"fantasy_team_score,omitempty"`
	FantasyPlayerScore   []*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore `protobuf:"bytes,3,rep,name=fantasy_player_score" json:"fantasy_player_score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                            `json:"-"`
	XXX_unrecognized     []byte                                              `json:"-"`
	XXX_sizecache        int32                                               `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreResponse) Reset()         { *m = CMsgDOTAFantasyTeamScoreResponse{} }
func (m *CMsgDOTAFantasyTeamScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamScoreResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{20}
}

func (m *CMsgDOTAFantasyTeamScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamScoreResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamScoreResponse_Result CMsgDOTAFantasyTeamScoreResponse_EResult = CMsgDOTAFantasyTeamScoreResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamScoreResponse) GetResult() CMsgDOTAFantasyTeamScoreResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamScoreResponse_Result
}

func (m *CMsgDOTAFantasyTeamScoreResponse) GetFantasyTeamScore() float32 {
	if m != nil && m.FantasyTeamScore != nil {
		return *m.FantasyTeamScore
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreResponse) GetFantasyPlayerScore() []*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore {
	if m != nil {
		return m.FantasyPlayerScore
	}
	return nil
}

type CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Score                *float32 `protobuf:"fixed32,2,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) Reset() {
	*m = CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore{}
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) ProtoMessage() {}
func (*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{20, 0}
}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore.Size(m)
}
func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyTeamStandingsRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Count                *uint32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	FilterStartTime      *uint32  `protobuf:"varint,3,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime        *uint32  `protobuf:"varint,4,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId        *uint64  `protobuf:"varint,5,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch      *bool    `protobuf:"varint,6,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	FilterInHall         *bool    `protobuf:"varint,7,opt,name=filter_in_hall" json:"filter_in_hall,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) Reset()         { *m = CMsgDOTAFantasyTeamStandingsRequest{} }
func (m *CMsgDOTAFantasyTeamStandingsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamStandingsRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamStandingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{21}
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamStandingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamStandingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamStandingsRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamStandingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamStandingsRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterMatchId() uint64 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

func (m *CMsgDOTAFantasyTeamStandingsRequest) GetFilterInHall() bool {
	if m != nil && m.FilterInHall != nil {
		return *m.FilterInHall
	}
	return false
}

type CMsgDOTAFantasyTeamStandingsResponse struct {
	Result               *CMsgDOTAFantasyTeamStandingsResponse_EResult         `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamStandingsResponse_EResult,def=0" json:"result,omitempty"`
	TeamScores           []*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore `protobuf:"bytes,3,rep,name=team_scores" json:"team_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsResponse) Reset()         { *m = CMsgDOTAFantasyTeamStandingsResponse{} }
func (m *CMsgDOTAFantasyTeamStandingsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamStandingsResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamStandingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{22}
}

func (m *CMsgDOTAFantasyTeamStandingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamStandingsResponse_Result CMsgDOTAFantasyTeamStandingsResponse_EResult = CMsgDOTAFantasyTeamStandingsResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamStandingsResponse) GetResult() CMsgDOTAFantasyTeamStandingsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamStandingsResponse_Result
}

func (m *CMsgDOTAFantasyTeamStandingsResponse) GetTeamScores() []*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore {
	if m != nil {
		return m.TeamScores
	}
	return nil
}

type CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId       *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	FantasyTeamIndex     *uint32  `protobuf:"varint,3,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	FantasyTeamLogo      *uint64  `protobuf:"varint,4,opt,name=fantasy_team_logo" json:"fantasy_team_logo,omitempty"`
	OwnerName            *string  `protobuf:"bytes,5,opt,name=owner_name" json:"owner_name,omitempty"`
	FantasyTeamName      *string  `protobuf:"bytes,6,opt,name=fantasy_team_name" json:"fantasy_team_name,omitempty"`
	Score                *float32 `protobuf:"fixed32,7,opt,name=score" json:"score,omitempty"`
	ScoreAgainst         *float32 `protobuf:"fixed32,8,opt,name=score_against" json:"score_against,omitempty"`
	Wins                 *uint32  `protobuf:"varint,9,opt,name=wins" json:"wins,omitempty"`
	Losses               *uint32  `protobuf:"varint,10,opt,name=losses" json:"losses,omitempty"`
	Streak               *int32   `protobuf:"varint,11,opt,name=streak" json:"streak,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) Reset() {
	*m = CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore{}
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) ProtoMessage() {}
func (*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{22, 0}
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore.Size(m)
}
func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamLogo() uint64 {
	if m != nil && m.FantasyTeamLogo != nil {
		return *m.FantasyTeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetOwnerName() string {
	if m != nil && m.OwnerName != nil {
		return *m.OwnerName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetFantasyTeamName() string {
	if m != nil && m.FantasyTeamName != nil {
		return *m.FantasyTeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetScoreAgainst() float32 {
	if m != nil && m.ScoreAgainst != nil {
		return *m.ScoreAgainst
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetWins() uint32 {
	if m != nil && m.Wins != nil {
		return *m.Wins
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetLosses() uint32 {
	if m != nil && m.Losses != nil {
		return *m.Losses
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore) GetStreak() int32 {
	if m != nil && m.Streak != nil {
		return *m.Streak
	}
	return 0
}

type CMsgDOTAFantasyPlayerScoreRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId      *uint32  `protobuf:"varint,2,opt,name=player_account_id" json:"player_account_id,omitempty"`
	FilterStartTime      *uint32  `protobuf:"varint,3,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime        *uint32  `protobuf:"varint,4,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId        *uint64  `protobuf:"varint,5,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch      *bool    `protobuf:"varint,6,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) Reset()         { *m = CMsgDOTAFantasyPlayerScoreRequest{} }
func (m *CMsgDOTAFantasyPlayerScoreRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerScoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{23}
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerScoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerScoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerScoreRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest.Size(m)
}
func (m *CMsgDOTAFantasyPlayerScoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerScoreRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterMatchId() uint64 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

type CMsgDOTAFantasyPlayerScoreResponse struct {
	Result               *CMsgDOTAFantasyPlayerScoreResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerScoreResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId      *uint32                                     `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId      *uint32                                     `protobuf:"varint,3,opt,name=player_account_id" json:"player_account_id,omitempty"`
	PlayerName           *string                                     `protobuf:"bytes,4,opt,name=player_name" json:"player_name,omitempty"`
	Score                *float32                                    `protobuf:"fixed32,5,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) Reset()         { *m = CMsgDOTAFantasyPlayerScoreResponse{} }
func (m *CMsgDOTAFantasyPlayerScoreResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerScoreResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{24}
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerScoreResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerScoreResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerScoreResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse.Size(m)
}
func (m *CMsgDOTAFantasyPlayerScoreResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerScoreResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyPlayerScoreResponse_Result CMsgDOTAFantasyPlayerScoreResponse_EResult = CMsgDOTAFantasyPlayerScoreResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetResult() CMsgDOTAFantasyPlayerScoreResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerScoreResponse_Result
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerScoreResponse) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyPlayerStandingsRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Count                *uint32  `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Role                 *uint32  `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	FilterStartTime      *uint32  `protobuf:"varint,4,opt,name=filter_start_time" json:"filter_start_time,omitempty"`
	FilterEndTime        *uint32  `protobuf:"varint,5,opt,name=filter_end_time" json:"filter_end_time,omitempty"`
	FilterMatchId        *uint64  `protobuf:"varint,6,opt,name=filter_match_id" json:"filter_match_id,omitempty"`
	FilterLastMatch      *bool    `protobuf:"varint,7,opt,name=filter_last_match" json:"filter_last_match,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) Reset()         { *m = CMsgDOTAFantasyPlayerStandingsRequest{} }
func (m *CMsgDOTAFantasyPlayerStandingsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerStandingsRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerStandingsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{25}
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerStandingsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerStandingsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerStandingsRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest.Size(m)
}
func (m *CMsgDOTAFantasyPlayerStandingsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetCount() uint32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterStartTime() uint32 {
	if m != nil && m.FilterStartTime != nil {
		return *m.FilterStartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterEndTime() uint32 {
	if m != nil && m.FilterEndTime != nil {
		return *m.FilterEndTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterMatchId() uint64 {
	if m != nil && m.FilterMatchId != nil {
		return *m.FilterMatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsRequest) GetFilterLastMatch() bool {
	if m != nil && m.FilterLastMatch != nil {
		return *m.FilterLastMatch
	}
	return false
}

type CMsgDOTAFantasyPlayerStandingsResponse struct {
	Result               *CMsgDOTAFantasyPlayerStandingsResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerStandingsResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId      *uint32                                                   `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Role                 *uint32                                                   `protobuf:"varint,3,opt,name=role" json:"role,omitempty"`
	PlayerScores         []*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore `protobuf:"bytes,4,rep,name=player_scores" json:"player_scores,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                  `json:"-"`
	XXX_unrecognized     []byte                                                    `json:"-"`
	XXX_sizecache        int32                                                     `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerStandingsResponse{}
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerStandingsResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerStandingsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{26}
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse.Size(m)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyPlayerStandingsResponse_Result CMsgDOTAFantasyPlayerStandingsResponse_EResult = CMsgDOTAFantasyPlayerStandingsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetResult() CMsgDOTAFantasyPlayerStandingsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerStandingsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetRole() uint32 {
	if m != nil && m.Role != nil {
		return *m.Role
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse) GetPlayerScores() []*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore {
	if m != nil {
		return m.PlayerScores
	}
	return nil
}

type CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore struct {
	PlayerAccountId      *uint32  `protobuf:"varint,1,opt,name=player_account_id" json:"player_account_id,omitempty"`
	PlayerName           *string  `protobuf:"bytes,2,opt,name=player_name" json:"player_name,omitempty"`
	Score                *float32 `protobuf:"fixed32,3,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) Reset() {
	*m = CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore{}
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{26, 0}
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore.Size(m)
}
func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyPlayerInfoRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerInfoRequest) Reset()         { *m = CMsgDOTAFantasyPlayerInfoRequest{} }
func (m *CMsgDOTAFantasyPlayerInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerInfoRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{27}
}

func (m *CMsgDOTAFantasyPlayerInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest.Size(m)
}
func (m *CMsgDOTAFantasyPlayerInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerInfoRequest proto.InternalMessageInfo

type CMsgDOTAFantasyPlayerInfoResponse struct {
	Msg                  *CMsgGCPlayerInfo `protobuf:"bytes,1,opt,name=msg" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerInfoResponse) Reset()         { *m = CMsgDOTAFantasyPlayerInfoResponse{} }
func (m *CMsgDOTAFantasyPlayerInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerInfoResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{28}
}

func (m *CMsgDOTAFantasyPlayerInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerInfoResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse.Size(m)
}
func (m *CMsgDOTAFantasyPlayerInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerInfoResponse proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerInfoResponse) GetMsg() *CMsgGCPlayerInfo {
	if m != nil {
		return m.Msg
	}
	return nil
}

type CMsgDOTAFantasyLeagueCreateRequest struct {
	SeasonId             *uint32  `protobuf:"varint,1,opt,name=season_id" json:"season_id,omitempty"`
	FantasyLeagueName    *string  `protobuf:"bytes,2,opt,name=fantasy_league_name" json:"fantasy_league_name,omitempty"`
	Password             *string  `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	TeamName             *string  `protobuf:"bytes,4,opt,name=team_name" json:"team_name,omitempty"`
	Logo                 *uint64  `protobuf:"varint,5,opt,name=logo" json:"logo,omitempty"`
	TicketItemId         *uint64  `protobuf:"varint,6,opt,name=ticket_item_id" json:"ticket_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) Reset()         { *m = CMsgDOTAFantasyLeagueCreateRequest{} }
func (m *CMsgDOTAFantasyLeagueCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueCreateRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{29}
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueCreateRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueCreateRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetSeasonId() uint32 {
	if m != nil && m.SeasonId != nil {
		return *m.SeasonId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetFantasyLeagueName() string {
	if m != nil && m.FantasyLeagueName != nil {
		return *m.FantasyLeagueName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueCreateRequest) GetTicketItemId() uint64 {
	if m != nil && m.TicketItemId != nil {
		return *m.TicketItemId
	}
	return 0
}

type CMsgDOTAFantasyLeagueCreateResponse struct {
	Result               *CMsgDOTAFantasyLeagueCreateResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueCreateResponse_EResult,def=0" json:"result,omitempty"`
	FantasyLeagueId      *uint32                                      `protobuf:"varint,2,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueCreateResponse) Reset()         { *m = CMsgDOTAFantasyLeagueCreateResponse{} }
func (m *CMsgDOTAFantasyLeagueCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueCreateResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{30}
}

func (m *CMsgDOTAFantasyLeagueCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueCreateResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueCreateResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueCreateResponse_Result CMsgDOTAFantasyLeagueCreateResponse_EResult = CMsgDOTAFantasyLeagueCreateResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueCreateResponse) GetResult() CMsgDOTAFantasyLeagueCreateResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueCreateResponse_Result
}

func (m *CMsgDOTAFantasyLeagueCreateResponse) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamCreateRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password             *string  `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	TeamName             *string  `protobuf:"bytes,3,opt,name=team_name" json:"team_name,omitempty"`
	Logo                 *uint64  `protobuf:"varint,4,opt,name=logo" json:"logo,omitempty"`
	TicketItemId         *uint64  `protobuf:"varint,5,opt,name=ticket_item_id" json:"ticket_item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamCreateRequest) Reset()         { *m = CMsgDOTAFantasyTeamCreateRequest{} }
func (m *CMsgDOTAFantasyTeamCreateRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamCreateRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamCreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{31}
}

func (m *CMsgDOTAFantasyTeamCreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamCreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamCreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamCreateRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamCreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamCreateRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamCreateRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetLogo() uint64 {
	if m != nil && m.Logo != nil {
		return *m.Logo
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamCreateRequest) GetTicketItemId() uint64 {
	if m != nil && m.TicketItemId != nil {
		return *m.TicketItemId
	}
	return 0
}

type CMsgDOTAFantasyTeamCreateResponse struct {
	Result               *CMsgDOTAFantasyTeamCreateResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamCreateResponse_EResult,def=0" json:"result,omitempty"`
	FantasyTeamIndex     *uint32                                    `protobuf:"varint,2,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyTeamCreateResponse) Reset()         { *m = CMsgDOTAFantasyTeamCreateResponse{} }
func (m *CMsgDOTAFantasyTeamCreateResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamCreateResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamCreateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{32}
}

func (m *CMsgDOTAFantasyTeamCreateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamCreateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamCreateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamCreateResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamCreateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamCreateResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamCreateResponse_Result CMsgDOTAFantasyTeamCreateResponse_EResult = CMsgDOTAFantasyTeamCreateResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamCreateResponse) GetResult() CMsgDOTAFantasyTeamCreateResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamCreateResponse_Result
}

func (m *CMsgDOTAFantasyTeamCreateResponse) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

type CMsgDOTAFantasyLeagueEditInvitesRequest struct {
	FantasyLeagueId      *uint32                                                 `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Password             *string                                                 `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	InviteChange         []*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange `protobuf:"bytes,3,rep,name=invite_change" json:"invite_change,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                `json:"-"`
	XXX_unrecognized     []byte                                                  `json:"-"`
	XXX_sizecache        int32                                                   `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesRequest{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInvitesRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueEditInvitesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{33}
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest) GetInviteChange() []*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange {
	if m != nil {
		return m.InviteChange
	}
	return nil
}

type CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Invited              *bool    `protobuf:"varint,2,opt,name=invited" json:"invited,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) ProtoMessage() {}
func (*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{33, 0}
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange.Size(m)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange) GetInvited() bool {
	if m != nil && m.Invited != nil {
		return *m.Invited
	}
	return false
}

type CMsgDOTAFantasyLeagueEditInvitesResponse struct {
	Result               *CMsgDOTAFantasyLeagueEditInvitesResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueEditInvitesResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) Reset() {
	*m = CMsgDOTAFantasyLeagueEditInvitesResponse{}
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueEditInvitesResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueEditInvitesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{34}
}

func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueEditInvitesResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueEditInvitesResponse_Result CMsgDOTAFantasyLeagueEditInvitesResponse_EResult = CMsgDOTAFantasyLeagueEditInvitesResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueEditInvitesResponse) GetResult() CMsgDOTAFantasyLeagueEditInvitesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueEditInvitesResponse_Result
}

type CMsgDOTAFantasyLeagueDraftStatusRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftStatusRequest{}
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftStatusRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueDraftStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{35}
}

func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatusRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueDraftStatusRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyLeagueDraftStatus struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	DraftOrder           []uint32 `protobuf:"varint,2,rep,name=draft_order" json:"draft_order,omitempty"`
	CurrentPick          *uint32  `protobuf:"varint,3,opt,name=current_pick" json:"current_pick,omitempty"`
	TimeRemaining        *uint32  `protobuf:"varint,4,opt,name=time_remaining" json:"time_remaining,omitempty"`
	PendingResume        *bool    `protobuf:"varint,5,opt,name=pending_resume" json:"pending_resume,omitempty"`
	Completed            *bool    `protobuf:"varint,6,opt,name=completed" json:"completed,omitempty"`
	AvailablePlayers     []uint32 `protobuf:"varint,7,rep,name=available_players" json:"available_players,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) Reset()         { *m = CMsgDOTAFantasyLeagueDraftStatus{} }
func (m *CMsgDOTAFantasyLeagueDraftStatus) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftStatus) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueDraftStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{36}
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueDraftStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueDraftStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueDraftStatus) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus.Size(m)
}
func (m *CMsgDOTAFantasyLeagueDraftStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueDraftStatus proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetDraftOrder() []uint32 {
	if m != nil {
		return m.DraftOrder
	}
	return nil
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetCurrentPick() uint32 {
	if m != nil && m.CurrentPick != nil {
		return *m.CurrentPick
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetTimeRemaining() uint32 {
	if m != nil && m.TimeRemaining != nil {
		return *m.TimeRemaining
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetPendingResume() bool {
	if m != nil && m.PendingResume != nil {
		return *m.PendingResume
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetCompleted() bool {
	if m != nil && m.Completed != nil {
		return *m.Completed
	}
	return false
}

func (m *CMsgDOTAFantasyLeagueDraftStatus) GetAvailablePlayers() []uint32 {
	if m != nil {
		return m.AvailablePlayers
	}
	return nil
}

type CMsgDOTAFantasyLeagueDraftPlayerRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	PlayerAccountId      *uint32  `protobuf:"varint,3,opt,name=player_account_id" json:"player_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftPlayerRequest{}
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftPlayerRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueDraftPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{37}
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

type CMsgDOTAFantasyLeagueDraftPlayerResponse struct {
	Result               *CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) Reset() {
	*m = CMsgDOTAFantasyLeagueDraftPlayerResponse{}
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeagueDraftPlayerResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeagueDraftPlayerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{38}
}

func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeagueDraftPlayerResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeagueDraftPlayerResponse_Result CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult = CMsgDOTAFantasyLeagueDraftPlayerResponse_SUCCESS

func (m *CMsgDOTAFantasyLeagueDraftPlayerResponse) GetResult() CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeagueDraftPlayerResponse_Result
}

type CMsgDOTAFantasyTeamRosterSwapRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Slot_1               *uint32  `protobuf:"varint,4,opt,name=slot_1" json:"slot_1,omitempty"`
	Slot_2               *uint32  `protobuf:"varint,5,opt,name=slot_2" json:"slot_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) Reset()         { *m = CMsgDOTAFantasyTeamRosterSwapRequest{} }
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterSwapRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterSwapRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{39}
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterSwapRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetSlot_1() uint32 {
	if m != nil && m.Slot_1 != nil {
		return *m.Slot_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterSwapRequest) GetSlot_2() uint32 {
	if m != nil && m.Slot_2 != nil {
		return *m.Slot_2
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterSwapResponse struct {
	Result               *CMsgDOTAFantasyTeamRosterSwapResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterSwapResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterSwapResponse) Reset()         { *m = CMsgDOTAFantasyTeamRosterSwapResponse{} }
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterSwapResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterSwapResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{40}
}

func (m *CMsgDOTAFantasyTeamRosterSwapResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterSwapResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterSwapResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamRosterSwapResponse_Result CMsgDOTAFantasyTeamRosterSwapResponse_EResult = CMsgDOTAFantasyTeamRosterSwapResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterSwapResponse) GetResult() CMsgDOTAFantasyTeamRosterSwapResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterSwapResponse_Result
}

type CMsgDOTAFantasyTeamRosterAddDropRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	AddAccountId         *uint32  `protobuf:"varint,5,opt,name=add_account_id" json:"add_account_id,omitempty"`
	DropAccountId        *uint32  `protobuf:"varint,6,opt,name=drop_account_id" json:"drop_account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) Reset() {
	*m = CMsgDOTAFantasyTeamRosterAddDropRequest{}
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterAddDropRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterAddDropRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{41}
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetAddAccountId() uint32 {
	if m != nil && m.AddAccountId != nil {
		return *m.AddAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterAddDropRequest) GetDropAccountId() uint32 {
	if m != nil && m.DropAccountId != nil {
		return *m.DropAccountId
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterAddDropResponse struct {
	Result               *CMsgDOTAFantasyTeamRosterAddDropResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterAddDropResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                          `json:"-"`
	XXX_unrecognized     []byte                                            `json:"-"`
	XXX_sizecache        int32                                             `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) Reset() {
	*m = CMsgDOTAFantasyTeamRosterAddDropResponse{}
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterAddDropResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterAddDropResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{42}
}

func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterAddDropResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamRosterAddDropResponse_Result CMsgDOTAFantasyTeamRosterAddDropResponse_EResult = CMsgDOTAFantasyTeamRosterAddDropResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterAddDropResponse) GetResult() CMsgDOTAFantasyTeamRosterAddDropResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterAddDropResponse_Result
}

type CMsgDOTAFantasyTeamTradesRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesRequest) Reset()         { *m = CMsgDOTAFantasyTeamTradesRequest{} }
func (m *CMsgDOTAFantasyTeamTradesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamTradesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{43}
}

func (m *CMsgDOTAFantasyTeamTradesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamTradesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamTradesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamTradesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamTradesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamTradesRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamTradesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyTeamTradesResponse struct {
	Result               *CMsgDOTAFantasyTeamTradesResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamTradesResponse_EResult,def=0" json:"result,omitempty"`
	Trades               []*CMsgDOTAFantasyTeamTradesResponse_Trade `protobuf:"bytes,2,rep,name=trades" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesResponse) Reset()         { *m = CMsgDOTAFantasyTeamTradesResponse{} }
func (m *CMsgDOTAFantasyTeamTradesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamTradesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{44}
}

func (m *CMsgDOTAFantasyTeamTradesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamTradesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamTradesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamTradesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamTradesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamTradesResponse_Result CMsgDOTAFantasyTeamTradesResponse_EResult = CMsgDOTAFantasyTeamTradesResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamTradesResponse) GetResult() CMsgDOTAFantasyTeamTradesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamTradesResponse_Result
}

func (m *CMsgDOTAFantasyTeamTradesResponse) GetTrades() []*CMsgDOTAFantasyTeamTradesResponse_Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

type CMsgDOTAFantasyTeamTradesResponse_Trade struct {
	Timestamp            *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	OwnerAccountId_1     *uint32  `protobuf:"varint,2,opt,name=owner_account_id_1" json:"owner_account_id_1,omitempty"`
	OwnerAccountId_2     *uint32  `protobuf:"varint,3,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	PlayerAccountId_1    *uint32  `protobuf:"varint,4,opt,name=player_account_id_1" json:"player_account_id_1,omitempty"`
	PlayerAccountId_2    *uint32  `protobuf:"varint,5,opt,name=player_account_id_2" json:"player_account_id_2,omitempty"`
	Status               *uint32  `protobuf:"varint,6,opt,name=status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) Reset() {
	*m = CMsgDOTAFantasyTeamTradesResponse_Trade{}
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradesResponse_Trade) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamTradesResponse_Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{44, 0}
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade.Size(m)
}
func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamTradesResponse_Trade proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetOwnerAccountId_1() uint32 {
	if m != nil && m.OwnerAccountId_1 != nil {
		return *m.OwnerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetPlayerAccountId_1() uint32 {
	if m != nil && m.PlayerAccountId_1 != nil {
		return *m.PlayerAccountId_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetPlayerAccountId_2() uint32 {
	if m != nil && m.PlayerAccountId_2 != nil {
		return *m.PlayerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradesResponse_Trade) GetStatus() uint32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type CMsgDOTAFantasyTeamTradeCancelRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex_1          *uint32  `protobuf:"varint,3,opt,name=team_index_1" json:"team_index_1,omitempty"`
	OwnerAccountId_2     *uint32  `protobuf:"varint,4,opt,name=owner_account_id_2" json:"owner_account_id_2,omitempty"`
	TeamIndex_2          *uint32  `protobuf:"varint,5,opt,name=team_index_2" json:"team_index_2,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) Reset()         { *m = CMsgDOTAFantasyTeamTradeCancelRequest{} }
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradeCancelRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamTradeCancelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{45}
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamTradeCancelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetTeamIndex_1() uint32 {
	if m != nil && m.TeamIndex_1 != nil {
		return *m.TeamIndex_1
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetOwnerAccountId_2() uint32 {
	if m != nil && m.OwnerAccountId_2 != nil {
		return *m.OwnerAccountId_2
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamTradeCancelRequest) GetTeamIndex_2() uint32 {
	if m != nil && m.TeamIndex_2 != nil {
		return *m.TeamIndex_2
	}
	return 0
}

type CMsgDOTAFantasyTeamTradeCancelResponse struct {
	Result               *CMsgDOTAFantasyTeamTradeCancelResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamTradeCancelResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *CMsgDOTAFantasyTeamTradeCancelResponse) Reset() {
	*m = CMsgDOTAFantasyTeamTradeCancelResponse{}
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamTradeCancelResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamTradeCancelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{46}
}

func (m *CMsgDOTAFantasyTeamTradeCancelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamTradeCancelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamTradeCancelResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamTradeCancelResponse_Result CMsgDOTAFantasyTeamTradeCancelResponse_EResult = CMsgDOTAFantasyTeamTradeCancelResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamTradeCancelResponse) GetResult() CMsgDOTAFantasyTeamTradeCancelResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamTradeCancelResponse_Result
}

type CMsgDOTAFantasyTeamRosterRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,2,opt,name=team_index" json:"team_index,omitempty"`
	OwnerAccountId       *uint32  `protobuf:"varint,3,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	Timestamp            *uint32  `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterRequest) Reset()         { *m = CMsgDOTAFantasyTeamRosterRequest{} }
func (m *CMsgDOTAFantasyTeamRosterRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{47}
}

func (m *CMsgDOTAFantasyTeamRosterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyTeamRosterRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyTeamRosterRequest) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type CMsgDOTAFantasyTeamRosterResponse struct {
	Result               *CMsgDOTAFantasyTeamRosterResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyTeamRosterResponse_EResult,def=0" json:"result,omitempty"`
	PlayerAccountIds     []uint32                                   `protobuf:"varint,2,rep,name=player_account_ids" json:"player_account_ids,omitempty"`
	PlayerLocked         []bool                                     `protobuf:"varint,3,rep,name=player_locked" json:"player_locked,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyTeamRosterResponse) Reset()         { *m = CMsgDOTAFantasyTeamRosterResponse{} }
func (m *CMsgDOTAFantasyTeamRosterResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyTeamRosterResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyTeamRosterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{48}
}

func (m *CMsgDOTAFantasyTeamRosterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyTeamRosterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyTeamRosterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyTeamRosterResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse.Size(m)
}
func (m *CMsgDOTAFantasyTeamRosterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyTeamRosterResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyTeamRosterResponse_Result CMsgDOTAFantasyTeamRosterResponse_EResult = CMsgDOTAFantasyTeamRosterResponse_SUCCESS

func (m *CMsgDOTAFantasyTeamRosterResponse) GetResult() CMsgDOTAFantasyTeamRosterResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyTeamRosterResponse_Result
}

func (m *CMsgDOTAFantasyTeamRosterResponse) GetPlayerAccountIds() []uint32 {
	if m != nil {
		return m.PlayerAccountIds
	}
	return nil
}

func (m *CMsgDOTAFantasyTeamRosterResponse) GetPlayerLocked() []bool {
	if m != nil {
		return m.PlayerLocked
	}
	return nil
}

type CMsgDOTAFantasyPlayerHisoricalStatsRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsRequest{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsRequest) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerHisoricalStatsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{49}
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest.Size(m)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerHisoricalStatsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse struct {
	Result               *CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult       `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult,def=0" json:"result,omitempty"`
	Stats                []*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats `protobuf:"bytes,2,rep,name=stats" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                   `json:"-"`
	XXX_unrecognized     []byte                                                     `json:"-"`
	XXX_sizecache        int32                                                      `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsResponse{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{50}
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse.Size(m)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyPlayerHisoricalStatsResponse_Result CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult = CMsgDOTAFantasyPlayerHisoricalStatsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) GetResult() CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerHisoricalStatsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse) GetStats() []*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator struct {
	Matches              *uint32  `protobuf:"varint,1,opt,name=matches" json:"matches,omitempty"`
	Levels               *float32 `protobuf:"fixed32,2,opt,name=levels" json:"levels,omitempty"`
	Kills                *float32 `protobuf:"fixed32,3,opt,name=kills" json:"kills,omitempty"`
	Deaths               *float32 `protobuf:"fixed32,4,opt,name=deaths" json:"deaths,omitempty"`
	Assists              *float32 `protobuf:"fixed32,5,opt,name=assists" json:"assists,omitempty"`
	LastHits             *float32 `protobuf:"fixed32,6,opt,name=last_hits" json:"last_hits,omitempty"`
	Denies               *float32 `protobuf:"fixed32,7,opt,name=denies" json:"denies,omitempty"`
	Gpm                  *float32 `protobuf:"fixed32,8,opt,name=gpm" json:"gpm,omitempty"`
	Xppm                 *float32 `protobuf:"fixed32,9,opt,name=xppm" json:"xppm,omitempty"`
	Stuns                *float32 `protobuf:"fixed32,10,opt,name=stuns" json:"stuns,omitempty"`
	Healing              *float32 `protobuf:"fixed32,11,opt,name=healing" json:"healing,omitempty"`
	TowerKills           *float32 `protobuf:"fixed32,12,opt,name=tower_kills" json:"tower_kills,omitempty"`
	RoshanKills          *float32 `protobuf:"fixed32,13,opt,name=roshan_kills" json:"roshan_kills,omitempty"`
	Score                *float32 `protobuf:"fixed32,14,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{50, 0}
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator.Size(m)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetMatches() uint32 {
	if m != nil && m.Matches != nil {
		return *m.Matches
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetLevels() float32 {
	if m != nil && m.Levels != nil {
		return *m.Levels
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetKills() float32 {
	if m != nil && m.Kills != nil {
		return *m.Kills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetDeaths() float32 {
	if m != nil && m.Deaths != nil {
		return *m.Deaths
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetAssists() float32 {
	if m != nil && m.Assists != nil {
		return *m.Assists
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetLastHits() float32 {
	if m != nil && m.LastHits != nil {
		return *m.LastHits
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetDenies() float32 {
	if m != nil && m.Denies != nil {
		return *m.Denies
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetGpm() float32 {
	if m != nil && m.Gpm != nil {
		return *m.Gpm
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetXppm() float32 {
	if m != nil && m.Xppm != nil {
		return *m.Xppm
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetStuns() float32 {
	if m != nil && m.Stuns != nil {
		return *m.Stuns
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetHealing() float32 {
	if m != nil && m.Healing != nil {
		return *m.Healing
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetTowerKills() float32 {
	if m != nil && m.TowerKills != nil {
		return *m.TowerKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetRoshanKills() float32 {
	if m != nil && m.RoshanKills != nil {
		return *m.RoshanKills
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator) GetScore() float32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats struct {
	AccountId            *uint32                                                             `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Weeks                *uint32                                                             `protobuf:"varint,2,opt,name=weeks" json:"weeks,omitempty"`
	StatsPremium         *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator `protobuf:"bytes,4,opt,name=stats_premium" json:"stats_premium,omitempty"`
	StatsProfessional    *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator `protobuf:"bytes,5,opt,name=stats_professional" json:"stats_professional,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                            `json:"-"`
	XXX_unrecognized     []byte                                                              `json:"-"`
	XXX_sizecache        int32                                                               `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) Reset() {
	*m = CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats{}
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{50, 1}
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats.Size(m)
}
func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetWeeks() uint32 {
	if m != nil && m.Weeks != nil {
		return *m.Weeks
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetStatsPremium() *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator {
	if m != nil {
		return m.StatsPremium
	}
	return nil
}

func (m *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats) GetStatsProfessional() *CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator {
	if m != nil {
		return m.StatsProfessional
	}
	return nil
}

type CMsgDOTAFantasyMessageAdd struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyMessageAdd) Reset()         { *m = CMsgDOTAFantasyMessageAdd{} }
func (m *CMsgDOTAFantasyMessageAdd) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessageAdd) ProtoMessage()    {}
func (*CMsgDOTAFantasyMessageAdd) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{51}
}

func (m *CMsgDOTAFantasyMessageAdd) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyMessageAdd.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyMessageAdd) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyMessageAdd.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyMessageAdd) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyMessageAdd.Merge(m, src)
}
func (m *CMsgDOTAFantasyMessageAdd) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyMessageAdd.Size(m)
}
func (m *CMsgDOTAFantasyMessageAdd) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyMessageAdd.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyMessageAdd proto.InternalMessageInfo

func (m *CMsgDOTAFantasyMessageAdd) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessageAdd) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type CMsgDOTAFantasyMessagesRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	StartMessage         *uint32  `protobuf:"varint,2,opt,name=start_message" json:"start_message,omitempty"`
	EndMessage           *uint32  `protobuf:"varint,3,opt,name=end_message" json:"end_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesRequest) Reset()         { *m = CMsgDOTAFantasyMessagesRequest{} }
func (m *CMsgDOTAFantasyMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{52}
}

func (m *CMsgDOTAFantasyMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyMessagesRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesRequest.Size(m)
}
func (m *CMsgDOTAFantasyMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyMessagesRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyMessagesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesRequest) GetStartMessage() uint32 {
	if m != nil && m.StartMessage != nil {
		return *m.StartMessage
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesRequest) GetEndMessage() uint32 {
	if m != nil && m.EndMessage != nil {
		return *m.EndMessage
	}
	return 0
}

type CMsgDOTAFantasyMessagesResponse struct {
	Result               *CMsgDOTAFantasyMessagesResponse_EResult   `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyMessagesResponse_EResult,def=0" json:"result,omitempty"`
	Messages             []*CMsgDOTAFantasyMessagesResponse_Message `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	NumTotalMessages     *uint32                                    `protobuf:"varint,3,opt,name=num_total_messages" json:"num_total_messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesResponse) Reset()         { *m = CMsgDOTAFantasyMessagesResponse{} }
func (m *CMsgDOTAFantasyMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{53}
}

func (m *CMsgDOTAFantasyMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyMessagesResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse.Size(m)
}
func (m *CMsgDOTAFantasyMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyMessagesResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyMessagesResponse_Result CMsgDOTAFantasyMessagesResponse_EResult = CMsgDOTAFantasyMessagesResponse_SUCCESS

func (m *CMsgDOTAFantasyMessagesResponse) GetResult() CMsgDOTAFantasyMessagesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyMessagesResponse_Result
}

func (m *CMsgDOTAFantasyMessagesResponse) GetMessages() []*CMsgDOTAFantasyMessagesResponse_Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *CMsgDOTAFantasyMessagesResponse) GetNumTotalMessages() uint32 {
	if m != nil && m.NumTotalMessages != nil {
		return *m.NumTotalMessages
	}
	return 0
}

type CMsgDOTAFantasyMessagesResponse_Message struct {
	MessageId            *uint32  `protobuf:"varint,1,opt,name=message_id" json:"message_id,omitempty"`
	Message              *string  `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	AuthorAccountId      *uint32  `protobuf:"varint,3,opt,name=author_account_id" json:"author_account_id,omitempty"`
	Time                 *uint32  `protobuf:"varint,4,opt,name=time" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) Reset() {
	*m = CMsgDOTAFantasyMessagesResponse_Message{}
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyMessagesResponse_Message) ProtoMessage()    {}
func (*CMsgDOTAFantasyMessagesResponse_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{53, 0}
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message.Merge(m, src)
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message.Size(m)
}
func (m *CMsgDOTAFantasyMessagesResponse_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyMessagesResponse_Message proto.InternalMessageInfo

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetMessageId() uint32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetAuthorAccountId() uint32 {
	if m != nil && m.AuthorAccountId != nil {
		return *m.AuthorAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyMessagesResponse_Message) GetTime() uint32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type CMsgDOTAFantasyRemoveOwner struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	OwnerAccountId       *uint32  `protobuf:"varint,2,opt,name=owner_account_id" json:"owner_account_id,omitempty"`
	TeamIndex            *uint32  `protobuf:"varint,3,opt,name=team_index" json:"team_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyRemoveOwner) Reset()         { *m = CMsgDOTAFantasyRemoveOwner{} }
func (m *CMsgDOTAFantasyRemoveOwner) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyRemoveOwner) ProtoMessage()    {}
func (*CMsgDOTAFantasyRemoveOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{54}
}

func (m *CMsgDOTAFantasyRemoveOwner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwner.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyRemoveOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwner.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyRemoveOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyRemoveOwner.Merge(m, src)
}
func (m *CMsgDOTAFantasyRemoveOwner) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwner.Size(m)
}
func (m *CMsgDOTAFantasyRemoveOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyRemoveOwner.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyRemoveOwner proto.InternalMessageInfo

func (m *CMsgDOTAFantasyRemoveOwner) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyRemoveOwner) GetOwnerAccountId() uint32 {
	if m != nil && m.OwnerAccountId != nil {
		return *m.OwnerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyRemoveOwner) GetTeamIndex() uint32 {
	if m != nil && m.TeamIndex != nil {
		return *m.TeamIndex
	}
	return 0
}

type CMsgDOTAFantasyRemoveOwnerResponse struct {
	Result               *CMsgDOTAFantasyRemoveOwnerResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyRemoveOwnerResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgDOTAFantasyRemoveOwnerResponse) Reset()         { *m = CMsgDOTAFantasyRemoveOwnerResponse{} }
func (m *CMsgDOTAFantasyRemoveOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyRemoveOwnerResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyRemoveOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{55}
}

func (m *CMsgDOTAFantasyRemoveOwnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyRemoveOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyRemoveOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyRemoveOwnerResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse.Size(m)
}
func (m *CMsgDOTAFantasyRemoveOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyRemoveOwnerResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyRemoveOwnerResponse_Result CMsgDOTAFantasyRemoveOwnerResponse_EResult = CMsgDOTAFantasyRemoveOwnerResponse_SUCCESS

func (m *CMsgDOTAFantasyRemoveOwnerResponse) GetResult() CMsgDOTAFantasyRemoveOwnerResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyRemoveOwnerResponse_Result
}

type CMsgDOTAFantasyScheduledMatchesRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesRequest) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesRequest{}
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyScheduledMatchesRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyScheduledMatchesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{56}
}

func (m *CMsgDOTAFantasyScheduledMatchesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest.Size(m)
}
func (m *CMsgDOTAFantasyScheduledMatchesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyScheduledMatchesRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

type CMsgDOTAFantasyScheduledMatchesResponse struct {
	Result               *CMsgDOTAFantasyScheduledMatchesResponse_EResult              `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyScheduledMatchesResponse_EResult,def=0" json:"result,omitempty"`
	ScheduledMatchDays   []*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays `protobuf:"bytes,2,rep,name=scheduled_match_days" json:"scheduled_match_days,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                      `json:"-"`
	XXX_unrecognized     []byte                                                        `json:"-"`
	XXX_sizecache        int32                                                         `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesResponse{}
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyScheduledMatchesResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyScheduledMatchesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{57}
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse.Size(m)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyScheduledMatchesResponse_Result CMsgDOTAFantasyScheduledMatchesResponse_EResult = CMsgDOTAFantasyScheduledMatchesResponse_SUCCESS

func (m *CMsgDOTAFantasyScheduledMatchesResponse) GetResult() CMsgDOTAFantasyScheduledMatchesResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyScheduledMatchesResponse_Result
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse) GetScheduledMatchDays() []*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays {
	if m != nil {
		return m.ScheduledMatchDays
	}
	return nil
}

type CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays struct {
	Timestamp            *uint32  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	TeamIds              []uint32 `protobuf:"varint,2,rep,name=team_ids" json:"team_ids,omitempty"`
	LeagueIds            []uint32 `protobuf:"varint,3,rep,name=league_ids" json:"league_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) Reset() {
	*m = CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays{}
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) ProtoMessage() {}
func (*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{57, 0}
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays.Merge(m, src)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays.Size(m)
}
func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays proto.InternalMessageInfo

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetTeamIds() []uint32 {
	if m != nil {
		return m.TeamIds
	}
	return nil
}

func (m *CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays) GetLeagueIds() []uint32 {
	if m != nil {
		return m.LeagueIds
	}
	return nil
}

type CMsgDOTAFantasyLeaveLeagueRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	FantasyTeamIndex     *uint32  `protobuf:"varint,2,opt,name=fantasy_team_index" json:"fantasy_team_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) Reset()         { *m = CMsgDOTAFantasyLeaveLeagueRequest{} }
func (m *CMsgDOTAFantasyLeaveLeagueRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeaveLeagueRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeaveLeagueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{58}
}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeaveLeagueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeaveLeagueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeaveLeagueRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest.Size(m)
}
func (m *CMsgDOTAFantasyLeaveLeagueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyLeaveLeagueRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyLeaveLeagueRequest) GetFantasyTeamIndex() uint32 {
	if m != nil && m.FantasyTeamIndex != nil {
		return *m.FantasyTeamIndex
	}
	return 0
}

type CMsgDOTAFantasyLeaveLeagueResponse struct {
	Result               *CMsgDOTAFantasyLeaveLeagueResponse_EResult `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyLeaveLeagueResponse_EResult,def=0" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CMsgDOTAFantasyLeaveLeagueResponse) Reset()         { *m = CMsgDOTAFantasyLeaveLeagueResponse{} }
func (m *CMsgDOTAFantasyLeaveLeagueResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyLeaveLeagueResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyLeaveLeagueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{59}
}

func (m *CMsgDOTAFantasyLeaveLeagueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyLeaveLeagueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyLeaveLeagueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyLeaveLeagueResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse.Size(m)
}
func (m *CMsgDOTAFantasyLeaveLeagueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyLeaveLeagueResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyLeaveLeagueResponse_Result CMsgDOTAFantasyLeaveLeagueResponse_EResult = CMsgDOTAFantasyLeaveLeagueResponse_SUCCESS

func (m *CMsgDOTAFantasyLeaveLeagueResponse) GetResult() CMsgDOTAFantasyLeaveLeagueResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyLeaveLeagueResponse_Result
}

type CMsgDOTAFantasyPlayerScoreDetailsRequest struct {
	FantasyLeagueId      *uint32  `protobuf:"varint,1,opt,name=fantasy_league_id" json:"fantasy_league_id,omitempty"`
	PlayerAccountId      *uint32  `protobuf:"varint,2,opt,name=player_account_id" json:"player_account_id,omitempty"`
	StartTime            *uint32  `protobuf:"varint,3,opt,name=start_time" json:"start_time,omitempty"`
	EndTime              *uint32  `protobuf:"varint,4,opt,name=end_time" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsRequest{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreDetailsRequest) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerScoreDetailsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{60}
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest.Size(m)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsRequest proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetFantasyLeagueId() uint32 {
	if m != nil && m.FantasyLeagueId != nil {
		return *m.FantasyLeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetPlayerAccountId() uint32 {
	if m != nil && m.PlayerAccountId != nil {
		return *m.PlayerAccountId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsRequest) GetEndTime() uint32 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse struct {
	Result               *CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult           `protobuf:"varint,1,opt,name=result,enum=CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult,def=0" json:"result,omitempty"`
	Data                 []*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsResponse{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse) ProtoMessage()    {}
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{61}
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse.Size(m)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse proto.InternalMessageInfo

const Default_CMsgDOTAFantasyPlayerScoreDetailsResponse_Result CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult = CMsgDOTAFantasyPlayerScoreDetailsResponse_SUCCESS

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) GetResult() CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTAFantasyPlayerScoreDetailsResponse_Result
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse) GetData() []*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData {
	if m != nil {
		return m.Data
	}
	return nil
}

type CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData struct {
	MatchId              *uint64                   `protobuf:"varint,1,opt,name=match_id" json:"match_id,omitempty"`
	SeriesId             *uint32                   `protobuf:"varint,2,opt,name=series_id" json:"series_id,omitempty"`
	SeriesNum            *uint32                   `protobuf:"varint,3,opt,name=series_num" json:"series_num,omitempty"`
	SeriesType           *uint32                   `protobuf:"varint,4,opt,name=series_type" json:"series_type,omitempty"`
	LeagueTier           *uint32                   `protobuf:"varint,5,opt,name=league_tier" json:"league_tier,omitempty"`
	LeagueId             *uint32                   `protobuf:"varint,6,opt,name=league_id" json:"league_id,omitempty"`
	OpposingTeamId       *uint32                   `protobuf:"varint,7,opt,name=opposing_team_id" json:"opposing_team_id,omitempty"`
	OpposingTeamLogo     *uint64                   `protobuf:"varint,8,opt,name=opposing_team_logo" json:"opposing_team_logo,omitempty"`
	OpposingTeamName     *string                   `protobuf:"bytes,9,opt,name=opposing_team_name" json:"opposing_team_name,omitempty"`
	Stats                *CMsgFantasyLeagueScoring `protobuf:"bytes,10,opt,name=stats" json:"stats,omitempty"`
	OwnedBy              *uint32                   `protobuf:"varint,11,opt,name=owned_by" json:"owned_by,omitempty"`
	Benched              *bool                     `protobuf:"varint,12,opt,name=benched" json:"benched,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) Reset() {
	*m = CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData{}
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) String() string {
	return proto.CompactTextString(m)
}
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) ProtoMessage() {}
func (*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{61, 0}
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData.Unmarshal(m, b)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData.Merge(m, src)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData.Size(m)
}
func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData proto.InternalMessageInfo

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesNum() uint32 {
	if m != nil && m.SeriesNum != nil {
		return *m.SeriesNum
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetLeagueTier() uint32 {
	if m != nil && m.LeagueTier != nil {
		return *m.LeagueTier
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamId() uint32 {
	if m != nil && m.OpposingTeamId != nil {
		return *m.OpposingTeamId
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamLogo() uint64 {
	if m != nil && m.OpposingTeamLogo != nil {
		return *m.OpposingTeamLogo
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOpposingTeamName() string {
	if m != nil && m.OpposingTeamName != nil {
		return *m.OpposingTeamName
	}
	return ""
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetStats() *CMsgFantasyLeagueScoring {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetOwnedBy() uint32 {
	if m != nil && m.OwnedBy != nil {
		return *m.OwnedBy
	}
	return 0
}

func (m *CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData) GetBenched() bool {
	if m != nil && m.Benched != nil {
		return *m.Benched
	}
	return false
}

type CMsgDOTATournament struct {
	Teams                []*CMsgDOTATournament_Team `protobuf:"bytes,1,rep,name=teams" json:"teams,omitempty"`
	Games                []*CMsgDOTATournament_Game `protobuf:"bytes,2,rep,name=games" json:"games,omitempty"`
	Gid                  *uint64                    `protobuf:"varint,3,opt,name=gid" json:"gid,omitempty"`
	TournamentId         *uint32                    `protobuf:"varint,4,opt,name=tournament_id" json:"tournament_id,omitempty"`
	TournamentType       *ETournamentType           `protobuf:"varint,5,opt,name=tournament_type,enum=ETournamentType,def=0" json:"tournament_type,omitempty"`
	TournamentTemplate   *ETournamentTemplate       `protobuf:"varint,6,opt,name=tournament_template,enum=ETournamentTemplate,def=0" json:"tournament_template,omitempty"`
	LeagueId             *uint32                    `protobuf:"varint,7,opt,name=league_id" json:"league_id,omitempty"`
	StartTime            *uint32                    `protobuf:"varint,8,opt,name=start_time" json:"start_time,omitempty"`
	State                *ETournamentState          `protobuf:"varint,9,opt,name=state,enum=ETournamentState,def=0" json:"state,omitempty"`
	Nodes                []*CMsgDOTATournament_Node `protobuf:"bytes,10,rep,name=nodes" json:"nodes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CMsgDOTATournament) Reset()         { *m = CMsgDOTATournament{} }
func (m *CMsgDOTATournament) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament) ProtoMessage()    {}
func (*CMsgDOTATournament) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{62}
}

func (m *CMsgDOTATournament) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournament.Unmarshal(m, b)
}
func (m *CMsgDOTATournament) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournament.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournament) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournament.Merge(m, src)
}
func (m *CMsgDOTATournament) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournament.Size(m)
}
func (m *CMsgDOTATournament) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournament.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournament proto.InternalMessageInfo

const Default_CMsgDOTATournament_TournamentType ETournamentType = ETournamentType_k_ETournamentType_Unknown
const Default_CMsgDOTATournament_TournamentTemplate ETournamentTemplate = ETournamentTemplate_k_ETournamentTemplate_None
const Default_CMsgDOTATournament_State ETournamentState = ETournamentState_k_ETournamentState_Unknown

func (m *CMsgDOTATournament) GetTeams() []*CMsgDOTATournament_Team {
	if m != nil {
		return m.Teams
	}
	return nil
}

func (m *CMsgDOTATournament) GetGames() []*CMsgDOTATournament_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

func (m *CMsgDOTATournament) GetGid() uint64 {
	if m != nil && m.Gid != nil {
		return *m.Gid
	}
	return 0
}

func (m *CMsgDOTATournament) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTATournament) GetTournamentType() ETournamentType {
	if m != nil && m.TournamentType != nil {
		return *m.TournamentType
	}
	return Default_CMsgDOTATournament_TournamentType
}

func (m *CMsgDOTATournament) GetTournamentTemplate() ETournamentTemplate {
	if m != nil && m.TournamentTemplate != nil {
		return *m.TournamentTemplate
	}
	return Default_CMsgDOTATournament_TournamentTemplate
}

func (m *CMsgDOTATournament) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTATournament) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CMsgDOTATournament) GetState() ETournamentState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgDOTATournament_State
}

func (m *CMsgDOTATournament) GetNodes() []*CMsgDOTATournament_Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

type CMsgDOTATournament_Team struct {
	TeamId               *uint32  `protobuf:"varint,1,opt,name=team_id" json:"team_id,omitempty"`
	TeamName             *string  `protobuf:"bytes,2,opt,name=team_name" json:"team_name,omitempty"`
	TeamAbbrev           *string  `protobuf:"bytes,3,opt,name=team_abbrev" json:"team_abbrev,omitempty"`
	Players              []uint32 `protobuf:"varint,4,rep,packed,name=players" json:"players,omitempty"`
	Seed                 *uint32  `protobuf:"varint,5,opt,name=seed" json:"seed,omitempty"`
	TeamLogo             *uint64  `protobuf:"varint,6,opt,name=team_logo" json:"team_logo,omitempty"`
	CountryCode          *string  `protobuf:"bytes,7,opt,name=country_code" json:"country_code,omitempty"`
	NodeOrState          *uint32  `protobuf:"varint,8,opt,name=node_or_state" json:"node_or_state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTATournament_Team) Reset()         { *m = CMsgDOTATournament_Team{} }
func (m *CMsgDOTATournament_Team) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Team) ProtoMessage()    {}
func (*CMsgDOTATournament_Team) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{62, 0}
}

func (m *CMsgDOTATournament_Team) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournament_Team.Unmarshal(m, b)
}
func (m *CMsgDOTATournament_Team) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournament_Team.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournament_Team) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournament_Team.Merge(m, src)
}
func (m *CMsgDOTATournament_Team) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournament_Team.Size(m)
}
func (m *CMsgDOTATournament_Team) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournament_Team.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournament_Team proto.InternalMessageInfo

func (m *CMsgDOTATournament_Team) GetTeamId() uint32 {
	if m != nil && m.TeamId != nil {
		return *m.TeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetTeamName() string {
	if m != nil && m.TeamName != nil {
		return *m.TeamName
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetTeamAbbrev() string {
	if m != nil && m.TeamAbbrev != nil {
		return *m.TeamAbbrev
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetPlayers() []uint32 {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *CMsgDOTATournament_Team) GetSeed() uint32 {
	if m != nil && m.Seed != nil {
		return *m.Seed
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetTeamLogo() uint64 {
	if m != nil && m.TeamLogo != nil {
		return *m.TeamLogo
	}
	return 0
}

func (m *CMsgDOTATournament_Team) GetCountryCode() string {
	if m != nil && m.CountryCode != nil {
		return *m.CountryCode
	}
	return ""
}

func (m *CMsgDOTATournament_Team) GetNodeOrState() uint32 {
	if m != nil && m.NodeOrState != nil {
		return *m.NodeOrState
	}
	return 0
}

type CMsgDOTATournament_Game struct {
	GameId               *uint32               `protobuf:"varint,1,opt,name=game_id" json:"game_id,omitempty"`
	GoodTeamId           *uint32               `protobuf:"varint,2,opt,name=good_team_id" json:"good_team_id,omitempty"`
	BadTeamId            *uint32               `protobuf:"varint,3,opt,name=bad_team_id" json:"bad_team_id,omitempty"`
	GoodTeamSeed         *uint32               `protobuf:"varint,12,opt,name=good_team_seed" json:"good_team_seed,omitempty"`
	BadTeamSeed          *uint32               `protobuf:"varint,13,opt,name=bad_team_seed" json:"bad_team_seed,omitempty"`
	LobbyId              *uint64               `protobuf:"fixed64,4,opt,name=lobby_id" json:"lobby_id,omitempty"`
	MatchId              *uint64               `protobuf:"varint,5,opt,name=match_id" json:"match_id,omitempty"`
	GameName             *string               `protobuf:"bytes,6,opt,name=game_name" json:"game_name,omitempty"`
	LiveStream           *bool                 `protobuf:"varint,7,opt,name=live_stream" json:"live_stream,omitempty"`
	Message              *string               `protobuf:"bytes,9,opt,name=message" json:"message,omitempty"`
	ResultsFinal         *bool                 `protobuf:"varint,10,opt,name=results_final" json:"results_final,omitempty"`
	State                *ETournamentGameState `protobuf:"varint,14,opt,name=state,enum=ETournamentGameState,def=0" json:"state,omitempty"`
	NodeId               *uint32               `protobuf:"varint,15,opt,name=node_id" json:"node_id,omitempty"`
	StartTime            *uint32               `protobuf:"varint,16,opt,name=start_time" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgDOTATournament_Game) Reset()         { *m = CMsgDOTATournament_Game{} }
func (m *CMsgDOTATournament_Game) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Game) ProtoMessage()    {}
func (*CMsgDOTATournament_Game) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{62, 1}
}

func (m *CMsgDOTATournament_Game) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournament_Game.Unmarshal(m, b)
}
func (m *CMsgDOTATournament_Game) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournament_Game.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournament_Game) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournament_Game.Merge(m, src)
}
func (m *CMsgDOTATournament_Game) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournament_Game.Size(m)
}
func (m *CMsgDOTATournament_Game) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournament_Game.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournament_Game proto.InternalMessageInfo

const Default_CMsgDOTATournament_Game_State ETournamentGameState = ETournamentGameState_k_ETournamentGameState_Unknown

func (m *CMsgDOTATournament_Game) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGoodTeamId() uint32 {
	if m != nil && m.GoodTeamId != nil {
		return *m.GoodTeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetBadTeamId() uint32 {
	if m != nil && m.BadTeamId != nil {
		return *m.BadTeamId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGoodTeamSeed() uint32 {
	if m != nil && m.GoodTeamSeed != nil {
		return *m.GoodTeamSeed
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetBadTeamSeed() uint32 {
	if m != nil && m.BadTeamSeed != nil {
		return *m.BadTeamSeed
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetLobbyId() uint64 {
	if m != nil && m.LobbyId != nil {
		return *m.LobbyId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetMatchId() uint64 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetGameName() string {
	if m != nil && m.GameName != nil {
		return *m.GameName
	}
	return ""
}

func (m *CMsgDOTATournament_Game) GetLiveStream() bool {
	if m != nil && m.LiveStream != nil {
		return *m.LiveStream
	}
	return false
}

func (m *CMsgDOTATournament_Game) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CMsgDOTATournament_Game) GetResultsFinal() bool {
	if m != nil && m.ResultsFinal != nil {
		return *m.ResultsFinal
	}
	return false
}

func (m *CMsgDOTATournament_Game) GetState() ETournamentGameState {
	if m != nil && m.State != nil {
		return *m.State
	}
	return Default_CMsgDOTATournament_Game_State
}

func (m *CMsgDOTATournament_Game) GetNodeId() uint32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *CMsgDOTATournament_Game) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

type CMsgDOTATournament_Node struct {
	NodeId               *uint32               `protobuf:"varint,1,opt,name=node_id" json:"node_id,omitempty"`
	TeamSeedA            *uint32               `protobuf:"varint,2,opt,name=team_seed_a" json:"team_seed_a,omitempty"`
	TeamSeedB            *uint32               `protobuf:"varint,3,opt,name=team_seed_b" json:"team_seed_b,omitempty"`
	WinnerNode           *uint32               `protobuf:"varint,4,opt,name=winner_node" json:"winner_node,omitempty"`
	LoserNode            *uint32               `protobuf:"varint,5,opt,name=loser_node" json:"loser_node,omitempty"`
	SeriesType           *uint32               `protobuf:"varint,7,opt,name=series_type" json:"series_type,omitempty"`
	NodeState            *ETournamentNodeState `protobuf:"varint,8,opt,name=node_state,enum=ETournamentNodeState,def=0" json:"node_state,omitempty"`
	SeriesId             *uint32               `protobuf:"varint,9,opt,name=series_id" json:"series_id,omitempty"`
	StartTime            *uint32               `protobuf:"varint,16,opt,name=start_time" json:"start_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CMsgDOTATournament_Node) Reset()         { *m = CMsgDOTATournament_Node{} }
func (m *CMsgDOTATournament_Node) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournament_Node) ProtoMessage()    {}
func (*CMsgDOTATournament_Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{62, 2}
}

func (m *CMsgDOTATournament_Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournament_Node.Unmarshal(m, b)
}
func (m *CMsgDOTATournament_Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournament_Node.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournament_Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournament_Node.Merge(m, src)
}
func (m *CMsgDOTATournament_Node) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournament_Node.Size(m)
}
func (m *CMsgDOTATournament_Node) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournament_Node.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournament_Node proto.InternalMessageInfo

const Default_CMsgDOTATournament_Node_NodeState ETournamentNodeState = ETournamentNodeState_k_ETournamentNodeState_Unknown

func (m *CMsgDOTATournament_Node) GetNodeId() uint32 {
	if m != nil && m.NodeId != nil {
		return *m.NodeId
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetTeamSeedA() uint32 {
	if m != nil && m.TeamSeedA != nil {
		return *m.TeamSeedA
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetTeamSeedB() uint32 {
	if m != nil && m.TeamSeedB != nil {
		return *m.TeamSeedB
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetWinnerNode() uint32 {
	if m != nil && m.WinnerNode != nil {
		return *m.WinnerNode
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetLoserNode() uint32 {
	if m != nil && m.LoserNode != nil {
		return *m.LoserNode
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetSeriesType() uint32 {
	if m != nil && m.SeriesType != nil {
		return *m.SeriesType
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetNodeState() ETournamentNodeState {
	if m != nil && m.NodeState != nil {
		return *m.NodeState
	}
	return Default_CMsgDOTATournament_Node_NodeState
}

func (m *CMsgDOTATournament_Node) GetSeriesId() uint32 {
	if m != nil && m.SeriesId != nil {
		return *m.SeriesId
	}
	return 0
}

func (m *CMsgDOTATournament_Node) GetStartTime() uint32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

type CMsgDOTATournamentRequest struct {
	TournamentId         *uint32  `protobuf:"varint,1,opt,name=tournament_id" json:"tournament_id,omitempty"`
	ClientTournamentGid  *uint64  `protobuf:"varint,2,opt,name=client_tournament_gid" json:"client_tournament_gid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTATournamentRequest) Reset()         { *m = CMsgDOTATournamentRequest{} }
func (m *CMsgDOTATournamentRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournamentRequest) ProtoMessage()    {}
func (*CMsgDOTATournamentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{63}
}

func (m *CMsgDOTATournamentRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournamentRequest.Unmarshal(m, b)
}
func (m *CMsgDOTATournamentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournamentRequest.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournamentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournamentRequest.Merge(m, src)
}
func (m *CMsgDOTATournamentRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournamentRequest.Size(m)
}
func (m *CMsgDOTATournamentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournamentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournamentRequest proto.InternalMessageInfo

func (m *CMsgDOTATournamentRequest) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTATournamentRequest) GetClientTournamentGid() uint64 {
	if m != nil && m.ClientTournamentGid != nil {
		return *m.ClientTournamentGid
	}
	return 0
}

type CMsgDOTATournamentResponse struct {
	Result               *uint32             `protobuf:"varint,1,opt,name=result,def=2" json:"result,omitempty"`
	Tournament           *CMsgDOTATournament `protobuf:"bytes,2,opt,name=tournament" json:"tournament,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CMsgDOTATournamentResponse) Reset()         { *m = CMsgDOTATournamentResponse{} }
func (m *CMsgDOTATournamentResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTATournamentResponse) ProtoMessage()    {}
func (*CMsgDOTATournamentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{64}
}

func (m *CMsgDOTATournamentResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTATournamentResponse.Unmarshal(m, b)
}
func (m *CMsgDOTATournamentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTATournamentResponse.Marshal(b, m, deterministic)
}
func (m *CMsgDOTATournamentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTATournamentResponse.Merge(m, src)
}
func (m *CMsgDOTATournamentResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTATournamentResponse.Size(m)
}
func (m *CMsgDOTATournamentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTATournamentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTATournamentResponse proto.InternalMessageInfo

const Default_CMsgDOTATournamentResponse_Result uint32 = 2

func (m *CMsgDOTATournamentResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgDOTATournamentResponse_Result
}

func (m *CMsgDOTATournamentResponse) GetTournament() *CMsgDOTATournament {
	if m != nil {
		return m.Tournament
	}
	return nil
}

type CMsgDOTAClearTournamentGame struct {
	TournamentId         *uint32  `protobuf:"varint,1,opt,name=tournament_id" json:"tournament_id,omitempty"`
	GameId               *uint32  `protobuf:"varint,2,opt,name=game_id" json:"game_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAClearTournamentGame) Reset()         { *m = CMsgDOTAClearTournamentGame{} }
func (m *CMsgDOTAClearTournamentGame) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAClearTournamentGame) ProtoMessage()    {}
func (*CMsgDOTAClearTournamentGame) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{65}
}

func (m *CMsgDOTAClearTournamentGame) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAClearTournamentGame.Unmarshal(m, b)
}
func (m *CMsgDOTAClearTournamentGame) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAClearTournamentGame.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAClearTournamentGame) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAClearTournamentGame.Merge(m, src)
}
func (m *CMsgDOTAClearTournamentGame) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAClearTournamentGame.Size(m)
}
func (m *CMsgDOTAClearTournamentGame) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAClearTournamentGame.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAClearTournamentGame proto.InternalMessageInfo

func (m *CMsgDOTAClearTournamentGame) GetTournamentId() uint32 {
	if m != nil && m.TournamentId != nil {
		return *m.TournamentId
	}
	return 0
}

func (m *CMsgDOTAClearTournamentGame) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

type CMsgDOTAPassportVoteTeamGuess struct {
	LeagueId             *uint32  `protobuf:"varint,1,opt,name=league_id" json:"league_id,omitempty"`
	WinnerId             *uint32  `protobuf:"varint,2,opt,name=winner_id" json:"winner_id,omitempty"`
	RunnerupId           *uint32  `protobuf:"varint,3,opt,name=runnerup_id" json:"runnerup_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAPassportVoteTeamGuess) Reset()         { *m = CMsgDOTAPassportVoteTeamGuess{} }
func (m *CMsgDOTAPassportVoteTeamGuess) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVoteTeamGuess) ProtoMessage()    {}
func (*CMsgDOTAPassportVoteTeamGuess) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{66}
}

func (m *CMsgDOTAPassportVoteTeamGuess) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess.Unmarshal(m, b)
}
func (m *CMsgDOTAPassportVoteTeamGuess) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAPassportVoteTeamGuess) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess.Merge(m, src)
}
func (m *CMsgDOTAPassportVoteTeamGuess) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess.Size(m)
}
func (m *CMsgDOTAPassportVoteTeamGuess) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAPassportVoteTeamGuess proto.InternalMessageInfo

func (m *CMsgDOTAPassportVoteTeamGuess) GetLeagueId() uint32 {
	if m != nil && m.LeagueId != nil {
		return *m.LeagueId
	}
	return 0
}

func (m *CMsgDOTAPassportVoteTeamGuess) GetWinnerId() uint32 {
	if m != nil && m.WinnerId != nil {
		return *m.WinnerId
	}
	return 0
}

func (m *CMsgDOTAPassportVoteTeamGuess) GetRunnerupId() uint32 {
	if m != nil && m.RunnerupId != nil {
		return *m.RunnerupId
	}
	return 0
}

type CMsgDOTAPassportVoteGenericSelection struct {
	SelectionIndex       *DOTA_2013PassportSelectionIndices `protobuf:"varint,1,opt,name=selection_index,enum=DOTA_2013PassportSelectionIndices,def=0" json:"selection_index,omitempty"`
	Selection            *uint32                            `protobuf:"varint,2,opt,name=selection" json:"selection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CMsgDOTAPassportVoteGenericSelection) Reset()         { *m = CMsgDOTAPassportVoteGenericSelection{} }
func (m *CMsgDOTAPassportVoteGenericSelection) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVoteGenericSelection) ProtoMessage()    {}
func (*CMsgDOTAPassportVoteGenericSelection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{67}
}

func (m *CMsgDOTAPassportVoteGenericSelection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection.Unmarshal(m, b)
}
func (m *CMsgDOTAPassportVoteGenericSelection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAPassportVoteGenericSelection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection.Merge(m, src)
}
func (m *CMsgDOTAPassportVoteGenericSelection) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection.Size(m)
}
func (m *CMsgDOTAPassportVoteGenericSelection) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAPassportVoteGenericSelection proto.InternalMessageInfo

const Default_CMsgDOTAPassportVoteGenericSelection_SelectionIndex DOTA_2013PassportSelectionIndices = DOTA_2013PassportSelectionIndices_PP13_SEL_ALLSTAR_PLAYER_0

func (m *CMsgDOTAPassportVoteGenericSelection) GetSelectionIndex() DOTA_2013PassportSelectionIndices {
	if m != nil && m.SelectionIndex != nil {
		return *m.SelectionIndex
	}
	return Default_CMsgDOTAPassportVoteGenericSelection_SelectionIndex
}

func (m *CMsgDOTAPassportVoteGenericSelection) GetSelection() uint32 {
	if m != nil && m.Selection != nil {
		return *m.Selection
	}
	return 0
}

type CMsgDOTAPassportStampedPlayer struct {
	SteamId              *uint64  `protobuf:"varint,1,opt,name=steam_id" json:"steam_id,omitempty"`
	StampLevel           *uint32  `protobuf:"varint,2,opt,name=stamp_level" json:"stamp_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAPassportStampedPlayer) Reset()         { *m = CMsgDOTAPassportStampedPlayer{} }
func (m *CMsgDOTAPassportStampedPlayer) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportStampedPlayer) ProtoMessage()    {}
func (*CMsgDOTAPassportStampedPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{68}
}

func (m *CMsgDOTAPassportStampedPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAPassportStampedPlayer.Unmarshal(m, b)
}
func (m *CMsgDOTAPassportStampedPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAPassportStampedPlayer.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAPassportStampedPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAPassportStampedPlayer.Merge(m, src)
}
func (m *CMsgDOTAPassportStampedPlayer) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAPassportStampedPlayer.Size(m)
}
func (m *CMsgDOTAPassportStampedPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAPassportStampedPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAPassportStampedPlayer proto.InternalMessageInfo

func (m *CMsgDOTAPassportStampedPlayer) GetSteamId() uint64 {
	if m != nil && m.SteamId != nil {
		return *m.SteamId
	}
	return 0
}

func (m *CMsgDOTAPassportStampedPlayer) GetStampLevel() uint32 {
	if m != nil && m.StampLevel != nil {
		return *m.StampLevel
	}
	return 0
}

type CMsgDOTAPassportPlayerCardChallenge struct {
	ChallengeId          *uint32  `protobuf:"varint,1,opt,name=challenge_id" json:"challenge_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgDOTAPassportPlayerCardChallenge) Reset()         { *m = CMsgDOTAPassportPlayerCardChallenge{} }
func (m *CMsgDOTAPassportPlayerCardChallenge) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportPlayerCardChallenge) ProtoMessage()    {}
func (*CMsgDOTAPassportPlayerCardChallenge) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{69}
}

func (m *CMsgDOTAPassportPlayerCardChallenge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge.Unmarshal(m, b)
}
func (m *CMsgDOTAPassportPlayerCardChallenge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAPassportPlayerCardChallenge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge.Merge(m, src)
}
func (m *CMsgDOTAPassportPlayerCardChallenge) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge.Size(m)
}
func (m *CMsgDOTAPassportPlayerCardChallenge) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAPassportPlayerCardChallenge proto.InternalMessageInfo

func (m *CMsgDOTAPassportPlayerCardChallenge) GetChallengeId() uint32 {
	if m != nil && m.ChallengeId != nil {
		return *m.ChallengeId
	}
	return 0
}

type CMsgDOTAPassportVote struct {
	TeamVotes            []*CMsgDOTAPassportVoteTeamGuess        `protobuf:"bytes,1,rep,name=team_votes" json:"team_votes,omitempty"`
	GenericSelections    []*CMsgDOTAPassportVoteGenericSelection `protobuf:"bytes,2,rep,name=generic_selections" json:"generic_selections,omitempty"`
	StampedPlayers       []*CMsgDOTAPassportStampedPlayer        `protobuf:"bytes,3,rep,name=stamped_players" json:"stamped_players,omitempty"`
	PlayerCardChallenges []*CMsgDOTAPassportPlayerCardChallenge  `protobuf:"bytes,4,rep,name=player_card_challenges" json:"player_card_challenges,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *CMsgDOTAPassportVote) Reset()         { *m = CMsgDOTAPassportVote{} }
func (m *CMsgDOTAPassportVote) String() string { return proto.CompactTextString(m) }
func (*CMsgDOTAPassportVote) ProtoMessage()    {}
func (*CMsgDOTAPassportVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{70}
}

func (m *CMsgDOTAPassportVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgDOTAPassportVote.Unmarshal(m, b)
}
func (m *CMsgDOTAPassportVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgDOTAPassportVote.Marshal(b, m, deterministic)
}
func (m *CMsgDOTAPassportVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgDOTAPassportVote.Merge(m, src)
}
func (m *CMsgDOTAPassportVote) XXX_Size() int {
	return xxx_messageInfo_CMsgDOTAPassportVote.Size(m)
}
func (m *CMsgDOTAPassportVote) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgDOTAPassportVote.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgDOTAPassportVote proto.InternalMessageInfo

func (m *CMsgDOTAPassportVote) GetTeamVotes() []*CMsgDOTAPassportVoteTeamGuess {
	if m != nil {
		return m.TeamVotes
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetGenericSelections() []*CMsgDOTAPassportVoteGenericSelection {
	if m != nil {
		return m.GenericSelections
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetStampedPlayers() []*CMsgDOTAPassportStampedPlayer {
	if m != nil {
		return m.StampedPlayers
	}
	return nil
}

func (m *CMsgDOTAPassportVote) GetPlayerCardChallenges() []*CMsgDOTAPassportPlayerCardChallenge {
	if m != nil {
		return m.PlayerCardChallenges
	}
	return nil
}

type CMsgPassportDataRequest struct {
	AccountId            *uint32  `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CMsgPassportDataRequest) Reset()         { *m = CMsgPassportDataRequest{} }
func (m *CMsgPassportDataRequest) String() string { return proto.CompactTextString(m) }
func (*CMsgPassportDataRequest) ProtoMessage()    {}
func (*CMsgPassportDataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{71}
}

func (m *CMsgPassportDataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPassportDataRequest.Unmarshal(m, b)
}
func (m *CMsgPassportDataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPassportDataRequest.Marshal(b, m, deterministic)
}
func (m *CMsgPassportDataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPassportDataRequest.Merge(m, src)
}
func (m *CMsgPassportDataRequest) XXX_Size() int {
	return xxx_messageInfo_CMsgPassportDataRequest.Size(m)
}
func (m *CMsgPassportDataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPassportDataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPassportDataRequest proto.InternalMessageInfo

func (m *CMsgPassportDataRequest) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

type CMsgPassportDataResponse struct {
	AccountId                    *uint32               `protobuf:"varint,1,opt,name=account_id" json:"account_id,omitempty"`
	Result                       *uint32               `protobuf:"varint,2,opt,name=result,def=2" json:"result,omitempty"`
	International                *CMsgDOTATournament   `protobuf:"bytes,5,opt,name=international" json:"international,omitempty"`
	EastQualifiersPredictEndTime *uint32               `protobuf:"varint,7,opt,name=east_qualifiers_predict_end_time" json:"east_qualifiers_predict_end_time,omitempty"`
	WestQualifiersPredictEndTime *uint32               `protobuf:"varint,8,opt,name=west_qualifiers_predict_end_time" json:"west_qualifiers_predict_end_time,omitempty"`
	AllstarMatchEndTime          *uint32               `protobuf:"varint,9,opt,name=allstar_match_end_time" json:"allstar_match_end_time,omitempty"`
	LeagueGuesses                *CMsgDOTAPassportVote `protobuf:"bytes,6,opt,name=league_guesses" json:"league_guesses,omitempty"`
	EastQualifiersWinnerTeamId   *uint32               `protobuf:"varint,10,opt,name=east_qualifiers_winner_team_id" json:"east_qualifiers_winner_team_id,omitempty"`
	EastQualifiersRunnerUpTeamId *uint32               `protobuf:"varint,11,opt,name=east_qualifiers_runner_up_team_id" json:"east_qualifiers_runner_up_team_id,omitempty"`
	WestQualifiersWinnerTeamId   *uint32               `protobuf:"varint,12,opt,name=west_qualifiers_winner_team_id" json:"west_qualifiers_winner_team_id,omitempty"`
	WestQualifiersRunnerUpTeamId *uint32               `protobuf:"varint,13,opt,name=west_qualifiers_runner_up_team_id" json:"west_qualifiers_runner_up_team_id,omitempty"`
	PassportsBought              *uint32               `protobuf:"varint,14,opt,name=passports_bought" json:"passports_bought,omitempty"`
	OriginalPurchaserId          *uint32               `protobuf:"varint,15,opt,name=original_purchaser_id" json:"original_purchaser_id,omitempty"`
	FantasyTeamCount             *uint32               `protobuf:"varint,16,opt,name=fantasy_team_count" json:"fantasy_team_count,omitempty"`
	FantasyTeamexpiration        *uint32               `protobuf:"varint,17,opt,name=fantasy_teamexpiration" json:"fantasy_teamexpiration,omitempty"`
	FantasyTeamsWillLockAt       *uint32               `protobuf:"varint,18,opt,name=fantasy_teams_will_lock_at" json:"fantasy_teams_will_lock_at,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}              `json:"-"`
	XXX_unrecognized             []byte                `json:"-"`
	XXX_sizecache                int32                 `json:"-"`
}

func (m *CMsgPassportDataResponse) Reset()         { *m = CMsgPassportDataResponse{} }
func (m *CMsgPassportDataResponse) String() string { return proto.CompactTextString(m) }
func (*CMsgPassportDataResponse) ProtoMessage()    {}
func (*CMsgPassportDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad607e4a12cf9d50, []int{72}
}

func (m *CMsgPassportDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CMsgPassportDataResponse.Unmarshal(m, b)
}
func (m *CMsgPassportDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CMsgPassportDataResponse.Marshal(b, m, deterministic)
}
func (m *CMsgPassportDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CMsgPassportDataResponse.Merge(m, src)
}
func (m *CMsgPassportDataResponse) XXX_Size() int {
	return xxx_messageInfo_CMsgPassportDataResponse.Size(m)
}
func (m *CMsgPassportDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CMsgPassportDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CMsgPassportDataResponse proto.InternalMessageInfo

const Default_CMsgPassportDataResponse_Result uint32 = 2

func (m *CMsgPassportDataResponse) GetAccountId() uint32 {
	if m != nil && m.AccountId != nil {
		return *m.AccountId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetResult() uint32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return Default_CMsgPassportDataResponse_Result
}

func (m *CMsgPassportDataResponse) GetInternational() *CMsgDOTATournament {
	if m != nil {
		return m.International
	}
	return nil
}

func (m *CMsgPassportDataResponse) GetEastQualifiersPredictEndTime() uint32 {
	if m != nil && m.EastQualifiersPredictEndTime != nil {
		return *m.EastQualifiersPredictEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersPredictEndTime() uint32 {
	if m != nil && m.WestQualifiersPredictEndTime != nil {
		return *m.WestQualifiersPredictEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetAllstarMatchEndTime() uint32 {
	if m != nil && m.AllstarMatchEndTime != nil {
		return *m.AllstarMatchEndTime
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetLeagueGuesses() *CMsgDOTAPassportVote {
	if m != nil {
		return m.LeagueGuesses
	}
	return nil
}

func (m *CMsgPassportDataResponse) GetEastQualifiersWinnerTeamId() uint32 {
	if m != nil && m.EastQualifiersWinnerTeamId != nil {
		return *m.EastQualifiersWinnerTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetEastQualifiersRunnerUpTeamId() uint32 {
	if m != nil && m.EastQualifiersRunnerUpTeamId != nil {
		return *m.EastQualifiersRunnerUpTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersWinnerTeamId() uint32 {
	if m != nil && m.WestQualifiersWinnerTeamId != nil {
		return *m.WestQualifiersWinnerTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetWestQualifiersRunnerUpTeamId() uint32 {
	if m != nil && m.WestQualifiersRunnerUpTeamId != nil {
		return *m.WestQualifiersRunnerUpTeamId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetPassportsBought() uint32 {
	if m != nil && m.PassportsBought != nil {
		return *m.PassportsBought
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetOriginalPurchaserId() uint32 {
	if m != nil && m.OriginalPurchaserId != nil {
		return *m.OriginalPurchaserId
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamCount() uint32 {
	if m != nil && m.FantasyTeamCount != nil {
		return *m.FantasyTeamCount
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamexpiration() uint32 {
	if m != nil && m.FantasyTeamexpiration != nil {
		return *m.FantasyTeamexpiration
	}
	return 0
}

func (m *CMsgPassportDataResponse) GetFantasyTeamsWillLockAt() uint32 {
	if m != nil && m.FantasyTeamsWillLockAt != nil {
		return *m.FantasyTeamsWillLockAt
	}
	return 0
}

func init() {
	proto.RegisterEnum("ETournamentGameState", ETournamentGameState_name, ETournamentGameState_value)
	proto.RegisterEnum("ETournamentTeamState", ETournamentTeamState_name, ETournamentTeamState_value)
	proto.RegisterEnum("ETournamentState", ETournamentState_name, ETournamentState_value)
	proto.RegisterEnum("ETournamentNodeState", ETournamentNodeState_name, ETournamentNodeState_value)
	proto.RegisterEnum("DOTA_2013PassportSelectionIndices", DOTA_2013PassportSelectionIndices_name, DOTA_2013PassportSelectionIndices_value)
	proto.RegisterEnum("CMsgDOTACreateFantasyLeagueResponse_EResult", CMsgDOTACreateFantasyLeagueResponse_EResult_name, CMsgDOTACreateFantasyLeagueResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueEditInfoResponse_EResult", CMsgDOTAFantasyLeagueEditInfoResponse_EResult_name, CMsgDOTAFantasyLeagueEditInfoResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueFindResponse_EResult", CMsgDOTAFantasyLeagueFindResponse_EResult_name, CMsgDOTAFantasyLeagueFindResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueInfoResponse_EResult", CMsgDOTAFantasyLeagueInfoResponse_EResult_name, CMsgDOTAFantasyLeagueInfoResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueMatchupsResponse_EResult", CMsgDOTAFantasyLeagueMatchupsResponse_EResult_name, CMsgDOTAFantasyLeagueMatchupsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAEditFantasyTeamResponse_EResult", CMsgDOTAEditFantasyTeamResponse_EResult_name, CMsgDOTAEditFantasyTeamResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamScoreResponse_EResult", CMsgDOTAFantasyTeamScoreResponse_EResult_name, CMsgDOTAFantasyTeamScoreResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamStandingsResponse_EResult", CMsgDOTAFantasyTeamStandingsResponse_EResult_name, CMsgDOTAFantasyTeamStandingsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerScoreResponse_EResult", CMsgDOTAFantasyPlayerScoreResponse_EResult_name, CMsgDOTAFantasyPlayerScoreResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerStandingsResponse_EResult", CMsgDOTAFantasyPlayerStandingsResponse_EResult_name, CMsgDOTAFantasyPlayerStandingsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueCreateResponse_EResult", CMsgDOTAFantasyLeagueCreateResponse_EResult_name, CMsgDOTAFantasyLeagueCreateResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamCreateResponse_EResult", CMsgDOTAFantasyTeamCreateResponse_EResult_name, CMsgDOTAFantasyTeamCreateResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueEditInvitesResponse_EResult", CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_name, CMsgDOTAFantasyLeagueEditInvitesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult", CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_name, CMsgDOTAFantasyLeagueDraftPlayerResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterSwapResponse_EResult", CMsgDOTAFantasyTeamRosterSwapResponse_EResult_name, CMsgDOTAFantasyTeamRosterSwapResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterAddDropResponse_EResult", CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_name, CMsgDOTAFantasyTeamRosterAddDropResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamTradesResponse_EResult", CMsgDOTAFantasyTeamTradesResponse_EResult_name, CMsgDOTAFantasyTeamTradesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamTradeCancelResponse_EResult", CMsgDOTAFantasyTeamTradeCancelResponse_EResult_name, CMsgDOTAFantasyTeamTradeCancelResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyTeamRosterResponse_EResult", CMsgDOTAFantasyTeamRosterResponse_EResult_name, CMsgDOTAFantasyTeamRosterResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult", CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_name, CMsgDOTAFantasyPlayerHisoricalStatsResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyMessagesResponse_EResult", CMsgDOTAFantasyMessagesResponse_EResult_name, CMsgDOTAFantasyMessagesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyRemoveOwnerResponse_EResult", CMsgDOTAFantasyRemoveOwnerResponse_EResult_name, CMsgDOTAFantasyRemoveOwnerResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyScheduledMatchesResponse_EResult", CMsgDOTAFantasyScheduledMatchesResponse_EResult_name, CMsgDOTAFantasyScheduledMatchesResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyLeaveLeagueResponse_EResult", CMsgDOTAFantasyLeaveLeagueResponse_EResult_name, CMsgDOTAFantasyLeaveLeagueResponse_EResult_value)
	proto.RegisterEnum("CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult", CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_name, CMsgDOTAFantasyPlayerScoreDetailsResponse_EResult_value)
	proto.RegisterType((*CMsgGCPlayerInfo)(nil), "CMsgGCPlayerInfo")
	proto.RegisterType((*CMsgGCPlayerInfo_PlayerInfo)(nil), "CMsgGCPlayerInfo.PlayerInfo")
	proto.RegisterType((*CMsgGCPlayerInfo_RegionLeaderboard)(nil), "CMsgGCPlayerInfo.RegionLeaderboard")
	proto.RegisterType((*CMsgDOTACreateFantasyLeagueRequest)(nil), "CMsgDOTACreateFantasyLeagueRequest")
	proto.RegisterType((*CMsgDOTACreateFantasyLeagueResponse)(nil), "CMsgDOTACreateFantasyLeagueResponse")
	proto.RegisterType((*CMsgFantasyLeagueScoring)(nil), "CMsgFantasyLeagueScoring")
	proto.RegisterType((*CMsgDOTAFantasyLeagueInfo)(nil), "CMsgDOTAFantasyLeagueInfo")
	proto.RegisterType((*CMsgDOTAFantasyLeagueInfo_OwnerInfo)(nil), "CMsgDOTAFantasyLeagueInfo.OwnerInfo")
	proto.RegisterType((*CMsgDOTAFantasyLeagueEditInfoRequest)(nil), "CMsgDOTAFantasyLeagueEditInfoRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueEditInfoResponse)(nil), "CMsgDOTAFantasyLeagueEditInfoResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueFindRequest)(nil), "CMsgDOTAFantasyLeagueFindRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueFindResponse)(nil), "CMsgDOTAFantasyLeagueFindResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueInfoRequest)(nil), "CMsgDOTAFantasyLeagueInfoRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueInfoResponse)(nil), "CMsgDOTAFantasyLeagueInfoResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueMatchupsRequest)(nil), "CMsgDOTAFantasyLeagueMatchupsRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueMatchupsResponse)(nil), "CMsgDOTAFantasyLeagueMatchupsResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueMatchupsResponse_Matchup)(nil), "CMsgDOTAFantasyLeagueMatchupsResponse.Matchup")
	proto.RegisterType((*CMsgDOTAFantasyLeagueMatchupsResponse_WeeklyMatchups)(nil), "CMsgDOTAFantasyLeagueMatchupsResponse.WeeklyMatchups")
	proto.RegisterType((*CMsgDOTAEditFantasyTeamRequest)(nil), "CMsgDOTAEditFantasyTeamRequest")
	proto.RegisterType((*CMsgDOTAEditFantasyTeamResponse)(nil), "CMsgDOTAEditFantasyTeamResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID)(nil), "CMsgDOTAFantasyTeamInfoRequestByFantasyLeagueID")
	proto.RegisterType((*CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID)(nil), "CMsgDOTAFantasyTeamInfoRequestByOwnerAccountID")
	proto.RegisterType((*CMsgDOTAFantasyTeamInfoResponse)(nil), "CMsgDOTAFantasyTeamInfoResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamInfo)(nil), "CMsgDOTAFantasyTeamInfo")
	proto.RegisterType((*CMsgDOTAFantasyTeamScoreRequest)(nil), "CMsgDOTAFantasyTeamScoreRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamScoreResponse)(nil), "CMsgDOTAFantasyTeamScoreResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamScoreResponse_CMsgPlayerScore)(nil), "CMsgDOTAFantasyTeamScoreResponse.CMsgPlayerScore")
	proto.RegisterType((*CMsgDOTAFantasyTeamStandingsRequest)(nil), "CMsgDOTAFantasyTeamStandingsRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamStandingsResponse)(nil), "CMsgDOTAFantasyTeamStandingsResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamStandingsResponse_CMsgTeamScore)(nil), "CMsgDOTAFantasyTeamStandingsResponse.CMsgTeamScore")
	proto.RegisterType((*CMsgDOTAFantasyPlayerScoreRequest)(nil), "CMsgDOTAFantasyPlayerScoreRequest")
	proto.RegisterType((*CMsgDOTAFantasyPlayerScoreResponse)(nil), "CMsgDOTAFantasyPlayerScoreResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerStandingsRequest)(nil), "CMsgDOTAFantasyPlayerStandingsRequest")
	proto.RegisterType((*CMsgDOTAFantasyPlayerStandingsResponse)(nil), "CMsgDOTAFantasyPlayerStandingsResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerStandingsResponse_CMsgPlayerScore)(nil), "CMsgDOTAFantasyPlayerStandingsResponse.CMsgPlayerScore")
	proto.RegisterType((*CMsgDOTAFantasyPlayerInfoRequest)(nil), "CMsgDOTAFantasyPlayerInfoRequest")
	proto.RegisterType((*CMsgDOTAFantasyPlayerInfoResponse)(nil), "CMsgDOTAFantasyPlayerInfoResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueCreateRequest)(nil), "CMsgDOTAFantasyLeagueCreateRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueCreateResponse)(nil), "CMsgDOTAFantasyLeagueCreateResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamCreateRequest)(nil), "CMsgDOTAFantasyTeamCreateRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamCreateResponse)(nil), "CMsgDOTAFantasyTeamCreateResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueEditInvitesRequest)(nil), "CMsgDOTAFantasyLeagueEditInvitesRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueEditInvitesRequest_InviteChange)(nil), "CMsgDOTAFantasyLeagueEditInvitesRequest.InviteChange")
	proto.RegisterType((*CMsgDOTAFantasyLeagueEditInvitesResponse)(nil), "CMsgDOTAFantasyLeagueEditInvitesResponse")
	proto.RegisterType((*CMsgDOTAFantasyLeagueDraftStatusRequest)(nil), "CMsgDOTAFantasyLeagueDraftStatusRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueDraftStatus)(nil), "CMsgDOTAFantasyLeagueDraftStatus")
	proto.RegisterType((*CMsgDOTAFantasyLeagueDraftPlayerRequest)(nil), "CMsgDOTAFantasyLeagueDraftPlayerRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeagueDraftPlayerResponse)(nil), "CMsgDOTAFantasyLeagueDraftPlayerResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterSwapRequest)(nil), "CMsgDOTAFantasyTeamRosterSwapRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterSwapResponse)(nil), "CMsgDOTAFantasyTeamRosterSwapResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterAddDropRequest)(nil), "CMsgDOTAFantasyTeamRosterAddDropRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterAddDropResponse)(nil), "CMsgDOTAFantasyTeamRosterAddDropResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamTradesRequest)(nil), "CMsgDOTAFantasyTeamTradesRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamTradesResponse)(nil), "CMsgDOTAFantasyTeamTradesResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamTradesResponse_Trade)(nil), "CMsgDOTAFantasyTeamTradesResponse.Trade")
	proto.RegisterType((*CMsgDOTAFantasyTeamTradeCancelRequest)(nil), "CMsgDOTAFantasyTeamTradeCancelRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamTradeCancelResponse)(nil), "CMsgDOTAFantasyTeamTradeCancelResponse")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterRequest)(nil), "CMsgDOTAFantasyTeamRosterRequest")
	proto.RegisterType((*CMsgDOTAFantasyTeamRosterResponse)(nil), "CMsgDOTAFantasyTeamRosterResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerHisoricalStatsRequest)(nil), "CMsgDOTAFantasyPlayerHisoricalStatsRequest")
	proto.RegisterType((*CMsgDOTAFantasyPlayerHisoricalStatsResponse)(nil), "CMsgDOTAFantasyPlayerHisoricalStatsResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerScoreAccumulator)(nil), "CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerScoreAccumulator")
	proto.RegisterType((*CMsgDOTAFantasyPlayerHisoricalStatsResponse_PlayerStats)(nil), "CMsgDOTAFantasyPlayerHisoricalStatsResponse.PlayerStats")
	proto.RegisterType((*CMsgDOTAFantasyMessageAdd)(nil), "CMsgDOTAFantasyMessageAdd")
	proto.RegisterType((*CMsgDOTAFantasyMessagesRequest)(nil), "CMsgDOTAFantasyMessagesRequest")
	proto.RegisterType((*CMsgDOTAFantasyMessagesResponse)(nil), "CMsgDOTAFantasyMessagesResponse")
	proto.RegisterType((*CMsgDOTAFantasyMessagesResponse_Message)(nil), "CMsgDOTAFantasyMessagesResponse.Message")
	proto.RegisterType((*CMsgDOTAFantasyRemoveOwner)(nil), "CMsgDOTAFantasyRemoveOwner")
	proto.RegisterType((*CMsgDOTAFantasyRemoveOwnerResponse)(nil), "CMsgDOTAFantasyRemoveOwnerResponse")
	proto.RegisterType((*CMsgDOTAFantasyScheduledMatchesRequest)(nil), "CMsgDOTAFantasyScheduledMatchesRequest")
	proto.RegisterType((*CMsgDOTAFantasyScheduledMatchesResponse)(nil), "CMsgDOTAFantasyScheduledMatchesResponse")
	proto.RegisterType((*CMsgDOTAFantasyScheduledMatchesResponse_ScheduledMatchDays)(nil), "CMsgDOTAFantasyScheduledMatchesResponse.ScheduledMatchDays")
	proto.RegisterType((*CMsgDOTAFantasyLeaveLeagueRequest)(nil), "CMsgDOTAFantasyLeaveLeagueRequest")
	proto.RegisterType((*CMsgDOTAFantasyLeaveLeagueResponse)(nil), "CMsgDOTAFantasyLeaveLeagueResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerScoreDetailsRequest)(nil), "CMsgDOTAFantasyPlayerScoreDetailsRequest")
	proto.RegisterType((*CMsgDOTAFantasyPlayerScoreDetailsResponse)(nil), "CMsgDOTAFantasyPlayerScoreDetailsResponse")
	proto.RegisterType((*CMsgDOTAFantasyPlayerScoreDetailsResponse_PlayerMatchData)(nil), "CMsgDOTAFantasyPlayerScoreDetailsResponse.PlayerMatchData")
	proto.RegisterType((*CMsgDOTATournament)(nil), "CMsgDOTATournament")
	proto.RegisterType((*CMsgDOTATournament_Team)(nil), "CMsgDOTATournament.Team")
	proto.RegisterType((*CMsgDOTATournament_Game)(nil), "CMsgDOTATournament.Game")
	proto.RegisterType((*CMsgDOTATournament_Node)(nil), "CMsgDOTATournament.Node")
	proto.RegisterType((*CMsgDOTATournamentRequest)(nil), "CMsgDOTATournamentRequest")
	proto.RegisterType((*CMsgDOTATournamentResponse)(nil), "CMsgDOTATournamentResponse")
	proto.RegisterType((*CMsgDOTAClearTournamentGame)(nil), "CMsgDOTAClearTournamentGame")
	proto.RegisterType((*CMsgDOTAPassportVoteTeamGuess)(nil), "CMsgDOTAPassportVoteTeamGuess")
	proto.RegisterType((*CMsgDOTAPassportVoteGenericSelection)(nil), "CMsgDOTAPassportVoteGenericSelection")
	proto.RegisterType((*CMsgDOTAPassportStampedPlayer)(nil), "CMsgDOTAPassportStampedPlayer")
	proto.RegisterType((*CMsgDOTAPassportPlayerCardChallenge)(nil), "CMsgDOTAPassportPlayerCardChallenge")
	proto.RegisterType((*CMsgDOTAPassportVote)(nil), "CMsgDOTAPassportVote")
	proto.RegisterType((*CMsgPassportDataRequest)(nil), "CMsgPassportDataRequest")
	proto.RegisterType((*CMsgPassportDataResponse)(nil), "CMsgPassportDataResponse")
}

func init() {
	proto.RegisterFile("dota_gcmessages_client_fantasy.proto", fileDescriptor_ad607e4a12cf9d50)
}

var fileDescriptor_ad607e4a12cf9d50 = []byte{
	// 5461 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x7b, 0x4b, 0x70, 0x1b, 0xc9,
	0x79, 0xff, 0xe2, 0xc5, 0x47, 0xf3, 0xd5, 0x1c, 0x91, 0x12, 0x08, 0x3d, 0x56, 0x9a, 0x95, 0xb4,
	0x94, 0x6c, 0xc1, 0x04, 0x48, 0x8a, 0x94, 0x6c, 0xff, 0xfd, 0x87, 0x00, 0x90, 0x8b, 0x5d, 0x10,
	0xa0, 0x09, 0x50, 0xb2, 0x36, 0x8f, 0xa9, 0x11, 0xa6, 0x05, 0x4c, 0x09, 0x98, 0x81, 0x67, 0x06,
	0xe2, 0x32, 0x95, 0x4a, 0x79, 0x5d, 0x4e, 0x2a, 0x4e, 0xf9, 0x90, 0x1c, 0xed, 0x38, 0x71, 0xe2,
	0x57, 0x92, 0x4a, 0x55, 0xca, 0x55, 0xc9, 0x21, 0xd7, 0x54, 0xa5, 0xec, 0x53, 0x6c, 0x9f, 0x52,
	0xc9, 0x21, 0x27, 0x1f, 0x92, 0x4b, 0x52, 0x49, 0xe5, 0x9e, 0x4a, 0xf5, 0x63, 0xde, 0xd3, 0xc3,
	0xa1, 0x96, 0xf1, 0x0d, 0xe8, 0xdf, 0xd7, 0x3d, 0xdd, 0xdf, 0xab, 0xbf, 0xfe, 0xfa, 0x6b, 0x70,
	0x5b, 0xd1, 0x2d, 0x59, 0xea, 0xf7, 0x46, 0xc8, 0x34, 0xe5, 0x3e, 0x32, 0xa5, 0xde, 0x50, 0x45,
	0x9a, 0x25, 0xbd, 0x94, 0x35, 0x4b, 0x36, 0x4f, 0x8b, 0x63, 0x43, 0xb7, 0xf4, 0xc2, 0xb5, 0x10,
	0x95, 0x3e, 0x1a, 0xe9, 0x1a, 0x45, 0xc5, 0xaf, 0x65, 0x00, 0xac, 0x1e, 0x98, 0xfd, 0xfd, 0xea,
	0xe1, 0x50, 0x3e, 0x45, 0x46, 0x43, 0x7b, 0xa9, 0x0b, 0x65, 0x30, 0x3f, 0x26, 0xff, 0x24, 0x55,
	0x7b, 0xa9, 0x9b, 0xf9, 0xd4, 0xcd, 0xcc, 0xfa, 0x5c, 0xf9, 0x5a, 0x31, 0x48, 0x58, 0xf4, 0xf4,
	0x79, 0x04, 0xe6, 0x87, 0x48, 0x56, 0x90, 0xf1, 0x42, 0x97, 0x0d, 0xc5, 0xcc, 0xa7, 0x49, 0x9f,
	0x77, 0xc2, 0x7d, 0x8e, 0x50, 0x5f, 0xd5, 0xb5, 0xa6, 0x4b, 0x5b, 0xf8, 0xfb, 0x14, 0x00, 0x9e,
	0x91, 0x04, 0x00, 0xe4, 0x5e, 0x4f, 0x9f, 0x68, 0x96, 0xa4, 0x2a, 0xf9, 0xd4, 0xcd, 0xd4, 0xfa,
	0x82, 0x30, 0x0f, 0xb2, 0x9a, 0x3c, 0x42, 0xf9, 0xf4, 0xcd, 0xd4, 0xfa, 0xac, 0xb0, 0x02, 0xe6,
	0x09, 0x6e, 0x9c, 0x4a, 0x3d, 0x5d, 0x41, 0xf9, 0x8c, 0xdd, 0xca, 0x56, 0x2e, 0x19, 0xfa, 0x10,
	0xe5, 0xb3, 0xa4, 0xe7, 0x12, 0x98, 0xb6, 0x90, 0x3c, 0xc2, 0x43, 0xe5, 0x48, 0xc3, 0x32, 0x98,
	0x25, 0x0d, 0x64, 0xbc, 0x29, 0xd2, 0x13, 0x82, 0x19, 0xd2, 0x64, 0xc9, 0xfd, 0xfc, 0x34, 0x69,
	0x59, 0x02, 0xd3, 0xe6, 0x58, 0xd7, 0x4c, 0xdd, 0xc8, 0xcf, 0x90, 0x86, 0x65, 0x30, 0xab, 0x9a,
	0xd2, 0x50, 0xef, 0xbd, 0x42, 0x4a, 0x7e, 0xf6, 0x66, 0x6a, 0x7d, 0x46, 0x58, 0x04, 0x53, 0xaa,
	0x29, 0x8d, 0x0d, 0x3d, 0x0f, 0xf0, 0xff, 0xc2, 0x63, 0xb0, 0x1c, 0x5a, 0x1b, 0x1e, 0x5a, 0x51,
	0x5f, 0xab, 0xa6, 0xaa, 0x6b, 0x6c, 0x29, 0x97, 0xc0, 0x9c, 0xbb, 0x3c, 0xca, 0xa7, 0x05, 0xf1,
	0xaf, 0x52, 0x40, 0xc4, 0x9c, 0xaa, 0xb5, 0xbb, 0x95, 0xaa, 0x81, 0x64, 0x0b, 0xed, 0xd1, 0xa5,
	0x34, 0x91, 0xdc, 0x9f, 0xa0, 0x23, 0xf4, 0xe5, 0x09, 0x32, 0x2d, 0xdc, 0x77, 0x48, 0x1a, 0xe8,
	0xec, 0x53, 0x64, 0x6a, 0x6e, 0xe3, 0x50, 0xef, 0xeb, 0x84, 0x45, 0x59, 0xe1, 0x7d, 0xb0, 0x68,
	0xa2, 0x21, 0xea, 0x59, 0xaa, 0xae, 0x49, 0x23, 0x9b, 0x49, 0x8b, 0xe5, 0x2b, 0x45, 0x36, 0xb0,
	0xd4, 0x71, 0xe0, 0x03, 0x5d, 0x41, 0x8f, 0xd7, 0xf6, 0x2a, 0xad, 0x6e, 0xa5, 0xf3, 0x5c, 0xea,
	0xd4, 0x9b, 0xf5, 0x6a, 0xb7, 0xd1, 0x6e, 0x49, 0x8d, 0xd6, 0xd3, 0x4a, 0xb3, 0x51, 0xc3, 0x02,
	0x21, 0xec, 0x21, 0x93, 0xa6, 0x6c, 0x15, 0xff, 0x3b, 0x05, 0xde, 0x89, 0x9d, 0x30, 0x61, 0x1f,
	0x12, 0xea, 0x60, 0xca, 0x40, 0xe6, 0x64, 0x68, 0x91, 0xc9, 0x2e, 0x96, 0x3f, 0x5d, 0x4c, 0xd0,
	0xab, 0x58, 0x3f, 0x22, 0x7d, 0x1e, 0x4f, 0x77, 0x8e, 0xab, 0xd5, 0x7a, 0xa7, 0x23, 0x7e, 0x2d,
	0x05, 0xa6, 0x59, 0xa3, 0x30, 0x07, 0xec, 0x66, 0xf8, 0x96, 0xb0, 0x0a, 0x96, 0xeb, 0x47, 0x47,
	0xed, 0x23, 0xe9, 0xb8, 0xd5, 0x39, 0xac, 0x57, 0x1b, 0x7b, 0x8d, 0x7a, 0x0d, 0xa6, 0x84, 0x02,
	0xb8, 0x4c, 0x9b, 0xbb, 0xed, 0xb6, 0x74, 0x50, 0x69, 0x3d, 0x97, 0x9a, 0xf5, 0xca, 0xfe, 0x71,
	0xbd, 0x03, 0xd3, 0xc2, 0x35, 0x90, 0xa7, 0x18, 0x5b, 0x9f, 0xd4, 0xad, 0x57, 0x0e, 0xa4, 0x6a,
	0xfb, 0xb8, 0xd5, 0x85, 0x19, 0xe1, 0x2a, 0xb8, 0x42, 0xd1, 0xea, 0x51, 0xbd, 0x42, 0xd8, 0x50,
	0x6b, 0x74, 0x2a, 0x4f, 0x9a, 0xf5, 0x1a, 0xcc, 0x8a, 0xdf, 0x49, 0x83, 0x3c, 0x9e, 0xbf, 0x6f,
	0xd6, 0x9d, 0x9e, 0x6e, 0xa8, 0x5a, 0x5f, 0x58, 0x00, 0xb9, 0x21, 0x7a, 0x8d, 0x86, 0x64, 0xa5,
	0x69, 0xfc, 0xf7, 0x95, 0x3a, 0x1c, 0x9a, 0x44, 0x20, 0x69, 0xac, 0x2d, 0x0a, 0x92, 0xad, 0x81,
	0x49, 0x04, 0x91, 0xc6, 0x1a, 0x26, 0x9b, 0xa6, 0x6a, 0x5a, 0x26, 0xe1, 0x68, 0x1a, 0x6b, 0xd8,
	0x50, 0x36, 0x2d, 0x69, 0xa0, 0x5a, 0x26, 0x51, 0x55, 0xd6, 0x47, 0x53, 0x91, 0x49, 0xf4, 0x34,
	0x2d, 0xcc, 0x81, 0x4c, 0x7f, 0x3c, 0x22, 0x2a, 0x9a, 0xc6, 0x26, 0xf1, 0xd1, 0x78, 0x3c, 0x22,
	0xfa, 0x49, 0xbe, 0x66, 0x5a, 0x13, 0xcd, 0x24, 0xba, 0x49, 0x46, 0x1f, 0x20, 0x79, 0xa8, 0x6a,
	0x7d, 0xa2, 0x9c, 0x69, 0xac, 0x24, 0x96, 0x7e, 0x82, 0x0c, 0x89, 0xce, 0x69, 0x8e, 0x34, 0xae,
	0x80, 0x79, 0x43, 0x37, 0x07, 0xb2, 0xc6, 0x5a, 0xe7, 0x49, 0x6b, 0x01, 0x08, 0xa3, 0xc9, 0xd0,
	0x52, 0xc7, 0x43, 0x15, 0x19, 0xd2, 0xd8, 0x40, 0x23, 0x75, 0x32, 0xca, 0x2f, 0x10, 0xec, 0x6d,
	0x70, 0xc5, 0x87, 0xe9, 0x2f, 0x91, 0x89, 0x75, 0x5b, 0x1e, 0xe6, 0x17, 0x31, 0x81, 0xf8, 0xd3,
	0x1c, 0x58, 0xb3, 0x25, 0xec, 0xe3, 0x12, 0x31, 0xed, 0x35, 0xb0, 0x6c, 0x9b, 0x28, 0x53, 0x59,
	0xc7, 0xc2, 0xdf, 0x06, 0x57, 0xb0, 0x63, 0x52, 0xc9, 0x70, 0xc8, 0x90, 0x3c, 0x2e, 0x20, 0x4d,
	0x08, 0xae, 0x82, 0x4b, 0x81, 0xbe, 0xc4, 0x06, 0xa8, 0xed, 0x87, 0xd5, 0x3d, 0x7b, 0x41, 0xea,
	0x9e, 0xb3, 0xfd, 0x0f, 0x31, 0xae, 0x29, 0x62, 0x5c, 0xf7, 0xc1, 0xb4, 0x49, 0x85, 0x4e, 0x64,
	0x31, 0x57, 0x5e, 0x2b, 0x72, 0xb5, 0x42, 0x00, 0x40, 0x31, 0xe4, 0x97, 0x96, 0x64, 0xa9, 0x23,
	0x44, 0x38, 0xbc, 0x20, 0x5c, 0x01, 0x4b, 0xb4, 0x6d, 0xac, 0xf6, 0x5e, 0x51, 0x60, 0x81, 0x00,
	0x2b, 0x60, 0xde, 0x44, 0xb2, 0xa9, 0x6b, 0x92, 0x69, 0xc9, 0x86, 0x95, 0x5f, 0x22, 0xad, 0xab,
	0x60, 0x81, 0xb5, 0x0e, 0x91, 0xd6, 0xb7, 0x06, 0x79, 0x48, 0x9a, 0x05, 0x00, 0x5e, 0x23, 0x4b,
	0x97, 0x5e, 0xeb, 0x16, 0x32, 0xf3, 0xcb, 0xf6, 0x00, 0x72, 0xef, 0xcb, 0x13, 0xd5, 0x54, 0xf1,
	0x52, 0xcd, 0xbc, 0x40, 0x5a, 0x17, 0xc1, 0x94, 0x39, 0xd4, 0x2d, 0xa9, 0x94, 0xbf, 0xe4, 0xfb,
	0x5f, 0xce, 0xaf, 0xf8, 0xfe, 0x6f, 0xe6, 0x57, 0x7d, 0xff, 0xb7, 0xf2, 0x97, 0x7d, 0xff, 0xb7,
	0xf3, 0x57, 0x6c, 0x17, 0xf6, 0x02, 0x69, 0xbd, 0x81, 0x84, 0x5b, 0xcd, 0x7c, 0x9e, 0x34, 0xee,
	0x02, 0xa0, 0x9f, 0x68, 0x6c, 0xcf, 0xc8, 0xaf, 0x11, 0xf7, 0x7f, 0xbb, 0xc8, 0xd5, 0x85, 0x62,
	0x1b, 0x13, 0x13, 0xad, 0x58, 0x02, 0xd3, 0x74, 0xbb, 0x31, 0xf3, 0x05, 0xec, 0x0d, 0x89, 0x8b,
	0x56, 0x47, 0x48, 0xfa, 0x0d, 0x5d, 0x43, 0xf9, 0xab, 0xce, 0x14, 0x08, 0x0f, 0xf2, 0xd7, 0xc8,
	0x7f, 0x08, 0x66, 0xc6, 0xb2, 0x69, 0x9e, 0xe8, 0x86, 0x92, 0xbf, 0x8e, 0x55, 0xa0, 0x70, 0x0c,
	0x66, 0xdd, 0x21, 0xf3, 0x00, 0xd2, 0xc9, 0x84, 0x76, 0x12, 0xe2, 0x2d, 0x5f, 0x5a, 0x4c, 0x87,
	0x88, 0x6e, 0xcd, 0x60, 0xbd, 0x64, 0x1b, 0x9e, 0x87, 0x3e, 0x43, 0x3c, 0xf3, 0x18, 0xdc, 0x8e,
	0x5c, 0x43, 0x5d, 0x51, 0x2d, 0xfc, 0x29, 0xdb, 0x35, 0xc7, 0xa8, 0xf6, 0x03, 0x30, 0x8b, 0x14,
	0xd5, 0xa2, 0x8c, 0x49, 0x13, 0x85, 0x29, 0xf0, 0x19, 0x23, 0xfe, 0x6d, 0x0a, 0xdc, 0x39, 0xe3,
	0x93, 0xcc, 0xb9, 0xee, 0x07, 0x9c, 0x6b, 0xb1, 0x98, 0xa8, 0x5f, 0xd8, 0xbd, 0xee, 0x9d, 0xcf,
	0xbb, 0x5e, 0x01, 0x97, 0x68, 0x73, 0xab, 0x2d, 0x1d, 0xd6, 0x8f, 0x0e, 0x1a, 0x9d, 0x4e, 0xa3,
	0xdd, 0x82, 0x69, 0xb1, 0x0d, 0x6e, 0x46, 0xce, 0x60, 0x4f, 0xd5, 0x94, 0x04, 0x8c, 0xf2, 0x0a,
	0x95, 0xec, 0xf4, 0xe2, 0x4f, 0xd2, 0xe0, 0x56, 0xcc, 0x88, 0x8c, 0x0f, 0xd5, 0x00, 0x1f, 0xee,
	0x17, 0xcf, 0xec, 0x13, 0xe2, 0x01, 0xcf, 0xbf, 0xd0, 0x88, 0x63, 0x0d, 0x2c, 0xfb, 0xbc, 0x93,
	0xeb, 0x7a, 0xc4, 0xef, 0xf3, 0xb6, 0x26, 0x67, 0x0f, 0xa2, 0x5b, 0x8f, 0xd4, 0x6a, 0x77, 0xa5,
	0xbd, 0xf6, 0x71, 0x0b, 0x73, 0xf0, 0x32, 0x10, 0x28, 0xf6, 0xa4, 0x52, 0x93, 0x0e, 0x2b, 0x9d,
	0xce, 0xb3, 0xf6, 0x51, 0x0d, 0xa6, 0xa3, 0x19, 0x9e, 0x11, 0x16, 0x01, 0xa0, 0xcd, 0x7b, 0xc7,
	0xcd, 0x26, 0xcc, 0x0a, 0x79, 0xb0, 0x42, 0xff, 0x57, 0x9a, 0x47, 0xf5, 0x4a, 0xed, 0xb9, 0x74,
	0x50, 0x3f, 0x78, 0x52, 0x3f, 0x82, 0x39, 0x57, 0x34, 0xec, 0xa3, 0xcd, 0x76, 0xf5, 0x83, 0x7a,
	0x0d, 0x4e, 0x89, 0x9f, 0xe7, 0x88, 0x26, 0x99, 0x0e, 0x8b, 0x3f, 0x4a, 0x71, 0x04, 0xe1, 0x53,
	0xc8, 0x84, 0x82, 0xf8, 0xbf, 0x51, 0x46, 0xcc, 0x4a, 0xb6, 0xea, 0x46, 0x0d, 0xa6, 0xc5, 0x0a,
	0xc7, 0x72, 0x0f, 0x64, 0xab, 0x37, 0x98, 0x8c, 0xcd, 0x04, 0xab, 0xfe, 0x56, 0x96, 0x63, 0x8a,
	0xee, 0x18, 0xe7, 0x33, 0xc5, 0x60, 0xbf, 0xb0, 0x1a, 0x46, 0xce, 0x86, 0xee, 0x80, 0x2d, 0xb0,
	0x74, 0x82, 0xd0, 0xab, 0xe1, 0xa9, 0x34, 0x62, 0xc3, 0x10, 0x1f, 0x35, 0x57, 0xde, 0x4e, 0xf8,
	0xb1, 0x67, 0xa4, 0xb7, 0xdd, 0x5c, 0xe8, 0x81, 0x69, 0xf6, 0x1b, 0xef, 0xf9, 0x41, 0x7f, 0x29,
	0x95, 0x98, 0x55, 0x46, 0x61, 0x65, 0x36, 0xa5, 0x25, 0xba, 0x13, 0x22, 0xa9, 0xe4, 0x86, 0x35,
	0xb4, 0xa1, 0x4c, 0xc3, 0x9a, 0xc2, 0x09, 0x58, 0xf4, 0x7f, 0x56, 0xf8, 0x02, 0x98, 0x66, 0xf3,
	0x67, 0x07, 0x8b, 0xa4, 0xbc, 0xb2, 0x27, 0x2b, 0x00, 0x40, 0xb6, 0x47, 0xba, 0x73, 0xa6, 0x6d,
	0xd7, 0x81, 0x34, 0x85, 0xb6, 0x64, 0x88, 0xec, 0xa4, 0x8b, 0x51, 0x23, 0x9e, 0xb3, 0xcb, 0x88,
	0x13, 0x70, 0xc3, 0x9e, 0x37, 0xf6, 0xb0, 0x6c, 0xee, 0x5d, 0x24, 0x8f, 0x12, 0xb8, 0x3a, 0x3b,
	0xc8, 0x50, 0x35, 0x05, 0x7d, 0xc4, 0xd6, 0xe0, 0x3b, 0x99, 0x64, 0xec, 0x63, 0x07, 0x69, 0x22,
	0xc1, 0x07, 0x66, 0x68, 0x56, 0xfc, 0xb7, 0x14, 0x78, 0x9b, 0xfb, 0x5d, 0xa6, 0x8d, 0x95, 0x80,
	0x36, 0xae, 0x17, 0xcf, 0xe8, 0x11, 0xb6, 0xc2, 0x8f, 0xcf, 0x19, 0x71, 0x3b, 0x71, 0xb3, 0x2f,
	0xaa, 0x6e, 0xb4, 0xf6, 0xda, 0xde, 0x90, 0xbb, 0x55, 0x39, 0xa8, 0x3b, 0x4e, 0xab, 0x5b, 0xf9,
	0xa0, 0xde, 0x82, 0x19, 0x1e, 0x87, 0xb3, 0x62, 0x13, 0x7c, 0x26, 0xa0, 0x19, 0x78, 0xce, 0x1e,
	0x8f, 0xf5, 0xe4, 0xd4, 0xef, 0x57, 0x6a, 0x71, 0xc6, 0xfc, 0x3e, 0x28, 0x9e, 0x35, 0x1a, 0x09,
	0x20, 0x2a, 0x54, 0xcd, 0x1b, 0x35, 0x7e, 0x14, 0x21, 0x36, 0x5d, 0x19, 0x84, 0xc6, 0x62, 0x32,
	0xb8, 0x07, 0xa6, 0xa9, 0x0c, 0xec, 0xf3, 0x73, 0x9e, 0xf7, 0x79, 0xf1, 0xc7, 0x29, 0x70, 0x85,
	0x83, 0xc5, 0xe9, 0x50, 0xd4, 0xf4, 0xd2, 0xb6, 0xc9, 0xda, 0x9d, 0x3c, 0x5a, 0x96, 0x09, 0x6b,
	0x59, 0x36, 0xac, 0x65, 0x39, 0x12, 0xe2, 0xce, 0x83, 0xec, 0x89, 0xaa, 0xd1, 0x83, 0x07, 0x89,
	0xbe, 0x86, 0xba, 0x69, 0x22, 0x93, 0xc4, 0xbb, 0x0b, 0xc2, 0x65, 0xb0, 0xd8, 0x9b, 0x18, 0x06,
	0xd2, 0x2c, 0xc9, 0xd0, 0x4d, 0x0b, 0xe1, 0x53, 0x32, 0x0e, 0x96, 0xfe, 0x31, 0x15, 0xc9, 0x17,
	0x1c, 0x0b, 0xa3, 0x04, 0x46, 0xf1, 0x66, 0x0b, 0xba, 0x02, 0x96, 0x5e, 0xaa, 0x43, 0x0b, 0x19,
	0xd4, 0x2d, 0xe2, 0x4e, 0xc4, 0x52, 0xc8, 0x97, 0x28, 0xe0, 0x71, 0x17, 0xb9, 0x40, 0x1f, 0xc7,
	0x6b, 0x4c, 0xd9, 0xb1, 0xb6, 0xaa, 0xf5, 0x86, 0x13, 0x05, 0x49, 0x24, 0xc4, 0x25, 0x0b, 0x9e,
	0x11, 0xff, 0x33, 0x1d, 0xda, 0x3e, 0x3d, 0x0b, 0x63, 0x12, 0x7f, 0x12, 0xb0, 0xba, 0x7b, 0xc5,
	0xb3, 0xba, 0x84, 0xdd, 0x7f, 0x70, 0xa1, 0xc4, 0x99, 0xb2, 0x23, 0x64, 0x1b, 0xac, 0xd8, 0x18,
	0x8b, 0x56, 0x29, 0x4a, 0x37, 0x81, 0xd2, 0xd9, 0x5f, 0xc3, 0x04, 0x34, 0xd1, 0x42, 0xda, 0x0b,
	0x5b, 0x60, 0x29, 0xd0, 0x14, 0x99, 0x7c, 0xc1, 0x67, 0x4b, 0x77, 0x1a, 0x22, 0xba, 0x98, 0x60,
	0x51, 0xb8, 0x0e, 0xd6, 0x28, 0xd0, 0x7e, 0xd6, 0xaa, 0x1f, 0x91, 0xf0, 0xa8, 0xd1, 0x62, 0xae,
	0x17, 0x66, 0xc4, 0x9f, 0x79, 0x32, 0x0c, 0xde, 0x15, 0x59, 0xb2, 0xa6, 0xa8, 0x5a, 0x3f, 0xc1,
	0xf6, 0x8d, 0x27, 0x4e, 0x0f, 0x71, 0x54, 0x89, 0x22, 0xf5, 0x21, 0xc3, 0xd3, 0x87, 0x2c, 0x4f,
	0xb9, 0x72, 0x01, 0xe5, 0x22, 0xa7, 0x76, 0x82, 0x12, 0x1d, 0x9a, 0xc1, 0xd6, 0xc1, 0x20, 0x55,
	0x93, 0x06, 0xf2, 0x70, 0xc8, 0x94, 0xe8, 0xe3, 0x6c, 0x28, 0x22, 0x09, 0xac, 0x88, 0x29, 0xd2,
	0x5e, 0x40, 0x91, 0x1e, 0x14, 0x93, 0x74, 0x0b, 0x2b, 0xd3, 0x7b, 0x60, 0xce, 0x55, 0x22, 0x3b,
	0x58, 0xd8, 0x4c, 0x36, 0x18, 0x26, 0x72, 0x34, 0xa8, 0xf0, 0x3f, 0x29, 0xb0, 0xe0, 0x6b, 0xb9,
	0x78, 0x33, 0xf6, 0x0c, 0x18, 0xd8, 0xf2, 0xb0, 0x52, 0xd2, 0x01, 0x89, 0xcf, 0xca, 0xd9, 0x11,
	0xb9, 0x8f, 0xdc, 0x93, 0xce, 0x73, 0xf4, 0x95, 0x26, 0x4a, 0xf0, 0xf1, 0x99, 0x84, 0x24, 0x72,
	0x5f, 0x56, 0x35, 0xd3, 0x62, 0x19, 0x13, 0xdb, 0xc3, 0xcd, 0x06, 0x3c, 0x1c, 0x70, 0xce, 0x9b,
	0x96, 0x81, 0xe4, 0x57, 0x24, 0x55, 0x92, 0xbb, 0xb0, 0x13, 0xd2, 0xdf, 0x85, 0xe3, 0x68, 0x8f,
	0xf9, 0x25, 0xd0, 0xe9, 0xc8, 0xa3, 0xea, 0x2f, 0x55, 0xbf, 0xc5, 0x6f, 0xa4, 0xdd, 0x64, 0x65,
	0xd4, 0x1a, 0x98, 0x16, 0xd7, 0x02, 0x5a, 0xfc, 0xa9, 0xe2, 0xd9, 0x9d, 0xce, 0x15, 0x0f, 0x73,
	0x4e, 0xed, 0xec, 0x94, 0xcf, 0x20, 0xcf, 0x36, 0xe7, 0xe8, 0x05, 0xc9, 0xae, 0x5d, 0x98, 0x48,
	0x7f, 0x12, 0x3e, 0xaf, 0xb3, 0x95, 0xbd, 0xb9, 0xab, 0x9a, 0x07, 0x59, 0x92, 0xc3, 0xce, 0xf0,
	0x05, 0x9b, 0xe5, 0x09, 0x36, 0xc7, 0x13, 0xec, 0x14, 0x5f, 0xb0, 0xd4, 0x41, 0xfd, 0x76, 0x06,
	0xdc, 0x3d, 0x6b, 0x25, 0x4c, 0xb8, 0xef, 0x05, 0x84, 0xfb, 0x99, 0x62, 0xb2, 0x8e, 0xe7, 0x12,
	0xb0, 0x9f, 0x0b, 0x2d, 0xb0, 0xe0, 0xdd, 0xf6, 0xcc, 0x7c, 0x96, 0xf8, 0xb3, 0x9d, 0xa4, 0x5f,
	0x0e, 0xee, 0x7e, 0x87, 0xe1, 0xdd, 0x2f, 0x52, 0xa3, 0x52, 0x51, 0x1a, 0x95, 0xf6, 0x6b, 0x54,
	0xe6, 0x42, 0x35, 0x4a, 0x0c, 0x05, 0x1b, 0xee, 0xf5, 0x08, 0xd3, 0x25, 0xb1, 0xca, 0xf1, 0x23,
	0xbe, 0x18, 0xf4, 0x06, 0xc8, 0x8c, 0xcc, 0x3e, 0x59, 0xc1, 0x5c, 0x79, 0x39, 0x74, 0x17, 0x23,
	0x7e, 0x27, 0x15, 0xb2, 0x64, 0x1a, 0x49, 0xd3, 0xe4, 0xbc, 0xad, 0xb7, 0xcb, 0x60, 0x96, 0x25,
	0x20, 0x1d, 0x76, 0xc4, 0x66, 0x4b, 0xbc, 0x79, 0x1c, 0xff, 0x39, 0xc6, 0x63, 0x8d, 0x76, 0x4a,
	0x95, 0xba, 0x9b, 0xcb, 0x60, 0xd1, 0x52, 0x7b, 0xaf, 0x90, 0x25, 0xa9, 0x16, 0x1a, 0x39, 0xda,
	0x2a, 0xfe, 0x3c, 0x1d, 0x8a, 0x02, 0xfc, 0x33, 0x3c, 0xf3, 0x9e, 0x21, 0xa6, 0xd7, 0x79, 0x94,
	0x11, 0x07, 0xe9, 0xd1, 0xd2, 0xe5, 0x88, 0x31, 0x70, 0xa4, 0xec, 0xd4, 0x2b, 0x9d, 0x76, 0x8b,
	0x1e, 0x29, 0xd7, 0xc0, 0x6a, 0xe8, 0xac, 0x89, 0x4f, 0x46, 0xde, 0xb3, 0x10, 0x86, 0xc8, 0x11,
	0x8a, 0x00, 0xd9, 0x68, 0x1d, 0xca, 0xb9, 0x27, 0xab, 0xbd, 0x4a, 0xa3, 0x59, 0xaf, 0x49, 0xcd,
	0xf6, 0x7e, 0x5b, 0x3a, 0x3e, 0x6c, 0xb6, 0x2b, 0x35, 0x38, 0x25, 0x5c, 0x02, 0x4b, 0xce, 0xd4,
	0xba, 0x8d, 0xea, 0x07, 0xf5, 0x2e, 0x9c, 0x16, 0x7f, 0x37, 0x15, 0x19, 0xcb, 0xfa, 0x45, 0x7e,
	0x9e, 0x2c, 0x5d, 0xd4, 0xc1, 0xd5, 0x96, 0x6e, 0x96, 0x23, 0x5d, 0x22, 0x75, 0xf1, 0xf7, 0x33,
	0x21, 0x2d, 0xf6, 0x4e, 0x25, 0x69, 0x56, 0x29, 0xdc, 0xe7, 0xec, 0xc0, 0xda, 0x73, 0xf0, 0x16,
	0xbf, 0x9e, 0x3e, 0xaf, 0x68, 0xe3, 0xd8, 0x9e, 0x16, 0xde, 0x06, 0x57, 0x5d, 0x21, 0xda, 0x17,
	0x0d, 0x6e, 0x4e, 0x21, 0x23, 0x08, 0x60, 0xd1, 0x25, 0x60, 0x02, 0xf6, 0xe7, 0xf8, 0x72, 0xdc,
	0x1c, 0xdf, 0x14, 0x27, 0x79, 0x38, 0x1d, 0xad, 0x22, 0x33, 0x51, 0x4a, 0x30, 0xcb, 0xcb, 0x13,
	0x02, 0xf1, 0x9f, 0x53, 0xe0, 0xdd, 0x98, 0x2c, 0xf2, 0x6b, 0xd5, 0x42, 0xe6, 0x1b, 0x29, 0x49,
	0x13, 0x9f, 0xac, 0x70, 0x77, 0xa9, 0x37, 0x90, 0xb5, 0x3e, 0x8a, 0xcf, 0x5d, 0x85, 0xbf, 0x56,
	0xa4, 0x7f, 0xab, 0xa4, 0x73, 0x61, 0x13, 0xcc, 0x7b, 0xff, 0x47, 0x9e, 0x5b, 0x96, 0xc0, 0x34,
	0xfd, 0x22, 0x9d, 0xc2, 0x8c, 0xf8, 0x83, 0x14, 0x58, 0x3f, 0xfb, 0x6b, 0x4c, 0xeb, 0xde, 0x0f,
	0x68, 0x5d, 0xa9, 0x98, 0xb4, 0x6b, 0x38, 0x99, 0xf2, 0xe0, 0x5c, 0x1b, 0x83, 0x58, 0xe3, 0x88,
	0xa0, 0x66, 0xc8, 0x2f, 0xad, 0x8e, 0x25, 0x5b, 0x93, 0x24, 0xc9, 0xcb, 0x1f, 0xa7, 0x38, 0x29,
	0x5f, 0xcf, 0x30, 0x71, 0x22, 0xbc, 0x04, 0xe6, 0xe8, 0x2d, 0x95, 0x6e, 0x28, 0xc8, 0xa0, 0x17,
	0xd5, 0xe4, 0xea, 0x9d, 0x9d, 0xfc, 0xc7, 0x6a, 0xef, 0x15, 0xdb, 0x9a, 0x89, 0x7d, 0x8f, 0x90,
	0x64, 0xa0, 0x91, 0xac, 0x6a, 0xaa, 0xd6, 0x67, 0xd1, 0xc9, 0x65, 0xb0, 0x38, 0x46, 0x64, 0x1b,
	0x96, 0x30, 0x2f, 0x59, 0x70, 0x32, 0x83, 0x1d, 0x46, 0x4f, 0x1f, 0x8d, 0x87, 0x08, 0xcb, 0x66,
	0xca, 0xbe, 0x82, 0x91, 0x5f, 0xcb, 0xea, 0x50, 0x7e, 0x31, 0x44, 0x92, 0x7d, 0x1d, 0x34, 0x4d,
	0xb2, 0x0a, 0x66, 0x1c, 0x3b, 0xe8, 0x6e, 0xf6, 0x86, 0x19, 0x37, 0x7e, 0x04, 0x29, 0x7e, 0x35,
	0xc3, 0xd1, 0x15, 0xdf, 0x57, 0xcf, 0xa7, 0x2b, 0x11, 0x5d, 0xc3, 0xba, 0xc2, 0x75, 0x46, 0x9c,
	0x28, 0xe2, 0x26, 0xb8, 0xe6, 0x4f, 0xbc, 0xf9, 0x1d, 0x0e, 0x4c, 0x0b, 0x77, 0xc0, 0x2d, 0xdb,
	0x59, 0xf9, 0x5c, 0x11, 0x3e, 0x71, 0xd7, 0x8e, 0x2a, 0x7b, 0xdd, 0x46, 0x6b, 0x1f, 0x66, 0xe2,
	0xcf, 0xe3, 0x59, 0x77, 0xd3, 0xc2, 0x00, 0x21, 0xe9, 0x48, 0xdd, 0xe3, 0xa3, 0x96, 0xd7, 0x55,
	0x1d, 0x36, 0x2b, 0xcf, 0xeb, 0xce, 0x4c, 0xe0, 0x94, 0xeb, 0x27, 0x19, 0x72, 0xdc, 0xaa, 0x3c,
	0xad, 0x34, 0x9a, 0x95, 0x27, 0xcd, 0x3a, 0x9c, 0x76, 0xfd, 0x24, 0x43, 0x5b, 0x6d, 0x89, 0x2e,
	0xa1, 0xd3, 0x6c, 0x77, 0x3b, 0x70, 0x06, 0x6f, 0x55, 0x51, 0x27, 0xe6, 0x23, 0x92, 0x73, 0xea,
	0x9c, 0xc8, 0xe3, 0x4f, 0x90, 0x69, 0x55, 0x47, 0xc8, 0xb4, 0xe4, 0xd1, 0x98, 0xa9, 0xb0, 0x7b,
	0x47, 0x9a, 0x0d, 0xdc, 0x91, 0x92, 0x78, 0x5a, 0xfc, 0x8f, 0x70, 0x94, 0x1f, 0x9c, 0x4a, 0xd2,
	0xab, 0x80, 0xe8, 0x7e, 0x61, 0x4d, 0xf8, 0xcd, 0xf3, 0x29, 0x42, 0xac, 0xfc, 0x3c, 0x79, 0x6c,
	0xc2, 0x5c, 0x47, 0x46, 0x19, 0x77, 0x38, 0x0c, 0xd8, 0x1b, 0x41, 0x56, 0xfc, 0x7a, 0x78, 0x23,
	0x70, 0x27, 0x5e, 0x51, 0x94, 0x9a, 0xa1, 0xbf, 0x29, 0xfb, 0x2f, 0x83, 0x45, 0x59, 0x51, 0xbc,
	0x36, 0x97, 0x73, 0xef, 0xc5, 0xf5, 0xb1, 0x17, 0x20, 0x59, 0x39, 0xf1, 0xfb, 0xe9, 0x90, 0x31,
	0x46, 0xcc, 0x25, 0xa9, 0x31, 0x72, 0xbb, 0x86, 0x45, 0xf0, 0x97, 0xa9, 0x0b, 0x95, 0xc1, 0x0d,
	0x50, 0x08, 0x28, 0x7c, 0x57, 0x72, 0x0d, 0x22, 0x13, 0x32, 0x17, 0x62, 0x6a, 0x2d, 0x12, 0x07,
	0xc2, 0xac, 0x6b, 0x2e, 0xdd, 0xa3, 0x4a, 0xcd, 0x4d, 0xa3, 0x1f, 0xd6, 0x5b, 0x35, 0x6c, 0xc1,
	0xb9, 0x88, 0x3b, 0x3e, 0xbc, 0xd4, 0xae, 0x21, 0x2b, 0x49, 0xf6, 0x6c, 0xf1, 0xeb, 0xd1, 0xd1,
	0x98, 0xdd, 0xff, 0x3c, 0xd1, 0x98, 0xbf, 0x4f, 0x38, 0x1a, 0xdb, 0x05, 0x53, 0x16, 0x21, 0x61,
	0x75, 0x62, 0xeb, 0x09, 0x06, 0x21, 0x7f, 0x0b, 0xdf, 0x4e, 0x81, 0x1c, 0xf9, 0xe5, 0x37, 0x62,
	0xfe, 0x55, 0x55, 0xc9, 0xcd, 0x3d, 0x45, 0x5c, 0x63, 0x65, 0xec, 0xd3, 0x4c, 0x68, 0x1f, 0x70,
	0x3c, 0x41, 0x24, 0xc8, 0xdc, 0x02, 0xcd, 0x13, 0xe1, 0x9d, 0x94, 0x69, 0xea, 0x45, 0x1d, 0x01,
	0x7f, 0x2f, 0xda, 0xdd, 0x90, 0x95, 0x57, 0x65, 0xad, 0x87, 0x86, 0x09, 0x6c, 0x6f, 0x05, 0xcc,
	0xbb, 0xb6, 0xc7, 0xae, 0xe8, 0x78, 0x8c, 0xc8, 0x46, 0xf4, 0xb0, 0x7d, 0xdf, 0x4f, 0x53, 0xa1,
	0xbc, 0x40, 0x68, 0x32, 0x49, 0xf3, 0x02, 0x9c, 0x8e, 0x61, 0xd3, 0xfb, 0xf0, 0x82, 0xd2, 0xcc,
	0x4e, 0xac, 0x8d, 0xc3, 0x5f, 0x6c, 0x38, 0x30, 0x23, 0xfe, 0x56, 0xa4, 0xa1, 0x50, 0x9f, 0xf0,
	0x86, 0x3e, 0x2d, 0x2a, 0xe9, 0x99, 0x09, 0x6f, 0x36, 0xb4, 0x7a, 0xee, 0xab, 0xe9, 0x48, 0x4b,
	0xb3, 0x27, 0x70, 0x1e, 0x4b, 0xf3, 0xf7, 0x89, 0x3c, 0xf7, 0x84, 0xb4, 0x97, 0x55, 0x1d, 0x0a,
	0xab, 0x4e, 0x46, 0x85, 0x15, 0x36, 0xe2, 0x90, 0x7c, 0xe6, 0x97, 0x95, 0xe0, 0xdf, 0x07, 0xf7,
	0x23, 0x33, 0x18, 0xef, 0xa9, 0xa6, 0x6e, 0xa8, 0x3d, 0x79, 0x88, 0x43, 0xd4, 0x24, 0x7e, 0xeb,
	0xe3, 0x29, 0xf0, 0xa9, 0x44, 0x23, 0x31, 0xbe, 0x1e, 0x04, 0xf8, 0xba, 0x55, 0x3c, 0x47, 0xef,
	0x30, 0x87, 0xf7, 0x41, 0x0e, 0xbb, 0x00, 0xdb, 0x95, 0xed, 0x9e, 0x6b, 0x34, 0x27, 0x59, 0x65,
	0x99, 0x85, 0x8f, 0xd3, 0xe0, 0xb2, 0x27, 0x1b, 0x55, 0xe9, 0xf5, 0x26, 0xa3, 0xc9, 0x50, 0xb6,
	0x74, 0x03, 0x1f, 0x65, 0x48, 0xa2, 0x0e, 0x99, 0x4c, 0x05, 0x17, 0xc1, 0x14, 0x29, 0x36, 0xb4,
	0xcb, 0x0b, 0x9d, 0x6a, 0xc3, 0x4c, 0xa0, 0xda, 0x30, 0x1b, 0xac, 0x36, 0xcc, 0x85, 0xab, 0x0d,
	0xa7, 0x02, 0xd5, 0x86, 0xd3, 0xde, 0x6a, 0xc3, 0x19, 0x5f, 0xb5, 0xe1, 0xac, 0xbf, 0xda, 0x10,
	0x04, 0xab, 0x0d, 0xe7, 0xa2, 0xaa, 0x0d, 0xe7, 0x23, 0xab, 0x0d, 0x17, 0x9c, 0xa1, 0x48, 0x0a,
	0x8d, 0xd4, 0x0f, 0x16, 0xfe, 0x3d, 0x05, 0xe6, 0x3c, 0x3c, 0xe1, 0xdd, 0x47, 0x9d, 0x20, 0xf4,
	0xca, 0x64, 0x96, 0xf7, 0x21, 0x58, 0x20, 0xfc, 0x77, 0x4a, 0x15, 0xb3, 0x24, 0xdd, 0x55, 0x7d,
	0x13, 0x39, 0x04, 0xf9, 0x2e, 0x01, 0xc1, 0x1e, 0xdb, 0x53, 0xea, 0x98, 0xbb, 0xb0, 0x0f, 0x5c,
	0xd8, 0x7e, 0xb1, 0x1f, 0x2a, 0xbb, 0x3c, 0xa0, 0xf5, 0xde, 0x15, 0x45, 0x89, 0x73, 0x65, 0x58,
	0xb1, 0x28, 0x21, 0xab, 0xb8, 0xea, 0xbb, 0x55, 0x0d, 0xfe, 0x81, 0x92, 0x9c, 0xfa, 0x57, 0x89,
	0x28, 0x0c, 0x4b, 0xf2, 0x8e, 0x49, 0x4e, 0x92, 0x48, 0x53, 0x9c, 0x46, 0x7a, 0xc0, 0xfa, 0x97,
	0x74, 0xe8, 0xae, 0xd8, 0xfd, 0xd2, 0x99, 0x75, 0x0c, 0x9c, 0x1e, 0x61, 0xeb, 0x7c, 0x0c, 0x66,
	0xec, 0xca, 0x77, 0x5e, 0xac, 0x11, 0x1a, 0x84, 0x35, 0x60, 0xdf, 0xa9, 0x4d, 0x46, 0x92, 0xa5,
	0x5b, 0xf2, 0x50, 0x72, 0x46, 0x21, 0xd3, 0x2f, 0x3c, 0x03, 0xd3, 0x36, 0x99, 0x00, 0x00, 0x03,
	0xf9, 0x7c, 0x25, 0xe7, 0xdb, 0x89, 0x35, 0xd0, 0x23, 0x36, 0x88, 0x79, 0x90, 0x75, 0x33, 0xfa,
	0x17, 0xa6, 0x11, 0x08, 0x14, 0x02, 0xeb, 0x3c, 0x42, 0x23, 0xfd, 0x35, 0x22, 0x35, 0x0e, 0x6f,
	0x76, 0x7d, 0xe7, 0xdf, 0xf7, 0xa8, 0x18, 0x7f, 0x11, 0x4e, 0x21, 0x7b, 0xbe, 0x93, 0xfc, 0x32,
	0x28, 0xa2, 0x53, 0x38, 0x26, 0x38, 0xb9, 0xa0, 0x9d, 0x89, 0x93, 0xfd, 0xca, 0xb8, 0xa9, 0x35,
	0x12, 0x99, 0xdb, 0x29, 0xb7, 0xac, 0x58, 0x0d, 0x05, 0x40, 0x9d, 0xde, 0x00, 0x29, 0x93, 0x21,
	0x52, 0x0e, 0xa8, 0x5f, 0x4e, 0xb0, 0x4f, 0xfd, 0x43, 0x3a, 0x74, 0xa2, 0x0a, 0x8f, 0xc2, 0xf8,
	0xd5, 0x08, 0xf0, 0x6b, 0xa3, 0x98, 0xb0, 0x67, 0xd8, 0x02, 0x9e, 0x83, 0x15, 0xd3, 0x26, 0x66,
	0x97, 0x41, 0x8a, 0x7c, 0x6a, 0x5b, 0xc3, 0x67, 0x13, 0x0f, 0xec, 0x07, 0x6a, 0xf2, 0xa9, 0x59,
	0x38, 0x00, 0x42, 0xb8, 0x35, 0x2a, 0x30, 0xb7, 0x5f, 0x58, 0xb8, 0xb1, 0x87, 0x00, 0x80, 0xc3,
	0x1f, 0x93, 0xd5, 0xda, 0x9e, 0x33, 0x4d, 0xf6, 0x61, 0x54, 0x49, 0xe2, 0x6b, 0xe4, 0x7f, 0x32,
	0x11, 0xa3, 0xe8, 0x71, 0x29, 0xe1, 0x5f, 0x44, 0xde, 0x8c, 0xb8, 0x83, 0x27, 0x55, 0xeb, 0x88,
	0x4e, 0x9f, 0x58, 0xad, 0x57, 0x00, 0x74, 0x95, 0x94, 0xa9, 0x68, 0x3a, 0xa6, 0xdc, 0xd4, 0xa3,
	0xd6, 0x24, 0xdd, 0x23, 0x55, 0xaa, 0xdd, 0xc6, 0xd3, 0x3a, 0xcc, 0x8a, 0xbf, 0x13, 0x4e, 0x88,
	0x7a, 0xf6, 0xa9, 0x1a, 0xb2, 0x64, 0x75, 0x68, 0x7e, 0xb2, 0x4b, 0x69, 0x7f, 0xb1, 0x5e, 0x26,
	0x54, 0xac, 0x47, 0x9d, 0xde, 0x8f, 0xb2, 0xe0, 0x5e, 0x82, 0x89, 0x30, 0xae, 0x7f, 0x10, 0xe0,
	0x7a, 0xb9, 0x98, 0xb8, 0x6f, 0x54, 0x91, 0x44, 0x56, 0x91, 0x2d, 0x99, 0x99, 0xc3, 0xe3, 0x73,
	0x0c, 0x45, 0x21, 0xa6, 0xf7, 0x96, 0x5c, 0xf8, 0x61, 0x1a, 0x2c, 0x05, 0xda, 0xf0, 0x52, 0x9d,
	0xfb, 0xd7, 0x14, 0xb9, 0x0b, 0x21, 0x97, 0x69, 0x86, 0x8a, 0x4c, 0x3f, 0x8f, 0x68, 0x93, 0x36,
	0x19, 0xb9, 0x37, 0xd8, 0xac, 0xcd, 0x3a, 0x1d, 0xdb, 0xb7, 0xbd, 0xee, 0x53, 0x1f, 0x4b, 0x45,
	0x86, 0xfb, 0xa0, 0xc9, 0x95, 0xc7, 0x94, 0xe3, 0xc2, 0xc7, 0x63, 0xdd, 0x54, 0xb5, 0xbe, 0x64,
	0xbf, 0x7e, 0x9a, 0x76, 0x0e, 0x7f, 0x3e, 0x84, 0xdc, 0xd2, 0xcc, 0x90, 0x99, 0x85, 0x30, 0x72,
	0x9f, 0x33, 0x4b, 0xb6, 0xaf, 0x75, 0x3b, 0xc8, 0x05, 0x67, 0x3d, 0x78, 0x80, 0x60, 0x06, 0x6f,
	0x1f, 0x8a, 0xf4, 0xe2, 0x94, 0x44, 0x83, 0x64, 0x2f, 0x24, 0xb5, 0x54, 0x48, 0x21, 0x91, 0xe0,
	0x8c, 0x58, 0xbd, 0x00, 0x7d, 0x17, 0xbf, 0x39, 0x0b, 0x04, 0x5b, 0x56, 0x5d, 0x7d, 0x62, 0xe0,
	0xc9, 0x6a, 0x96, 0xf0, 0x2e, 0xc8, 0xe1, 0xb9, 0x87, 0x8b, 0xee, 0x5c, 0x9a, 0x22, 0x3e, 0x37,
	0x61, 0xc2, 0xbe, 0x3c, 0x72, 0xa2, 0x82, 0x48, 0xc2, 0x7d, 0x79, 0x84, 0x48, 0x1c, 0xcc, 0xf6,
	0xea, 0x2c, 0x8e, 0x70, 0x2c, 0x07, 0xb7, 0x4b, 0xcd, 0x16, 0x84, 0x1a, 0x58, 0xf2, 0x34, 0x13,
	0x89, 0xe5, 0x88, 0x6a, 0xc2, 0x62, 0xdd, 0x1d, 0xaf, 0x7b, 0x3a, 0x46, 0x8f, 0xd7, 0x5e, 0x49,
	0x81, 0x26, 0xe9, 0x58, 0x7b, 0xa5, 0xe9, 0x27, 0x9a, 0x70, 0x00, 0x2e, 0x79, 0x47, 0x41, 0xa3,
	0xf1, 0x50, 0xb6, 0x68, 0x55, 0xcb, 0x62, 0x79, 0xc5, 0x37, 0x12, 0xc3, 0x1e, 0x17, 0xfc, 0xa3,
	0xb1, 0x66, 0xa9, 0xa5, 0x6b, 0xc8, 0xaf, 0x18, 0xd3, 0x11, 0xd6, 0x38, 0x43, 0xda, 0x3e, 0x47,
	0x45, 0x4b, 0x25, 0xbd, 0x58, 0x5e, 0xf6, 0x7e, 0x07, 0xc7, 0xb0, 0xc1, 0x8f, 0x90, 0x36, 0x67,
	0xce, 0xef, 0x82, 0x9c, 0xa6, 0x2b, 0xa4, 0x6e, 0x86, 0xcb, 0xc6, 0x96, 0xae, 0xa0, 0xc2, 0x77,
	0x53, 0x20, 0x4b, 0x18, 0xef, 0x79, 0x91, 0x97, 0x0a, 0x57, 0x24, 0xa6, 0xed, 0x37, 0x6d, 0xa4,
	0x49, 0x7e, 0xf1, 0xc2, 0x40, 0xaf, 0xd9, 0x9d, 0xe2, 0x25, 0xf7, 0x9d, 0x48, 0x16, 0xef, 0x17,
	0x4f, 0xd2, 0x30, 0x85, 0x83, 0x27, 0x13, 0xa1, 0xe0, 0xe3, 0x3e, 0xcf, 0x63, 0x9d, 0xe0, 0x63,
	0x41, 0xfa, 0xc0, 0x6f, 0x15, 0x2c, 0xe0, 0x69, 0x4b, 0x3a, 0xa9, 0xa9, 0xb0, 0x18, 0x2f, 0x0a,
	0x3f, 0x4f, 0x83, 0x2c, 0x11, 0xfa, 0x12, 0x98, 0xc6, 0xda, 0xe1, 0xcb, 0xa5, 0xf4, 0x75, 0x5d,
	0x71, 0xcc, 0xc9, 0x89, 0x6c, 0x5f, 0xc8, 0x6e, 0xa3, 0x73, 0x1b, 0xe2, 0x92, 0x92, 0xc9, 0xcd,
	0xdb, 0xd1, 0xb1, 0x43, 0x4c, 0x9a, 0x17, 0x6c, 0x6f, 0x38, 0xd4, 0x5f, 0xbc, 0x38, 0xb5, 0xb5,
	0x69, 0xca, 0xe7, 0x34, 0x72, 0xb6, 0xd3, 0x20, 0xd3, 0xf1, 0x54, 0x39, 0x61, 0x5f, 0xa0, 0xbe,
	0x46, 0x12, 0x29, 0x53, 0xa2, 0x8f, 0xc2, 0x66, 0xbc, 0x61, 0xe7, 0xac, 0xbd, 0x4e, 0x56, 0x85,
	0x2a, 0xbd, 0x54, 0xf1, 0xd9, 0x85, 0xbc, 0x55, 0x14, 0x6a, 0xb6, 0xcc, 0x17, 0x89, 0xcc, 0x57,
	0xbd, 0x32, 0xc7, 0xeb, 0xa7, 0x72, 0xbf, 0xe1, 0x93, 0xbb, 0xd3, 0xee, 0xc8, 0x7e, 0x09, 0x4c,
	0x13, 0x26, 0xaa, 0x0a, 0x7b, 0xa9, 0xe4, 0x57, 0x2f, 0xf2, 0x4c, 0xa9, 0xf0, 0x5f, 0x29, 0x90,
	0xc5, 0x0a, 0xe0, 0xa5, 0x76, 0x2e, 0x98, 0x1c, 0x5e, 0x48, 0xb2, 0xcb, 0x51, 0xb7, 0xf1, 0x85,
	0xeb, 0x0c, 0x4f, 0x54, 0x8d, 0x54, 0x80, 0xd9, 0x6f, 0xbb, 0x68, 0x04, 0xa1, 0x9b, 0x76, 0x5b,
	0x2e, 0xca, 0x6b, 0x52, 0xa5, 0x6f, 0x00, 0x40, 0x3e, 0xec, 0x0a, 0x3a, 0xb0, 0x62, 0x3c, 0xbd,
	0xa8, 0x15, 0x3b, 0xed, 0xce, 0x8a, 0x7d, 0xce, 0x7b, 0x96, 0xb7, 0x66, 0xf1, 0x8b, 0xee, 0x69,
	0xcc, 0x1d, 0xcd, 0xde, 0x47, 0x43, 0x2e, 0x84, 0x72, 0xe3, 0x3a, 0x58, 0x65, 0xef, 0x77, 0x3d,
	0x68, 0x9f, 0x69, 0x5a, 0x56, 0xfc, 0x92, 0x1b, 0xce, 0x7b, 0x87, 0x64, 0x3b, 0xe2, 0xb2, 0x6f,
	0x47, 0x5c, 0x78, 0x9c, 0x2a, 0x0b, 0xef, 0x02, 0xe0, 0x0e, 0xc4, 0x9e, 0x1d, 0x5d, 0x8a, 0xb0,
	0x4e, 0xb1, 0x0e, 0xae, 0x3a, 0x6f, 0x32, 0x87, 0x48, 0x36, 0xfc, 0x12, 0xe7, 0x4d, 0xd7, 0x63,
	0x20, 0x34, 0x62, 0xfa, 0x10, 0x5c, 0xb7, 0x87, 0x39, 0x94, 0x4d, 0x73, 0xac, 0x1b, 0xd6, 0x53,
	0xdd, 0x42, 0xd8, 0xe4, 0xf7, 0x27, 0xc8, 0x34, 0xfd, 0xee, 0xc8, 0xb1, 0x7c, 0x26, 0x57, 0xaf,
	0x45, 0x19, 0x13, 0xdc, 0x34, 0x19, 0xbb, 0x97, 0x71, 0x7f, 0xe0, 0xb9, 0x07, 0xf2, 0x0e, 0xbe,
	0x8f, 0x34, 0x64, 0xa8, 0x3d, 0xe7, 0x6d, 0x9f, 0xf0, 0x14, 0x2c, 0xb9, 0xef, 0x00, 0x69, 0x3c,
	0x47, 0x43, 0x04, 0xb1, 0x88, 0xfb, 0x4a, 0xe5, 0x8d, 0xd2, 0xa6, 0x3d, 0x80, 0xd3, 0xab, 0xa1,
	0x29, 0x6a, 0x0f, 0x99, 0x8f, 0xd7, 0x0e, 0x0f, 0x4b, 0x9b, 0x52, 0xa7, 0xde, 0x94, 0x2a, 0xcd,
	0x66, 0xa7, 0x5b, 0x71, 0xd2, 0xf0, 0x1b, 0x54, 0xee, 0x8c, 0x9c, 0xad, 0x77, 0x2f, 0xbc, 0xde,
	0x0e, 0x8e, 0x78, 0x91, 0x42, 0x63, 0x00, 0x6c, 0xc5, 0xa6, 0xd7, 0xd1, 0x65, 0x89, 0x76, 0x62,
	0x12, 0x89, 0xbe, 0x13, 0xa5, 0xe3, 0x7c, 0xd6, 0x2d, 0x70, 0xb1, 0xc7, 0xa1, 0x03, 0x54, 0x65,
	0x43, 0xa9, 0x0e, 0xe4, 0xe1, 0x10, 0x69, 0x7d, 0x44, 0xdc, 0x98, 0xfd, 0xc7, 0x3d, 0x52, 0x7c,
	0x23, 0x0d, 0x56, 0xa2, 0x18, 0x23, 0x94, 0xd9, 0x51, 0x8d, 0x3e, 0x0e, 0xa4, 0x7b, 0xe1, 0x8d,
	0x62, 0xbc, 0x80, 0x2a, 0x40, 0xe8, 0x53, 0x86, 0x4a, 0xce, 0x62, 0xed, 0xed, 0xf1, 0x4e, 0x31,
	0x11, 0xff, 0x77, 0xc0, 0x92, 0x49, 0x99, 0xe0, 0xdc, 0xe1, 0x66, 0x38, 0xdf, 0xf6, 0x33, 0xab,
	0x06, 0x2e, 0xb3, 0x08, 0xb2, 0x27, 0x1b, 0x8a, 0xe4, 0x2c, 0xd5, 0xae, 0xf2, 0xba, 0x5d, 0x4c,
	0xc0, 0x24, 0xf1, 0x01, 0xad, 0xa3, 0xb7, 0x49, 0x70, 0x04, 0x66, 0x5b, 0x5d, 0x44, 0x22, 0x49,
	0xfc, 0x59, 0x96, 0x3e, 0xe7, 0xf5, 0xd3, 0x33, 0x93, 0x8a, 0xca, 0x3c, 0xb9, 0x66, 0x96, 0xb6,
	0xcd, 0xec, 0x3e, 0x58, 0x50, 0x35, 0x0b, 0x19, 0x9a, 0x6c, 0x79, 0x93, 0x43, 0x51, 0x96, 0x26,
	0xac, 0x83, 0x9b, 0x48, 0x36, 0x2d, 0xe9, 0xcb, 0x13, 0x79, 0xa8, 0xbe, 0x54, 0x91, 0x41, 0x72,
	0x56, 0x8a, 0xda, 0xb3, 0xdc, 0xea, 0x3d, 0xea, 0xb2, 0xd6, 0xc1, 0xcd, 0x13, 0x74, 0x06, 0x25,
	0xdd, 0xbd, 0x6f, 0x80, 0xcb, 0xf2, 0x70, 0x88, 0x3d, 0x10, 0x3b, 0xdb, 0x39, 0xf8, 0x2c, 0x7b,
	0x7c, 0xb8, 0xc8, 0xac, 0xae, 0x8f, 0x85, 0xcc, 0xde, 0x12, 0xcf, 0x95, 0x57, 0x23, 0x05, 0x2a,
	0xdc, 0x05, 0x37, 0x82, 0x53, 0x64, 0x16, 0x6a, 0xab, 0x32, 0xad, 0x8f, 0xbd, 0x07, 0x6e, 0x05,
	0xe9, 0xa8, 0xd9, 0x4a, 0x93, 0xb1, 0x43, 0x4a, 0xc3, 0xbf, 0xbb, 0xe0, 0x46, 0x70, 0x2d, 0x81,
	0x21, 0xe7, 0xed, 0x21, 0x83, 0x74, 0xe1, 0x21, 0x17, 0xec, 0xf8, 0x76, 0xcc, 0x66, 0x6d, 0x4a,
	0x2f, 0xf4, 0x49, 0x7f, 0x60, 0x91, 0x9d, 0x8c, 0x78, 0x51, 0xdd, 0x50, 0xfb, 0x78, 0xab, 0x93,
	0xc6, 0x13, 0xa3, 0x37, 0x90, 0x4d, 0xea, 0x5d, 0x96, 0x22, 0x8f, 0x7c, 0xb4, 0xe6, 0x12, 0xda,
	0x9c, 0xf4, 0x62, 0xe8, 0xa3, 0xb1, 0x6a, 0x10, 0xa1, 0xb2, 0xb7, 0xb5, 0x22, 0x28, 0x78, 0x71,
	0xbc, 0x8a, 0xe1, 0x90, 0x64, 0xce, 0x25, 0xd9, 0xa2, 0x2f, 0x6d, 0xef, 0xff, 0x3c, 0x0d, 0x56,
	0xa2, 0xb6, 0x4c, 0x41, 0x04, 0x67, 0x6c, 0xa6, 0xf0, 0x2d, 0xe1, 0x36, 0xb8, 0xc9, 0xa1, 0x71,
	0x0e, 0xd9, 0x30, 0x25, 0x94, 0xc0, 0x03, 0x0e, 0xd5, 0x33, 0x59, 0xb5, 0x54, 0xad, 0xbf, 0xa7,
	0x1b, 0x4d, 0x1c, 0x4f, 0x74, 0xf5, 0x0e, 0xde, 0x97, 0x60, 0x5a, 0xb8, 0x05, 0xae, 0x73, 0xba,
	0x54, 0x7a, 0x96, 0xfa, 0x1a, 0xc1, 0x8c, 0x70, 0x17, 0x88, 0x1c, 0x92, 0x9a, 0x6a, 0xa0, 0xa7,
	0x6a, 0xcf, 0xd2, 0x8d, 0x53, 0x98, 0x15, 0xee, 0x80, 0x5b, 0x1c, 0xba, 0x23, 0x59, 0xb1, 0xc9,
	0x72, 0xc2, 0x3b, 0xe0, 0x6d, 0x0e, 0x19, 0xbd, 0xf6, 0x41, 0x0a, 0x9c, 0x0a, 0xad, 0x97, 0x15,
	0xa2, 0x93, 0xf0, 0xd5, 0x6a, 0x21, 0xa4, 0x20, 0x05, 0x4e, 0xdf, 0xff, 0xd7, 0x29, 0x1f, 0x4b,
	0x1d, 0xa2, 0x10, 0x4b, 0xdd, 0xee, 0x2e, 0x4b, 0x6f, 0x82, 0x6b, 0xdc, 0x4f, 0x28, 0xa8, 0x04,
	0x53, 0xc2, 0x3b, 0xdc, 0x51, 0x30, 0xc5, 0x81, 0xfc, 0x11, 0xfc, 0xca, 0x8c, 0x70, 0x37, 0xb0,
	0x6a, 0x97, 0xa8, 0x3e, 0x54, 0x47, 0xaa, 0x26, 0x5b, 0x48, 0x81, 0x7f, 0x3d, 0x12, 0xee, 0x70,
	0x57, 0xb4, 0xa7, 0x1b, 0x2f, 0x91, 0x8a, 0xc9, 0xfe, 0x06, 0x1f, 0x3d, 0x44, 0x1e, 0x99, 0xaa,
	0xa9, 0xe6, 0x00, 0x29, 0x25, 0xd3, 0x82, 0xdf, 0x9c, 0x24, 0x20, 0x2c, 0x6b, 0x0a, 0xfc, 0x56,
	0x12, 0xc2, 0x4d, 0x43, 0x81, 0x7f, 0x98, 0x84, 0x70, 0xcb, 0x1a, 0xc0, 0x6f, 0x27, 0x21, 0xdc,
	0xb6, 0x06, 0xf0, 0x8f, 0x92, 0x10, 0x3e, 0xb4, 0x06, 0xf0, 0x8f, 0x93, 0x10, 0xee, 0x58, 0x03,
	0xf8, 0x9d, 0x24, 0x84, 0xbb, 0xd6, 0x00, 0xfe, 0x49, 0x12, 0xc2, 0x47, 0xd6, 0x00, 0xfe, 0xe9,
	0x44, 0x58, 0x07, 0xef, 0x9c, 0xc5, 0xf0, 0x0d, 0x6b, 0x00, 0xbf, 0x9b, 0x88, 0xb2, 0x64, 0x0d,
	0xe0, 0xf7, 0x12, 0x51, 0x96, 0xad, 0x01, 0xfc, 0x7e, 0x22, 0xca, 0x4d, 0x6b, 0x00, 0x7f, 0x90,
	0x88, 0x12, 0x8b, 0xe7, 0x87, 0x89, 0x28, 0xb1, 0x7c, 0xfe, 0x2c, 0x11, 0x25, 0x16, 0xd0, 0x9f,
	0x4f, 0xee, 0xff, 0x53, 0x0a, 0xc0, 0xe0, 0x39, 0x4f, 0xb8, 0x01, 0x62, 0x4e, 0x7f, 0xf0, 0x2d,
	0xe1, 0x1a, 0xc8, 0x47, 0xe0, 0x1d, 0x64, 0x4d, 0xc6, 0xb4, 0x38, 0x29, 0x0a, 0x75, 0xdc, 0x59,
	0xd8, 0x37, 0x51, 0x8a, 0x86, 0x76, 0x68, 0xe8, 0x7d, 0x03, 0x99, 0x26, 0xcc, 0x70, 0x06, 0xa9,
	0xda, 0x05, 0x64, 0xb4, 0x32, 0x22, 0x8a, 0xc2, 0x76, 0x35, 0xb9, 0xfb, 0x7f, 0xe1, 0xf7, 0xcb,
	0x4e, 0x60, 0x1f, 0x72, 0x22, 0xa1, 0x90, 0x1f, 0xbe, 0x25, 0x14, 0xc1, 0x7d, 0x0e, 0x0d, 0xe6,
	0xa5, 0xd9, 0xd2, 0xad, 0xe7, 0xc8, 0xaa, 0x98, 0xa6, 0xda, 0xd7, 0x88, 0x87, 0xbe, 0x07, 0xee,
	0x70, 0xe8, 0x1b, 0xda, 0x13, 0x64, 0x9d, 0x20, 0xa4, 0x61, 0x7f, 0x68, 0xc2, 0x74, 0x0c, 0x29,
	0xa6, 0x88, 0xe5, 0x82, 0x4b, 0x5a, 0x91, 0x9e, 0xe9, 0x1a, 0xcc, 0xc6, 0x50, 0x3c, 0x21, 0x14,
	0x61, 0xb7, 0xec, 0x52, 0xb8, 0x6e, 0xf9, 0xfe, 0xf7, 0x56, 0xc1, 0xad, 0x33, 0x83, 0x65, 0xe1,
	0x3a, 0xe0, 0x87, 0xcb, 0xf0, 0xad, 0x38, 0xb8, 0x44, 0xeb, 0x64, 0x78, 0x70, 0x99, 0xde, 0x1c,
	0xf3, 0xe0, 0x4d, 0x5a, 0xa9, 0xc6, 0x83, 0xb7, 0x60, 0x36, 0x0e, 0xde, 0x86, 0xb9, 0x38, 0xf8,
	0x21, 0x9c, 0x8a, 0x83, 0x77, 0xe0, 0x74, 0x1c, 0xbc, 0x0b, 0x67, 0xe2, 0xe0, 0x47, 0x70, 0x16,
	0x5b, 0x8b, 0x03, 0x7f, 0xf1, 0xb8, 0xd2, 0x3c, 0x3c, 0xaa, 0xd7, 0xa4, 0x67, 0xf5, 0x4e, 0x57,
	0xda, 0x80, 0x20, 0x06, 0x2d, 0xc1, 0xb9, 0x18, 0xb4, 0x0c, 0xe7, 0x63, 0xd0, 0x4d, 0xb8, 0x10,
	0x83, 0x6e, 0xc1, 0xc5, 0x18, 0x74, 0x1b, 0x2e, 0xc5, 0xa0, 0x0f, 0x21, 0x8c, 0x41, 0x77, 0xe0,
	0x72, 0x0c, 0xba, 0x0b, 0x85, 0x18, 0xf4, 0x11, 0xbc, 0xe4, 0x63, 0x65, 0x80, 0x1b, 0x1b, 0x70,
	0x25, 0x0e, 0x2e, 0xc1, 0xd5, 0x38, 0xb8, 0x0c, 0x2f, 0xc7, 0xc1, 0x9b, 0xf0, 0x4a, 0x1c, 0xbc,
	0x05, 0xf3, 0xd1, 0x13, 0xaf, 0x57, 0x88, 0x18, 0xd7, 0x62, 0xd0, 0x12, 0x2c, 0xc4, 0xa0, 0x65,
	0x78, 0x35, 0x06, 0xdd, 0x84, 0xd7, 0x62, 0xd0, 0x2d, 0x78, 0x3d, 0x06, 0xdd, 0x86, 0x37, 0x62,
	0xd0, 0x87, 0xf0, 0xed, 0x18, 0x74, 0x07, 0xde, 0x8c, 0x41, 0x77, 0xe1, 0xad, 0x18, 0xf4, 0x11,
	0x14, 0xa3, 0x59, 0x49, 0xb9, 0xb1, 0x01, 0xdf, 0x89, 0x83, 0x4b, 0xf0, 0x76, 0x1c, 0x5c, 0x86,
	0x77, 0xe2, 0xe0, 0x4d, 0x78, 0x37, 0x0e, 0xde, 0x82, 0xef, 0x0a, 0x6b, 0x60, 0xd5, 0x81, 0xbb,
	0xf5, 0xca, 0x41, 0xf5, 0xf8, 0x90, 0xd6, 0xda, 0xad, 0x0b, 0x57, 0xc1, 0x95, 0x10, 0x44, 0xed,
	0x18, 0xde, 0xc3, 0x7b, 0x62, 0x64, 0x3f, 0x72, 0x8f, 0x08, 0xef, 0x63, 0x47, 0xcc, 0xe9, 0x4c,
	0x29, 0x3e, 0x25, 0xe4, 0xc1, 0x8a, 0x43, 0x51, 0x7f, 0x5a, 0x6f, 0x75, 0xc9, 0xcc, 0x36, 0xe0,
	0xa7, 0x39, 0x48, 0x09, 0x3e, 0xe0, 0x20, 0x65, 0x58, 0xe4, 0x20, 0x9b, 0xf0, 0x33, 0x1c, 0x64,
	0x0b, 0x6e, 0x70, 0x90, 0x6d, 0x58, 0xe2, 0x20, 0x0f, 0x61, 0x99, 0x83, 0xec, 0xc0, 0x4d, 0x0e,
	0xb2, 0x0b, 0xb7, 0x38, 0xc8, 0x23, 0xb8, 0xed, 0xe3, 0xbe, 0x67, 0xa5, 0x1b, 0xf0, 0x21, 0x0f,
	0x2a, 0xc1, 0x1d, 0x1e, 0x54, 0x86, 0xbb, 0x3c, 0x68, 0x13, 0x3e, 0xe2, 0x41, 0x5b, 0xf0, 0x31,
	0x0f, 0xda, 0x86, 0x9f, 0xe5, 0x41, 0x0f, 0xe1, 0xe7, 0x78, 0xd0, 0x0e, 0xfc, 0x3c, 0x0f, 0xda,
	0x85, 0xff, 0x8f, 0x07, 0x3d, 0x82, 0x5f, 0xe0, 0x40, 0xe5, 0x0d, 0xf8, 0xff, 0x79, 0x50, 0x09,
	0x56, 0x78, 0x50, 0x19, 0x3e, 0xe1, 0x41, 0x9b, 0xb0, 0xca, 0x83, 0xb6, 0x60, 0x8d, 0x07, 0x6d,
	0xc3, 0x3a, 0x0f, 0x7a, 0x08, 0xf7, 0x78, 0xd0, 0x0e, 0xdc, 0xe7, 0x41, 0xbb, 0xf0, 0x3d, 0x1e,
	0xf4, 0x08, 0x36, 0x38, 0xd0, 0xe6, 0x06, 0x7c, 0x9f, 0x07, 0x95, 0xe0, 0x07, 0x3c, 0xa8, 0x0c,
	0x9b, 0x3c, 0x68, 0x13, 0x1e, 0xf0, 0xa0, 0x2d, 0xd8, 0xe2, 0x41, 0xdb, 0xb0, 0xcd, 0x83, 0x1e,
	0xc2, 0x43, 0x1e, 0xb4, 0x03, 0xbf, 0xc8, 0x83, 0x76, 0xe1, 0x11, 0x0f, 0x7a, 0x04, 0x3b, 0x1c,
	0x68, 0x6b, 0x03, 0x76, 0x79, 0x50, 0x09, 0x1e, 0xf3, 0xa0, 0x32, 0x7c, 0xca, 0x83, 0x36, 0xe1,
	0x33, 0xe1, 0x12, 0x58, 0x72, 0xa0, 0x4e, 0xbb, 0xd9, 0x96, 0x36, 0xe0, 0x97, 0xc2, 0x8d, 0x25,
	0xf8, 0x3c, 0xdc, 0x58, 0x86, 0x1f, 0x86, 0x1b, 0x37, 0xe1, 0xaf, 0x84, 0x1b, 0xb7, 0xe0, 0xaf,
	0x86, 0x1b, 0xb7, 0xe1, 0xaf, 0x85, 0x1b, 0x1f, 0xc2, 0x5f, 0x0f, 0x37, 0xee, 0x40, 0xe9, 0x49,
	0xee, 0xbd, 0xd4, 0x57, 0x52, 0x6f, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x28, 0xbf, 0xf3,
	0xc9, 0x04, 0x53, 0x00, 0x00,
}
