// Code generated by protoc-gen-go.
// source: steammessages_gamenotifications.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package unified is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CGameNotifications_Variable struct {
	Key              *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Value            *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameNotifications_Variable) Reset()                    { *m = CGameNotifications_Variable{} }
func (m *CGameNotifications_Variable) String() string            { return proto.CompactTextString(m) }
func (*CGameNotifications_Variable) ProtoMessage()               {}
func (*CGameNotifications_Variable) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CGameNotifications_Variable) GetKey() string {
	if m != nil && m.Key != nil {
		return *m.Key
	}
	return ""
}

func (m *CGameNotifications_Variable) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

type CGameNotifications_LocalizedText struct {
	Token            *string                        `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Variables        []*CGameNotifications_Variable `protobuf:"bytes,2,rep,name=variables" json:"variables,omitempty"`
	RenderedText     *string                        `protobuf:"bytes,3,opt,name=rendered_text" json:"rendered_text,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CGameNotifications_LocalizedText) Reset()         { *m = CGameNotifications_LocalizedText{} }
func (m *CGameNotifications_LocalizedText) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_LocalizedText) ProtoMessage()    {}
func (*CGameNotifications_LocalizedText) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1}
}

func (m *CGameNotifications_LocalizedText) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *CGameNotifications_LocalizedText) GetVariables() []*CGameNotifications_Variable {
	if m != nil {
		return m.Variables
	}
	return nil
}

func (m *CGameNotifications_LocalizedText) GetRenderedText() string {
	if m != nil && m.RenderedText != nil {
		return *m.RenderedText
	}
	return ""
}

type CGameNotifications_UserStatus struct {
	Steamid          *uint64                           `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	State            *string                           `protobuf:"bytes,2,opt,name=state" json:"state,omitempty"`
	Title            *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Message          *CGameNotifications_LocalizedText `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CGameNotifications_UserStatus) Reset()                    { *m = CGameNotifications_UserStatus{} }
func (m *CGameNotifications_UserStatus) String() string            { return proto.CompactTextString(m) }
func (*CGameNotifications_UserStatus) ProtoMessage()               {}
func (*CGameNotifications_UserStatus) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CGameNotifications_UserStatus) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_UserStatus) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *CGameNotifications_UserStatus) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_UserStatus) GetMessage() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Message
	}
	return nil
}

type CGameNotifications_CreateSession_Request struct {
	Appid            *uint32                           `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	Context          *uint64                           `protobuf:"varint,2,opt,name=context" json:"context,omitempty"`
	Title            *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Users            []*CGameNotifications_UserStatus  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Steamid          *uint64                           `protobuf:"fixed64,5,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CGameNotifications_CreateSession_Request) Reset() {
	*m = CGameNotifications_CreateSession_Request{}
}
func (m *CGameNotifications_CreateSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_CreateSession_Request) ProtoMessage()    {}
func (*CGameNotifications_CreateSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *CGameNotifications_CreateSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_CreateSession_Request) GetContext() uint64 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *CGameNotifications_CreateSession_Request) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_CreateSession_Request) GetUsers() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CGameNotifications_CreateSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_CreateSession_Response struct {
	Sessionid        *uint64 `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameNotifications_CreateSession_Response) Reset() {
	*m = CGameNotifications_CreateSession_Response{}
}
func (m *CGameNotifications_CreateSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_CreateSession_Response) ProtoMessage()    {}
func (*CGameNotifications_CreateSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{4}
}

func (m *CGameNotifications_CreateSession_Response) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

type CGameNotifications_DeleteSession_Request struct {
	Sessionid        *uint64 `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Steamid          *uint64 `protobuf:"fixed64,3,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameNotifications_DeleteSession_Request) Reset() {
	*m = CGameNotifications_DeleteSession_Request{}
}
func (m *CGameNotifications_DeleteSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_DeleteSession_Request) ProtoMessage()    {}
func (*CGameNotifications_DeleteSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{5}
}

func (m *CGameNotifications_DeleteSession_Request) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_DeleteSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_DeleteSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_DeleteSession_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGameNotifications_DeleteSession_Response) Reset() {
	*m = CGameNotifications_DeleteSession_Response{}
}
func (m *CGameNotifications_DeleteSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_DeleteSession_Response) ProtoMessage()    {}
func (*CGameNotifications_DeleteSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6}
}

type CGameNotifications_UpdateSession_Request struct {
	Sessionid        *uint64                           `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid            *uint32                           `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Title            *CGameNotifications_LocalizedText `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Users            []*CGameNotifications_UserStatus  `protobuf:"bytes,4,rep,name=users" json:"users,omitempty"`
	Steamid          *uint64                           `protobuf:"fixed64,6,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CGameNotifications_UpdateSession_Request) Reset() {
	*m = CGameNotifications_UpdateSession_Request{}
}
func (m *CGameNotifications_UpdateSession_Request) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_UpdateSession_Request) ProtoMessage()    {}
func (*CGameNotifications_UpdateSession_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{7}
}

func (m *CGameNotifications_UpdateSession_Request) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_UpdateSession_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_UpdateSession_Request) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_UpdateSession_Request) GetUsers() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *CGameNotifications_UpdateSession_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CGameNotifications_UpdateSession_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGameNotifications_UpdateSession_Response) Reset() {
	*m = CGameNotifications_UpdateSession_Response{}
}
func (m *CGameNotifications_UpdateSession_Response) String() string { return proto.CompactTextString(m) }
func (*CGameNotifications_UpdateSession_Response) ProtoMessage()    {}
func (*CGameNotifications_UpdateSession_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{8}
}

type CGameNotifications_EnumerateSessions_Request struct {
	Appid                  *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	IncludeAllUserMessages *bool   `protobuf:"varint,3,opt,name=include_all_user_messages" json:"include_all_user_messages,omitempty"`
	IncludeAuthUserMessage *bool   `protobuf:"varint,4,opt,name=include_auth_user_message" json:"include_auth_user_message,omitempty"`
	Language               *string `protobuf:"bytes,5,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CGameNotifications_EnumerateSessions_Request) Reset() {
	*m = CGameNotifications_EnumerateSessions_Request{}
}
func (m *CGameNotifications_EnumerateSessions_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_EnumerateSessions_Request) ProtoMessage() {}
func (*CGameNotifications_EnumerateSessions_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{9}
}

func (m *CGameNotifications_EnumerateSessions_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_EnumerateSessions_Request) GetIncludeAllUserMessages() bool {
	if m != nil && m.IncludeAllUserMessages != nil {
		return *m.IncludeAllUserMessages
	}
	return false
}

func (m *CGameNotifications_EnumerateSessions_Request) GetIncludeAuthUserMessage() bool {
	if m != nil && m.IncludeAuthUserMessage != nil {
		return *m.IncludeAuthUserMessage
	}
	return false
}

func (m *CGameNotifications_EnumerateSessions_Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type CGameNotifications_Session struct {
	Sessionid        *uint64                           `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid            *uint64                           `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Context          *uint64                           `protobuf:"varint,3,opt,name=context" json:"context,omitempty"`
	Title            *CGameNotifications_LocalizedText `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	TimeCreated      *uint32                           `protobuf:"varint,5,opt,name=time_created" json:"time_created,omitempty"`
	TimeUpdated      *uint32                           `protobuf:"varint,6,opt,name=time_updated" json:"time_updated,omitempty"`
	UserStatus       []*CGameNotifications_UserStatus  `protobuf:"bytes,7,rep,name=user_status" json:"user_status,omitempty"`
	XXX_unrecognized []byte                            `json:"-"`
}

func (m *CGameNotifications_Session) Reset()                    { *m = CGameNotifications_Session{} }
func (m *CGameNotifications_Session) String() string            { return proto.CompactTextString(m) }
func (*CGameNotifications_Session) ProtoMessage()               {}
func (*CGameNotifications_Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CGameNotifications_Session) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_Session) GetAppid() uint64 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_Session) GetContext() uint64 {
	if m != nil && m.Context != nil {
		return *m.Context
	}
	return 0
}

func (m *CGameNotifications_Session) GetTitle() *CGameNotifications_LocalizedText {
	if m != nil {
		return m.Title
	}
	return nil
}

func (m *CGameNotifications_Session) GetTimeCreated() uint32 {
	if m != nil && m.TimeCreated != nil {
		return *m.TimeCreated
	}
	return 0
}

func (m *CGameNotifications_Session) GetTimeUpdated() uint32 {
	if m != nil && m.TimeUpdated != nil {
		return *m.TimeUpdated
	}
	return 0
}

func (m *CGameNotifications_Session) GetUserStatus() []*CGameNotifications_UserStatus {
	if m != nil {
		return m.UserStatus
	}
	return nil
}

type CGameNotifications_EnumerateSessions_Response struct {
	Sessions         []*CGameNotifications_Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CGameNotifications_EnumerateSessions_Response) Reset() {
	*m = CGameNotifications_EnumerateSessions_Response{}
}
func (m *CGameNotifications_EnumerateSessions_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_EnumerateSessions_Response) ProtoMessage() {}
func (*CGameNotifications_EnumerateSessions_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{11}
}

func (m *CGameNotifications_EnumerateSessions_Response) GetSessions() []*CGameNotifications_Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type CGameNotifications_GetSessionDetails_Request struct {
	Sessions         []*CGameNotifications_GetSessionDetails_Request_RequestedSession `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	Appid            *uint32                                                          `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	Language         *string                                                          `protobuf:"bytes,3,opt,name=language" json:"language,omitempty"`
	XXX_unrecognized []byte                                                           `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Request) Reset() {
	*m = CGameNotifications_GetSessionDetails_Request{}
}
func (m *CGameNotifications_GetSessionDetails_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Request) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12}
}

func (m *CGameNotifications_GetSessionDetails_Request) GetSessions() []*CGameNotifications_GetSessionDetails_Request_RequestedSession {
	if m != nil {
		return m.Sessions
	}
	return nil
}

func (m *CGameNotifications_GetSessionDetails_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_GetSessionDetails_Request) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

type CGameNotifications_GetSessionDetails_Request_RequestedSession struct {
	Sessionid              *uint64 `protobuf:"varint,1,opt,name=sessionid" json:"sessionid,omitempty"`
	IncludeAuthUserMessage *bool   `protobuf:"varint,3,opt,name=include_auth_user_message" json:"include_auth_user_message,omitempty"`
	XXX_unrecognized       []byte  `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) Reset() {
	*m = CGameNotifications_GetSessionDetails_Request_RequestedSession{}
}
func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Request_RequestedSession) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Request_RequestedSession) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{12, 0}
}

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_GetSessionDetails_Request_RequestedSession) GetIncludeAuthUserMessage() bool {
	if m != nil && m.IncludeAuthUserMessage != nil {
		return *m.IncludeAuthUserMessage
	}
	return false
}

type CGameNotifications_GetSessionDetails_Response struct {
	Sessions         []*CGameNotifications_Session `protobuf:"bytes,1,rep,name=sessions" json:"sessions,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *CGameNotifications_GetSessionDetails_Response) Reset() {
	*m = CGameNotifications_GetSessionDetails_Response{}
}
func (m *CGameNotifications_GetSessionDetails_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_GetSessionDetails_Response) ProtoMessage() {}
func (*CGameNotifications_GetSessionDetails_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{13}
}

func (m *CGameNotifications_GetSessionDetails_Response) GetSessions() []*CGameNotifications_Session {
	if m != nil {
		return m.Sessions
	}
	return nil
}

type GameNotificationSettings struct {
	Appid              *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	AllowNotifications *bool   `protobuf:"varint,2,opt,name=allow_notifications" json:"allow_notifications,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *GameNotificationSettings) Reset()                    { *m = GameNotificationSettings{} }
func (m *GameNotificationSettings) String() string            { return proto.CompactTextString(m) }
func (*GameNotificationSettings) ProtoMessage()               {}
func (*GameNotificationSettings) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *GameNotificationSettings) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *GameNotificationSettings) GetAllowNotifications() bool {
	if m != nil && m.AllowNotifications != nil {
		return *m.AllowNotifications
	}
	return false
}

type CGameNotifications_UpdateNotificationSettings_Request struct {
	GameNotificationSettings []*GameNotificationSettings `protobuf:"bytes,1,rep,name=game_notification_settings" json:"game_notification_settings,omitempty"`
	XXX_unrecognized         []byte                      `json:"-"`
}

func (m *CGameNotifications_UpdateNotificationSettings_Request) Reset() {
	*m = CGameNotifications_UpdateNotificationSettings_Request{}
}
func (m *CGameNotifications_UpdateNotificationSettings_Request) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_UpdateNotificationSettings_Request) ProtoMessage() {}
func (*CGameNotifications_UpdateNotificationSettings_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{15}
}

func (m *CGameNotifications_UpdateNotificationSettings_Request) GetGameNotificationSettings() []*GameNotificationSettings {
	if m != nil {
		return m.GameNotificationSettings
	}
	return nil
}

type CGameNotifications_UpdateNotificationSettings_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CGameNotifications_UpdateNotificationSettings_Response) Reset() {
	*m = CGameNotifications_UpdateNotificationSettings_Response{}
}
func (m *CGameNotifications_UpdateNotificationSettings_Response) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_UpdateNotificationSettings_Response) ProtoMessage() {}
func (*CGameNotifications_UpdateNotificationSettings_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{16}
}

type CGameNotifications_OnNotificationsRequested_Notification struct {
	Steamid          *uint64 `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Appid            *uint32 `protobuf:"varint,2,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CGameNotifications_OnNotificationsRequested_Notification) Reset() {
	*m = CGameNotifications_OnNotificationsRequested_Notification{}
}
func (m *CGameNotifications_OnNotificationsRequested_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_OnNotificationsRequested_Notification) ProtoMessage() {}
func (*CGameNotifications_OnNotificationsRequested_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{17}
}

func (m *CGameNotifications_OnNotificationsRequested_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_OnNotificationsRequested_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CGameNotifications_OnUserStatusChanged_Notification struct {
	Steamid          *uint64                        `protobuf:"fixed64,1,opt,name=steamid" json:"steamid,omitempty"`
	Sessionid        *uint64                        `protobuf:"varint,2,opt,name=sessionid" json:"sessionid,omitempty"`
	Appid            *uint32                        `protobuf:"varint,3,opt,name=appid" json:"appid,omitempty"`
	Status           *CGameNotifications_UserStatus `protobuf:"bytes,4,opt,name=status" json:"status,omitempty"`
	Removed          *bool                          `protobuf:"varint,5,opt,name=removed" json:"removed,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) Reset() {
	*m = CGameNotifications_OnUserStatusChanged_Notification{}
}
func (m *CGameNotifications_OnUserStatusChanged_Notification) String() string {
	return proto.CompactTextString(m)
}
func (*CGameNotifications_OnUserStatusChanged_Notification) ProtoMessage() {}
func (*CGameNotifications_OnUserStatusChanged_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{18}
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetSessionid() uint64 {
	if m != nil && m.Sessionid != nil {
		return *m.Sessionid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetStatus() *CGameNotifications_UserStatus {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CGameNotifications_OnUserStatusChanged_Notification) GetRemoved() bool {
	if m != nil && m.Removed != nil {
		return *m.Removed
	}
	return false
}

func init() {
	proto.RegisterType((*CGameNotifications_Variable)(nil), "CGameNotifications_Variable")
	proto.RegisterType((*CGameNotifications_LocalizedText)(nil), "CGameNotifications_LocalizedText")
	proto.RegisterType((*CGameNotifications_UserStatus)(nil), "CGameNotifications_UserStatus")
	proto.RegisterType((*CGameNotifications_CreateSession_Request)(nil), "CGameNotifications_CreateSession_Request")
	proto.RegisterType((*CGameNotifications_CreateSession_Response)(nil), "CGameNotifications_CreateSession_Response")
	proto.RegisterType((*CGameNotifications_DeleteSession_Request)(nil), "CGameNotifications_DeleteSession_Request")
	proto.RegisterType((*CGameNotifications_DeleteSession_Response)(nil), "CGameNotifications_DeleteSession_Response")
	proto.RegisterType((*CGameNotifications_UpdateSession_Request)(nil), "CGameNotifications_UpdateSession_Request")
	proto.RegisterType((*CGameNotifications_UpdateSession_Response)(nil), "CGameNotifications_UpdateSession_Response")
	proto.RegisterType((*CGameNotifications_EnumerateSessions_Request)(nil), "CGameNotifications_EnumerateSessions_Request")
	proto.RegisterType((*CGameNotifications_Session)(nil), "CGameNotifications_Session")
	proto.RegisterType((*CGameNotifications_EnumerateSessions_Response)(nil), "CGameNotifications_EnumerateSessions_Response")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Request)(nil), "CGameNotifications_GetSessionDetails_Request")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Request_RequestedSession)(nil), "CGameNotifications_GetSessionDetails_Request.RequestedSession")
	proto.RegisterType((*CGameNotifications_GetSessionDetails_Response)(nil), "CGameNotifications_GetSessionDetails_Response")
	proto.RegisterType((*GameNotificationSettings)(nil), "GameNotificationSettings")
	proto.RegisterType((*CGameNotifications_UpdateNotificationSettings_Request)(nil), "CGameNotifications_UpdateNotificationSettings_Request")
	proto.RegisterType((*CGameNotifications_UpdateNotificationSettings_Response)(nil), "CGameNotifications_UpdateNotificationSettings_Response")
	proto.RegisterType((*CGameNotifications_OnNotificationsRequested_Notification)(nil), "CGameNotifications_OnNotificationsRequested_Notification")
	proto.RegisterType((*CGameNotifications_OnUserStatusChanged_Notification)(nil), "CGameNotifications_OnUserStatusChanged_Notification")
}

var fileDescriptor0 = []byte{
	// 2262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xd4, 0x59, 0xcd, 0x8f, 0x1c, 0x47,
	0x15, 0x57, 0xef, 0xec, 0x7a, 0xd7, 0x65, 0x2c, 0x91, 0x0e, 0x12, 0x93, 0xb1, 0xe3, 0xb4, 0x3b,
	0x38, 0xde, 0x8d, 0x77, 0x6b, 0xf1, 0x86, 0xf8, 0x03, 0x48, 0x84, 0x7b, 0x1d, 0x99, 0x48, 0x66,
	0x93, 0x78, 0x9d, 0x60, 0x21, 0xc4, 0xa8, 0xa6, 0xbb, 0x66, 0xa6, 0xb3, 0x3d, 0xdd, 0x43, 0x57,
	0xf5, 0x6e, 0x36, 0x07, 0x22, 0x99, 0xaf, 0x13, 0x04, 0x91, 0x44, 0x80, 0x90, 0x22, 0x21, 0xa1,
	0x88, 0x03, 0x17, 0x0e, 0x39, 0x82, 0x90, 0x22, 0x71, 0xe4, 0x98, 0x2b, 0x9c, 0xf9, 0x2b, 0x78,
	0xf5, 0xd9, 0xdd, 0x33, 0x3d, 0xde, 0x9d, 0x45, 0x22, 0xca, 0xc5, 0xf2, 0x74, 0xd5, 0x7b, 0xef,
	0x57, 0xef, 0xfd, 0xde, 0x47, 0xd5, 0xa2, 0xab, 0x8c, 0x53, 0x32, 0x1a, 0x51, 0xc6, 0xc8, 0x80,
	0xb2, 0xee, 0x80, 0x8c, 0x68, 0x9a, 0xf1, 0xb8, 0x1f, 0x87, 0x84, 0xc7, 0x59, 0xca, 0xb0, 0x5c,
	0x0f, 0x93, 0x98, 0xa6, 0x1c, 0x8f, 0xf3, 0x8c, 0x67, 0x1d, 0x6f, 0x90, 0x65, 0x83, 0x84, 0x6e,
	0xca, 0x5f, 0xbd, 0xa2, 0xbf, 0x19, 0x51, 0x16, 0xe6, 0xf1, 0x98, 0x67, 0xb9, 0xde, 0xb1, 0x5e,
	0x57, 0x5a, 0xa4, 0xa0, 0x8f, 0x46, 0xdd, 0x1e, 0x61, 0x74, 0x5a, 0x9f, 0xff, 0xef, 0x05, 0x74,
	0x6e, 0xfb, 0x0e, 0x18, 0xde, 0xa9, 0x1a, 0xee, 0xbe, 0x41, 0xf2, 0x98, 0xf4, 0x12, 0xea, 0x7e,
	0xe4, 0xa0, 0xd6, 0x1e, 0x3d, 0x6c, 0x3b, 0x9e, 0xb3, 0x7a, 0x3a, 0xf8, 0xad, 0xf3, 0xf0, 0xe3,
	0xf6, 0x7b, 0xce, 0xfd, 0x21, 0xf5, 0x52, 0x90, 0xf1, 0xb2, 0xbe, 0xc7, 0xe1, 0xff, 0xfb, 0x7a,
	0xb7, 0x17, 0xa7, 0xf2, 0x77, 0x92, 0x85, 0x24, 0x89, 0xdf, 0xa6, 0x91, 0xc7, 0xe9, 0x5b, 0xdc,
	0xdb, 0xd8, 0xf0, 0x48, 0x7a, 0x78, 0x30, 0xa4, 0x39, 0x85, 0x65, 0xc2, 0xbd, 0x4b, 0x46, 0x40,
	0x28, 0xb9, 0xe4, 0xc5, 0xcc, 0xeb, 0x67, 0x45, 0x1a, 0x79, 0x07, 0x31, 0x1f, 0x6a, 0x15, 0x52,
	0x30, 0xe6, 0xf0, 0x29, 0x49, 0xbc, 0x1e, 0xf5, 0x58, 0xd1, 0x63, 0x3c, 0xe6, 0x45, 0x44, 0xd5,
	0x36, 0xb9, 0x69, 0x10, 0xef, 0xd3, 0x14, 0xac, 0x27, 0x05, 0x75, 0x7f, 0xe3, 0xa0, 0x25, 0xf9,
	0xbf, 0xf6, 0x82, 0x84, 0xfa, 0x73, 0x01, 0xf5, 0xa1, 0x84, 0x2a, 0x3f, 0x4f, 0x61, 0xe5, 0x99,
	0x55, 0xca, 0x67, 0x21, 0x87, 0xaf, 0xe3, 0x84, 0x84, 0x56, 0xd8, 0x18, 0x54, 0x2a, 0xb0, 0xe7,
	0x6d, 0x93, 0x14, 0x50, 0x32, 0x9a, 0xf4, 0x05, 0x48, 0x62, 0xe4, 0xa5, 0x17, 0xc1, 0xc2, 0x1e,
	0x4d, 0xb1, 0xff, 0xd3, 0x16, 0xf2, 0x1a, 0x5c, 0x7c, 0xd7, 0x98, 0xba, 0x0f, 0x96, 0xdc, 0x6f,
	0xa3, 0x25, 0xb9, 0x5d, 0x3b, 0xfa, 0x26, 0x80, 0x7f, 0xfe, 0x56, 0x83, 0x3a, 0xe5, 0xc0, 0x11,
	0x19, 0x33, 0x71, 0x00, 0x81, 0x09, 0x08, 0x10, 0xe7, 0x00, 0x98, 0xf1, 0x3c, 0x4e, 0x07, 0xd8,
	0xfd, 0x85, 0x83, 0x4e, 0x1b, 0x84, 0x0c, 0x9c, 0xd1, 0x5a, 0x3d, 0xb3, 0x75, 0x1e, 0x3f, 0x22,
	0xc6, 0xc1, 0xf7, 0xc1, 0xd8, 0x03, 0x30, 0x16, 0x33, 0x2e, 0x0e, 0x6a, 0x85, 0x95, 0xe3, 0xd8,
	0xb4, 0xa7, 0x20, 0x9a, 0x95, 0x5d, 0x2a, 0x76, 0x53, 0x0e, 0x34, 0x78, 0x7e, 0xe6, 0xa0, 0xb3,
	0x39, 0x4d, 0x23, 0x88, 0x7e, 0xd4, 0x15, 0x5e, 0x6d, 0xb7, 0xe4, 0x11, 0x33, 0xb0, 0xba, 0x27,
	0xce, 0xee, 0x99, 0x55, 0xa3, 0x23, 0xa7, 0x3f, 0x04, 0xb3, 0x1c, 0x3e, 0x24, 0x24, 0x1d, 0x14,
	0x40, 0xe3, 0x75, 0x2f, 0xcc, 0x46, 0xe3, 0x84, 0x82, 0x79, 0x19, 0x7c, 0x1b, 0x44, 0x8b, 0x4b,
	0x9c, 0x68, 0xdd, 0x8b, 0xfb, 0x22, 0x06, 0x5a, 0xc8, 0x3b, 0x20, 0xcc, 0x63, 0x63, 0x1a, 0xca,
	0x04, 0xc0, 0xfe, 0x07, 0x8b, 0xe8, 0xc9, 0x06, 0x37, 0xbc, 0xce, 0x68, 0xbe, 0xcb, 0x09, 0x2f,
	0x98, 0x7b, 0x15, 0x2d, 0xcb, 0x0c, 0x89, 0x23, 0x19, 0x86, 0x53, 0x81, 0x07, 0x18, 0xcf, 0x0b,
	0x0a, 0x69, 0x35, 0xa1, 0x57, 0xc0, 0xee, 0xcb, 0xa0, 0x56, 0x6d, 0xc3, 0xee, 0x1f, 0x81, 0x76,
	0x0c, 0xa4, 0x0d, 0xed, 0xde, 0x17, 0xb4, 0x7b, 0x57, 0xd2, 0xce, 0x6e, 0x85, 0x55, 0xa0, 0x4a,
	0x4e, 0x49, 0x74, 0x28, 0x72, 0x81, 0xeb, 0x35, 0xc1, 0x7b, 0xf5, 0x11, 0x1c, 0x0c, 0x34, 0x3b,
	0x84, 0x4d, 0x07, 0x24, 0xe6, 0xe0, 0x35, 0xb1, 0x4d, 0xa8, 0x10, 0x15, 0x41, 0x6c, 0x33, 0x9f,
	0x33, 0xe1, 0x7b, 0x8f, 0x84, 0x92, 0x0f, 0xfd, 0x3c, 0x1b, 0x59, 0x65, 0xd8, 0x7a, 0x28, 0x5a,
	0x57, 0x54, 0xd5, 0xa2, 0xd9, 0x3e, 0x2c, 0xba, 0x3f, 0x01, 0x98, 0xe0, 0xa7, 0x84, 0x4a, 0xe7,
	0x9f, 0xd9, 0xba, 0x88, 0x8f, 0x62, 0x64, 0x70, 0x0f, 0x0e, 0xb2, 0x73, 0x5f, 0xc8, 0x18, 0xf6,
	0x33, 0xa8, 0x29, 0x8a, 0x88, 0x5e, 0x14, 0x33, 0x81, 0x58, 0x71, 0x10, 0xac, 0xa8, 0xf3, 0xc8,
	0xf0, 0xc5, 0xb9, 0x65, 0x92, 0x00, 0xba, 0x6f, 0xe5, 0x18, 0x76, 0x7f, 0xed, 0xa0, 0x65, 0x5d,
	0x99, 0xda, 0x8b, 0xc7, 0x05, 0xf2, 0x03, 0x00, 0xf2, 0xbd, 0xdd, 0xa2, 0xc7, 0xe7, 0xc1, 0x22,
	0xff, 0x29, 0xeb, 0xc9, 0x23, 0x40, 0xf9, 0xef, 0x2d, 0xa1, 0xd5, 0x06, 0x10, 0xdb, 0x10, 0x1b,
	0x4e, 0x77, 0xd5, 0xb6, 0xee, 0x3d, 0xc5, 0x49, 0xf7, 0x3a, 0x5a, 0x22, 0xe3, 0xb1, 0x26, 0xc8,
	0xd9, 0x60, 0x15, 0xb0, 0x7d, 0x45, 0x44, 0x4a, 0x7e, 0x14, 0x10, 0x42, 0x29, 0x56, 0xc3, 0xd8,
	0x87, 0xda, 0xec, 0xbe, 0x83, 0x96, 0xc3, 0x2c, 0x95, 0xfc, 0x17, 0x4c, 0x59, 0x0c, 0x52, 0x10,
	0x7d, 0x53, 0x98, 0xdd, 0xb0, 0x1c, 0xf5, 0xf4, 0x0e, 0x5d, 0xb1, 0x6c, 0x18, 0x43, 0x08, 0x3a,
	0x1c, 0x48, 0xea, 0x27, 0x8c, 0x65, 0x61, 0x3c, 0x69, 0x42, 0x66, 0x05, 0xcb, 0x44, 0x49, 0xee,
	0xbd, 0x49, 0x43, 0x2e, 0x98, 0xa2, 0x8e, 0xdd, 0x23, 0x21, 0x94, 0x0d, 0x60, 0xea, 0x8f, 0xe7,
	0xa7, 0xc0, 0x6b, 0x00, 0xf1, 0x3b, 0xe2, 0x74, 0xb3, 0x5c, 0x0f, 0x35, 0x4f, 0x7b, 0x9f, 0xda,
	0xea, 0x4d, 0x49, 0x38, 0x34, 0xdc, 0x37, 0x3e, 0x2f, 0x19, 0x40, 0xd0, 0x92, 0x58, 0x63, 0x10,
	0x7e, 0x51, 0x98, 0x2e, 0xe0, 0x47, 0x66, 0x64, 0xb0, 0x05, 0x08, 0xb0, 0x40, 0x10, 0xa7, 0x90,
	0x01, 0x24, 0x51, 0xd9, 0x24, 0xc3, 0x08, 0x7d, 0x41, 0x6a, 0x32, 0x55, 0x43, 0xdb, 0xc0, 0xee,
	0x27, 0x4e, 0x99, 0xc6, 0x4b, 0x32, 0x8d, 0xff, 0x22, 0x92, 0xf2, 0xcf, 0xce, 0xea, 0x2b, 0x63,
	0x61, 0x80, 0x24, 0x6b, 0x26, 0x7f, 0xc5, 0x19, 0x46, 0x64, 0x8f, 0x56, 0xcb, 0x8e, 0x70, 0x5d,
	0x8f, 0x0e, 0x09, 0x94, 0x74, 0x30, 0x03, 0x89, 0x08, 0x45, 0xc5, 0x46, 0x68, 0xbd, 0xcc, 0xde,
	0x51, 0x01, 0x7b, 0x7b, 0x74, 0xc2, 0x3c, 0xe4, 0x67, 0x54, 0xc1, 0xd6, 0xa3, 0x22, 0x6d, 0x49,
	0x14, 0xa9, 0xe0, 0x55, 0x37, 0x1a, 0xf9, 0x7e, 0x0e, 0xed, 0x38, 0x62, 0x65, 0x57, 0x93, 0xe9,
	0xec, 0xc7, 0x68, 0xed, 0x18, 0xa4, 0x64, 0x63, 0xf8, 0x4a, 0xdd, 0x6f, 0xa2, 0xd3, 0x5a, 0xad,
	0x66, 0xe6, 0x62, 0xb0, 0x06, 0x47, 0xbe, 0x74, 0xbf, 0xb4, 0x07, 0x87, 0xd5, 0xf1, 0x53, 0x0c,
	0x8d, 0xac, 0xc3, 0xfc, 0x77, 0x17, 0x1a, 0x13, 0xe0, 0x36, 0x15, 0xe5, 0x64, 0x32, 0x01, 0x36,
	0xa7, 0x4d, 0x9d, 0x07, 0x53, 0xed, 0xba, 0x29, 0x91, 0x96, 0x52, 0x1c, 0xbb, 0xd7, 0x4c, 0xc6,
	0x2c, 0xc8, 0x8c, 0xb9, 0x0c, 0x9b, 0x9f, 0x2e, 0x33, 0xa6, 0x21, 0x9d, 0xb5, 0xdc, 0xdb, 0x65,
	0x14, 0x5b, 0x32, 0x8a, 0x31, 0x48, 0xd2, 0xff, 0x47, 0x0c, 0xb1, 0x7f, 0xa5, 0xd1, 0xf9, 0x93,
	0x0e, 0x51, 0xce, 0xf7, 0xff, 0xda, 0x5c, 0x3f, 0x5e, 0x1f, 0x47, 0xe4, 0x7f, 0x70, 0x5f, 0x21,
	0xc5, 0xe7, 0x77, 0x9f, 0x91, 0xfb, 0xd5, 0xfc, 0xe9, 0x2e, 0x0b, 0x6d, 0xc5, 0xc1, 0x72, 0xcc,
	0xa3, 0x07, 0x8d, 0xd9, 0x0f, 0xbd, 0xea, 0xe5, 0xbe, 0x07, 0xd3, 0xea, 0xa4, 0x5f, 0xd5, 0x66,
	0x39, 0xb6, 0x89, 0x55, 0x70, 0x6e, 0x38, 0x84, 0x86, 0x0c, 0x0d, 0xd8, 0xfd, 0xa7, 0x33, 0x5f,
	0xf2, 0x7f, 0x28, 0xd2, 0xf6, 0x77, 0xd5, 0xb4, 0x2d, 0x87, 0x14, 0x95, 0x5e, 0x07, 0xc3, 0x8c,
	0x51, 0x5d, 0x13, 0xcc, 0xa4, 0xa8, 0x1c, 0x20, 0x7d, 0x98, 0xd3, 0x7e, 0x22, 0x8a, 0x61, 0x39,
	0xba, 0xe9, 0x66, 0xfc, 0x72, 0xdf, 0x72, 0x80, 0x79, 0x04, 0xc6, 0x52, 0x01, 0x95, 0x24, 0xaa,
	0x1b, 0xd7, 0xc9, 0x20, 0x4f, 0x75, 0x68, 0xb5, 0xdb, 0x54, 0x8e, 0x79, 0xbd, 0xd2, 0x9c, 0xfa,
	0xdc, 0x56, 0x9a, 0x66, 0xb2, 0x4f, 0xd2, 0x57, 0x93, 0xfd, 0x0f, 0x8b, 0x68, 0xbd, 0x61, 0xf7,
	0x4b, 0x69, 0x31, 0xa2, 0x79, 0x29, 0xc0, 0x2c, 0xe1, 0x7f, 0x54, 0x6f, 0x98, 0x6a, 0xea, 0x9b,
	0x24, 0xbb, 0x71, 0x48, 0x44, 0x39, 0x89, 0x13, 0x26, 0x3b, 0xa6, 0x67, 0x7c, 0x88, 0x1b, 0x98,
	0x26, 0xce, 0xcd, 0x2b, 0x33, 0x96, 0xb6, 0x6a, 0xc3, 0x94, 0x53, 0x5e, 0xe4, 0xa9, 0x20, 0xdd,
	0x2f, 0x1d, 0xf4, 0x44, 0x9c, 0x86, 0x09, 0xdc, 0x1c, 0xba, 0x20, 0xd5, 0x15, 0x12, 0x5d, 0x73,
	0x3b, 0x92, 0xb9, 0xb1, 0x12, 0xec, 0x01, 0xa8, 0x41, 0x25, 0x66, 0x41, 0x96, 0x25, 0x14, 0x7a,
	0x2e, 0xc0, 0xa1, 0xf9, 0x08, 0x5a, 0x0f, 0x78, 0x16, 0xae, 0x2f, 0x60, 0x30, 0x97, 0x56, 0xb5,
	0xb8, 0x80, 0x59, 0x89, 0x00, 0x1b, 0x66, 0x45, 0x12, 0xa9, 0x40, 0x49, 0x7b, 0x11, 0xf6, 0x6e,
	0xd3, 0x3e, 0x29, 0x12, 0x2e, 0x67, 0xe8, 0x3e, 0x49, 0xe0, 0x0a, 0xe6, 0xfe, 0xbe, 0x0a, 0xa8,
	0xe0, 0xc3, 0x1a, 0x22, 0x39, 0x15, 0xad, 0x04, 0x6f, 0x01, 0x20, 0x7e, 0x42, 0x40, 0xe2, 0xb7,
	0xd0, 0x0b, 0x77, 0x3c, 0x11, 0x1e, 0xa0, 0x83, 0x24, 0xd1, 0x31, 0xd1, 0x05, 0x68, 0xc5, 0xcc,
	0xcf, 0xb2, 0x79, 0x9e, 0x0e, 0xbe, 0x0a, 0x58, 0xd6, 0x2b, 0x58, 0xee, 0x9a, 0xf1, 0x1a, 0x84,
	0xcc, 0xb4, 0x5f, 0xb9, 0xb2, 0x41, 0xf5, 0xfc, 0x64, 0x11, 0x75, 0x1a, 0x38, 0xa2, 0xa9, 0x01,
	0x15, 0x6d, 0xaa, 0x04, 0x3e, 0x0d, 0x36, 0x9e, 0xaa, 0xb3, 0x42, 0x1d, 0x25, 0x66, 0x65, 0x5f,
	0xdf, 0xa8, 0x56, 0xc2, 0xc5, 0xe0, 0x02, 0xc8, 0x74, 0xca, 0x4a, 0x68, 0x8e, 0x6e, 0xb7, 0x57,
	0x06, 0xae, 0xd6, 0x67, 0x32, 0x70, 0x3d, 0x30, 0x05, 0xf8, 0xd8, 0x93, 0xee, 0x33, 0x80, 0xd0,
	0x17, 0x47, 0x0a, 0x8b, 0x1c, 0x2e, 0x45, 0x5c, 0x17, 0xd3, 0xa9, 0xa3, 0x7d, 0x03, 0x7d, 0x81,
	0xc7, 0x23, 0xda, 0xd5, 0x9d, 0x5c, 0x06, 0xea, 0x6c, 0x70, 0x09, 0xa4, 0x2f, 0xaa, 0x69, 0x6d,
	0x34, 0x01, 0x16, 0x2e, 0x42, 0x7a, 0x2f, 0x76, 0xbf, 0xa5, 0x85, 0x75, 0x9d, 0x94, 0x85, 0xeb,
	0x6c, 0xf0, 0x2c, 0x08, 0x3f, 0x23, 0x84, 0x13, 0xc2, 0x78, 0xb3, 0x06, 0x2d, 0x80, 0xdd, 0x08,
	0x9d, 0x91, 0x9c, 0x65, 0xb2, 0x4c, 0xb7, 0x97, 0x8f, 0x55, 0xcc, 0x37, 0xc1, 0xc0, 0x15, 0x19,
	0x62, 0xf9, 0xdb, 0x8c, 0x70, 0x65, 0x19, 0x9e, 0xec, 0xc1, 0x0f, 0x1d, 0xb4, 0x71, 0xcc, 0x4a,
	0xa3, 0xa7, 0xa0, 0xd7, 0xd0, 0x8a, 0x29, 0x04, 0xc0, 0x2b, 0x01, 0xea, 0x1c, 0x9e, 0xcd, 0xc3,
	0xc0, 0x07, 0x44, 0x17, 0xca, 0x8e, 0xd2, 0x50, 0x4e, 0xb0, 0xff, 0x69, 0xab, 0xb1, 0xdc, 0xdd,
	0xa1, 0x5c, 0x6b, 0xb9, 0xad, 0x2a, 0x96, 0x2d, 0x77, 0xaf, 0x4e, 0x61, 0x78, 0x11, 0xcf, 0xa3,
	0x00, 0xdf, 0x33, 0x97, 0x5f, 0x93, 0x2e, 0xb8, 0x3e, 0x00, 0x3c, 0x05, 0xa8, 0xcf, 0xcd, 0xa4,
	0x3d, 0x4c, 0xd8, 0xd7, 0x2b, 0x19, 0xac, 0x6e, 0xda, 0x92, 0x18, 0x47, 0xa6, 0x6d, 0xe7, 0x3f,
	0x0e, 0xfa, 0xe2, 0x94, 0xf5, 0x1b, 0xd3, 0xc9, 0x6a, 0x79, 0x56, 0x2b, 0xe1, 0x03, 0x5a, 0x2f,
	0xdf, 0x47, 0xd4, 0xb9, 0xd6, 0x67, 0x5b, 0xe7, 0xfc, 0x77, 0x1a, 0xc9, 0xd5, 0x14, 0x16, 0x4d,
	0xae, 0x9d, 0xf9, 0xc8, 0x65, 0xc3, 0x64, 0x7c, 0x32, 0x31, 0x3e, 0xf9, 0x7f, 0x72, 0x50, 0x7b,
	0x52, 0x7c, 0x97, 0x72, 0x71, 0xcd, 0x67, 0x27, 0xbf, 0x65, 0xee, 0xa2, 0xc7, 0x21, 0xab, 0xb2,
	0x83, 0x6e, 0xed, 0x1d, 0x51, 0x52, 0x67, 0x25, 0xb8, 0x06, 0x6a, 0xb6, 0xbe, 0x5b, 0x71, 0xa7,
	0x74, 0x98, 0xdc, 0xcf, 0xbc, 0xaa, 0x40, 0x59, 0x7c, 0xc1, 0x20, 0xf6, 0xf7, 0xd1, 0xf3, 0x33,
	0x07, 0x84, 0x26, 0xf8, 0x36, 0x19, 0x5e, 0x40, 0x1d, 0x51, 0x4e, 0x6b, 0x60, 0xba, 0x4c, 0xef,
	0xd2, 0x5e, 0x7c, 0x02, 0xcf, 0xf2, 0x82, 0x7f, 0x03, 0x5d, 0x9b, 0xd7, 0xae, 0x9e, 0x52, 0xfe,
	0xe1, 0xa0, 0x1b, 0x0d, 0xa2, 0xaf, 0xa4, 0xb5, 0xdf, 0x96, 0xec, 0xdd, 0xea, 0x67, 0x88, 0xf4,
	0xc4, 0x2b, 0xd0, 0x0b, 0xe0, 0xb7, 0x9b, 0x66, 0x8e, 0xab, 0x54, 0x0a, 0x31, 0x7e, 0xd6, 0xfc,
	0x06, 0xf3, 0x87, 0x78, 0xe3, 0x2c, 0xdf, 0xaf, 0x64, 0x4c, 0xbe, 0x5e, 0x4f, 0xe0, 0x2b, 0xa0,
	0xed, 0x72, 0x25, 0x98, 0xe2, 0x3d, 0xaf, 0x94, 0xa8, 0xbf, 0xff, 0xfa, 0x7f, 0x6b, 0xa1, 0xe7,
	0x1a, 0x0f, 0x52, 0x56, 0xd6, 0x6d, 0x35, 0x5e, 0xd7, 0xcf, 0xf0, 0xe2, 0xe4, 0x19, 0x36, 0xc0,
	0xea, 0xda, 0x8c, 0x33, 0x30, 0x5b, 0x94, 0xed, 0xa8, 0xfe, 0xa0, 0x9a, 0xf6, 0xaa, 0xdf, 0xbe,
	0x04, 0x1a, 0x6e, 0x35, 0x5e, 0x28, 0x6d, 0x93, 0xd0, 0x2f, 0xbc, 0xb5, 0xa7, 0xaf, 0x82, 0xa9,
	0xf6, 0x63, 0x34, 0xdf, 0x35, 0xde, 0x68, 0x49, 0x6f, 0x48, 0xdf, 0xce, 0xbc, 0xcf, 0xcc, 0xd2,
	0x68, 0xb5, 0xbd, 0x81, 0x4e, 0xe9, 0x2e, 0xa4, 0x9a, 0xec, 0x51, 0x5d, 0x48, 0x76, 0xd8, 0x4a,
	0xc1, 0xd9, 0x81, 0xeb, 0x4d, 0xd9, 0x90, 0xec, 0x4c, 0xec, 0xde, 0x41, 0xcb, 0x39, 0x1d, 0x65,
	0xfb, 0xba, 0xb9, 0xea, 0xdc, 0xa9, 0x08, 0x0a, 0x9d, 0xde, 0x90, 0x88, 0xb9, 0x1b, 0xae, 0x15,
	0x7a, 0x6f, 0xf9, 0x24, 0x67, 0xd2, 0x7c, 0xeb, 0xa3, 0x15, 0xf4, 0xd8, 0x14, 0x22, 0xf1, 0x46,
	0xfb, 0x98, 0xd0, 0x50, 0xbb, 0xce, 0xbb, 0x6b, 0xf8, 0xb8, 0xcf, 0x50, 0x9d, 0x67, 0xf1, 0xb1,
	0x1f, 0x07, 0xfc, 0x8b, 0x00, 0xfd, 0x49, 0xb5, 0xc6, 0xe4, 0xf3, 0x21, 0x3b, 0x4c, 0x43, 0x35,
	0xe7, 0x68, 0x98, 0x16, 0x4f, 0xed, 0x86, 0xdb, 0x8c, 0xa7, 0xf1, 0x55, 0xa0, 0x19, 0xcf, 0x8c,
	0xfb, 0xb2, 0xc4, 0xa3, 0xd6, 0x8e, 0xc2, 0x53, 0xbb, 0x84, 0x34, 0xe3, 0x69, 0xbc, 0x66, 0x37,
	0xe3, 0x99, 0x71, 0xa5, 0x91, 0x78, 0xd4, 0xda, 0x2c, 0x3c, 0xef, 0x03, 0x9e, 0xa9, 0xc1, 0xc3,
	0xdd, 0xc0, 0xf3, 0xdc, 0x84, 0x3a, 0x18, 0xcf, 0x35, 0xce, 0xf8, 0xf2, 0xf1, 0xd9, 0xae, 0x03,
	0xb4, 0xc9, 0xf1, 0xc4, 0xfd, 0x10, 0x60, 0x4d, 0xb5, 0xac, 0x66, 0x58, 0x33, 0x07, 0x8e, 0x66,
	0x58, 0xb3, 0x1b, 0xa1, 0x2f, 0x27, 0x45, 0x58, 0xd7, 0x7f, 0x7c, 0xb0, 0x1d, 0x1f, 0xf0, 0xd9,
	0x57, 0x72, 0xe3, 0xb7, 0x4f, 0x1d, 0xd4, 0x99, 0x5d, 0xaf, 0xdd, 0x6b, 0xf8, 0x44, 0x7d, 0xa5,
	0x73, 0x1d, 0x9f, 0xb0, 0x2f, 0xdc, 0x01, 0xec, 0xdb, 0x26, 0xd4, 0x66, 0xb0, 0x20, 0xb5, 0x3e,
	0x28, 0xe3, 0x5e, 0x2f, 0xea, 0x13, 0x87, 0x83, 0x4a, 0xd5, 0x79, 0x15, 0x14, 0xdd, 0xbd, 0x05,
	0xe7, 0xcc, 0xf7, 0xe3, 0x50, 0xcd, 0x23, 0xfd, 0x22, 0x0d, 0xd5, 0xfe, 0x9c, 0x26, 0xe6, 0x05,
	0x42, 0x0e, 0x29, 0x82, 0x4f, 0x79, 0x96, 0x66, 0x45, 0x83, 0x76, 0xa9, 0x02, 0x2a, 0xce, 0xd6,
	0xbf, 0x16, 0xd0, 0x97, 0xa7, 0x0e, 0xb5, 0x2d, 0xff, 0x54, 0xe7, 0x7e, 0x00, 0xb3, 0xc2, 0xac,
	0xde, 0xe5, 0xde, 0xc4, 0x27, 0xed, 0x74, 0x9d, 0x33, 0x78, 0x27, 0xb3, 0xbe, 0xb9, 0x0a, 0x47,
	0xda, 0xd0, 0x1b, 0x99, 0x6a, 0x4b, 0xb6, 0x49, 0x64, 0x63, 0x31, 0x22, 0xf2, 0x89, 0x6e, 0x27,
	0xd2, 0xf4, 0xf1, 0x86, 0x56, 0xe4, 0x7e, 0x0d, 0x9f, 0xa0, 0x67, 0xd5, 0xd1, 0x3c, 0x07, 0x68,
	0x36, 0xab, 0xcb, 0x75, 0x44, 0x65, 0x2b, 0x18, 0x96, 0xcd, 0xa5, 0x23, 0x5e, 0xd2, 0xbe, 0xa4,
	0x7c, 0x56, 0x47, 0xfa, 0xf7, 0x8f, 0xdb, 0x0b, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xc8, 0x6c,
	0xa7, 0x4e, 0x6e, 0x1d, 0x00, 0x00,
}
