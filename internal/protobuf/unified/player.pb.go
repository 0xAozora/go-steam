// Code generated by protoc-gen-go.
// source: steammessages_player.steamclient.proto
// DO NOT EDIT!

package unified

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package unified is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type CPlayer_GetGameBadgeLevels_Request struct {
	Appid            *uint32 `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Request) Reset()         { *m = CPlayer_GetGameBadgeLevels_Request{} }
func (m *CPlayer_GetGameBadgeLevels_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Request) ProtoMessage()    {}
func (*CPlayer_GetGameBadgeLevels_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0}
}

func (m *CPlayer_GetGameBadgeLevels_Request) GetAppid() uint32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

type CPlayer_GetGameBadgeLevels_Response struct {
	PlayerLevel      *uint32                                      `protobuf:"varint,1,opt,name=player_level" json:"player_level,omitempty"`
	Badges           []*CPlayer_GetGameBadgeLevels_Response_Badge `protobuf:"bytes,2,rep,name=badges" json:"badges,omitempty"`
	XXX_unrecognized []byte                                       `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Response) Reset()         { *m = CPlayer_GetGameBadgeLevels_Response{} }
func (m *CPlayer_GetGameBadgeLevels_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Response) ProtoMessage()    {}
func (*CPlayer_GetGameBadgeLevels_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1}
}

func (m *CPlayer_GetGameBadgeLevels_Response) GetPlayerLevel() uint32 {
	if m != nil && m.PlayerLevel != nil {
		return *m.PlayerLevel
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response) GetBadges() []*CPlayer_GetGameBadgeLevels_Response_Badge {
	if m != nil {
		return m.Badges
	}
	return nil
}

type CPlayer_GetGameBadgeLevels_Response_Badge struct {
	Level            *int32  `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Series           *int32  `protobuf:"varint,2,opt,name=series" json:"series,omitempty"`
	BorderColor      *uint32 `protobuf:"varint,3,opt,name=border_color" json:"border_color,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) Reset() {
	*m = CPlayer_GetGameBadgeLevels_Response_Badge{}
}
func (m *CPlayer_GetGameBadgeLevels_Response_Badge) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetGameBadgeLevels_Response_Badge) ProtoMessage()    {}
func (*CPlayer_GetGameBadgeLevels_Response_Badge) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{1, 0}
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetSeries() int32 {
	if m != nil && m.Series != nil {
		return *m.Series
	}
	return 0
}

func (m *CPlayer_GetGameBadgeLevels_Response_Badge) GetBorderColor() uint32 {
	if m != nil && m.BorderColor != nil {
		return *m.BorderColor
	}
	return 0
}

type CPlayer_GetLastPlayedTimes_Request struct {
	MinLastPlayed    *uint32 `protobuf:"varint,1,opt,name=min_last_played" json:"min_last_played,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Request) Reset()         { *m = CPlayer_GetLastPlayedTimes_Request{} }
func (m *CPlayer_GetLastPlayedTimes_Request) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Request) ProtoMessage()    {}
func (*CPlayer_GetLastPlayedTimes_Request) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{2}
}

func (m *CPlayer_GetLastPlayedTimes_Request) GetMinLastPlayed() uint32 {
	if m != nil && m.MinLastPlayed != nil {
		return *m.MinLastPlayed
	}
	return 0
}

type CPlayer_GetLastPlayedTimes_Response struct {
	Games            []*CPlayer_GetLastPlayedTimes_Response_Game `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Response) Reset()         { *m = CPlayer_GetLastPlayedTimes_Response{} }
func (m *CPlayer_GetLastPlayedTimes_Response) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Response) ProtoMessage()    {}
func (*CPlayer_GetLastPlayedTimes_Response) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3}
}

func (m *CPlayer_GetLastPlayedTimes_Response) GetGames() []*CPlayer_GetLastPlayedTimes_Response_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

type CPlayer_GetLastPlayedTimes_Response_Game struct {
	Appid            *int32  `protobuf:"varint,1,opt,name=appid" json:"appid,omitempty"`
	LastPlaytime     *uint32 `protobuf:"varint,2,opt,name=last_playtime" json:"last_playtime,omitempty"`
	Playtime_2Weeks  *int32  `protobuf:"varint,3,opt,name=playtime_2weeks" json:"playtime_2weeks,omitempty"`
	PlaytimeForever  *int32  `protobuf:"varint,4,opt,name=playtime_forever" json:"playtime_forever,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) Reset() {
	*m = CPlayer_GetLastPlayedTimes_Response_Game{}
}
func (m *CPlayer_GetLastPlayedTimes_Response_Game) String() string { return proto.CompactTextString(m) }
func (*CPlayer_GetLastPlayedTimes_Response_Game) ProtoMessage()    {}
func (*CPlayer_GetLastPlayedTimes_Response_Game) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{3, 0}
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetAppid() int32 {
	if m != nil && m.Appid != nil {
		return *m.Appid
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetLastPlaytime() uint32 {
	if m != nil && m.LastPlaytime != nil {
		return *m.LastPlaytime
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetPlaytime_2Weeks() int32 {
	if m != nil && m.Playtime_2Weeks != nil {
		return *m.Playtime_2Weeks
	}
	return 0
}

func (m *CPlayer_GetLastPlayedTimes_Response_Game) GetPlaytimeForever() int32 {
	if m != nil && m.PlaytimeForever != nil {
		return *m.PlaytimeForever
	}
	return 0
}

type CPlayer_AcceptSSA_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPlayer_AcceptSSA_Request) Reset()                    { *m = CPlayer_AcceptSSA_Request{} }
func (m *CPlayer_AcceptSSA_Request) String() string            { return proto.CompactTextString(m) }
func (*CPlayer_AcceptSSA_Request) ProtoMessage()               {}
func (*CPlayer_AcceptSSA_Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type CPlayer_AcceptSSA_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CPlayer_AcceptSSA_Response) Reset()                    { *m = CPlayer_AcceptSSA_Response{} }
func (m *CPlayer_AcceptSSA_Response) String() string            { return proto.CompactTextString(m) }
func (*CPlayer_AcceptSSA_Response) ProtoMessage()               {}
func (*CPlayer_AcceptSSA_Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type CPlayer_LastPlayedTimes_Notification struct {
	Games            []*CPlayer_GetLastPlayedTimes_Response_Game `protobuf:"bytes,1,rep,name=games" json:"games,omitempty"`
	XXX_unrecognized []byte                                      `json:"-"`
}

func (m *CPlayer_LastPlayedTimes_Notification) Reset()         { *m = CPlayer_LastPlayedTimes_Notification{} }
func (m *CPlayer_LastPlayedTimes_Notification) String() string { return proto.CompactTextString(m) }
func (*CPlayer_LastPlayedTimes_Notification) ProtoMessage()    {}
func (*CPlayer_LastPlayedTimes_Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{6}
}

func (m *CPlayer_LastPlayedTimes_Notification) GetGames() []*CPlayer_GetLastPlayedTimes_Response_Game {
	if m != nil {
		return m.Games
	}
	return nil
}

func init() {
	proto.RegisterType((*CPlayer_GetGameBadgeLevels_Request)(nil), "CPlayer_GetGameBadgeLevels_Request")
	proto.RegisterType((*CPlayer_GetGameBadgeLevels_Response)(nil), "CPlayer_GetGameBadgeLevels_Response")
	proto.RegisterType((*CPlayer_GetGameBadgeLevels_Response_Badge)(nil), "CPlayer_GetGameBadgeLevels_Response.Badge")
	proto.RegisterType((*CPlayer_GetLastPlayedTimes_Request)(nil), "CPlayer_GetLastPlayedTimes_Request")
	proto.RegisterType((*CPlayer_GetLastPlayedTimes_Response)(nil), "CPlayer_GetLastPlayedTimes_Response")
	proto.RegisterType((*CPlayer_GetLastPlayedTimes_Response_Game)(nil), "CPlayer_GetLastPlayedTimes_Response.Game")
	proto.RegisterType((*CPlayer_AcceptSSA_Request)(nil), "CPlayer_AcceptSSA_Request")
	proto.RegisterType((*CPlayer_AcceptSSA_Response)(nil), "CPlayer_AcceptSSA_Response")
	proto.RegisterType((*CPlayer_LastPlayedTimes_Notification)(nil), "CPlayer_LastPlayedTimes_Notification")
}

var fileDescriptor0 = []byte{
	// 680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x94, 0x41, 0x4f, 0xd4, 0x40,
	0x14, 0xc7, 0x53, 0x60, 0x49, 0x1c, 0x58, 0x31, 0x13, 0x89, 0xa5, 0x68, 0x32, 0x29, 0x88, 0x40,
	0xa0, 0x24, 0xeb, 0xc5, 0xa8, 0x09, 0x59, 0x38, 0x70, 0x21, 0x44, 0x59, 0xb8, 0x99, 0xd4, 0xd9,
	0xf6, 0xed, 0x3a, 0xa1, 0xed, 0xd4, 0xce, 0x14, 0xc2, 0x95, 0xb3, 0x57, 0x3f, 0x0a, 0x9e, 0xf9,
	0x02, 0x7e, 0x14, 0xbf, 0x83, 0x6f, 0xa6, 0x74, 0x65, 0x59, 0x17, 0x37, 0x9e, 0x76, 0x3b, 0xff,
	0x37, 0x6f, 0xfe, 0xef, 0x37, 0xff, 0x96, 0xac, 0x29, 0x0d, 0x3c, 0x4d, 0x41, 0x29, 0xde, 0x07,
	0x15, 0xe6, 0x09, 0xbf, 0x84, 0x22, 0xb0, 0x8b, 0x51, 0x22, 0x20, 0xd3, 0x41, 0x5e, 0x48, 0x2d,
	0x3d, 0xd6, 0x97, 0xb2, 0x9f, 0xc0, 0x8e, 0x7d, 0xea, 0x96, 0xbd, 0x9d, 0x18, 0x54, 0x54, 0x88,
	0x5c, 0xcb, 0xe2, 0xb6, 0x62, 0x6b, 0xb8, 0x53, 0x99, 0x89, 0x9e, 0x80, 0x38, 0xec, 0x72, 0x05,
	0xa3, 0xfd, 0xfc, 0xd7, 0xc4, 0xdf, 0xff, 0x60, 0x0f, 0x0b, 0x0f, 0x40, 0x1f, 0xf0, 0x14, 0xf6,
	0x78, 0xdc, 0x87, 0x43, 0x38, 0x87, 0x44, 0x85, 0xc7, 0xf0, 0xb5, 0x04, 0xa5, 0x69, 0x93, 0x34,
	0x78, 0x9e, 0x8b, 0xd8, 0x75, 0x98, 0xb3, 0xde, 0xf4, 0xaf, 0x1d, 0xb2, 0xf2, 0xe0, 0x2e, 0x95,
	0xcb, 0x4c, 0x01, 0x7d, 0x4a, 0xe6, 0xab, 0x41, 0xc2, 0xc4, 0x28, 0xd5, 0x6e, 0xfa, 0x96, 0xcc,
	0x76, 0x4d, 0xb5, 0x72, 0xa7, 0xd8, 0xf4, 0xfa, 0x5c, 0x6b, 0x33, 0x98, 0xa0, 0x57, 0x60, 0x17,
	0xbd, 0xf7, 0xa4, 0x61, 0xff, 0x18, 0x47, 0x7f, 0x7a, 0x36, 0xe8, 0x63, 0x32, 0xab, 0xa0, 0x10,
	0xb6, 0xa7, 0x79, 0xc6, 0x93, 0xbb, 0xb2, 0x88, 0xb1, 0x67, 0x24, 0x13, 0x59, 0xb8, 0xd3, 0xd6,
	0xf7, 0x95, 0x33, 0x34, 0xed, 0x21, 0x57, 0xda, 0x3e, 0xc5, 0x27, 0x02, 0x79, 0x0d, 0xa6, 0xfd,
	0x44, 0x16, 0x52, 0x91, 0x85, 0x09, 0xca, 0xd5, 0x45, 0xdc, 0xce, 0xbd, 0xb7, 0x7f, 0x75, 0xed,
	0xee, 0x9e, 0x7c, 0x01, 0x96, 0x4a, 0xa5, 0x59, 0x01, 0x11, 0x72, 0x64, 0xa6, 0x6c, 0xbb, 0x2a,
	0x63, 0x1a, 0xfb, 0x30, 0x8d, 0x05, 0x15, 0x63, 0xc6, 0x93, 0x02, 0x78, 0x7c, 0xc9, 0xce, 0x32,
	0x79, 0xa1, 0x18, 0xef, 0xca, 0x52, 0xfb, 0x37, 0xc3, 0xf0, 0x46, 0x4d, 0xdc, 0xc2, 0x7b, 0x43,
	0x1a, 0x7d, 0x84, 0xa1, 0xf0, 0x6c, 0x43, 0x69, 0x23, 0x98, 0x60, 0x53, 0x60, 0xf0, 0x79, 0x21,
	0x99, 0x31, 0xbf, 0xc3, 0xb7, 0xd6, 0xa0, 0x8b, 0xa4, 0x39, 0x18, 0xc9, 0x18, 0xb5, 0xa8, 0x9a,
	0xf4, 0x19, 0x59, 0xa8, 0x57, 0xc2, 0xd6, 0x05, 0xc0, 0x99, 0xb2, 0xb4, 0x1a, 0xd4, 0x25, 0x4f,
	0x06, 0x42, 0x4f, 0x16, 0x48, 0xbb, 0x70, 0x67, 0x8c, 0xe2, 0x2f, 0x93, 0xa5, 0xda, 0x4c, 0x3b,
	0x8a, 0x20, 0xd7, 0x9d, 0x4e, 0xbb, 0xa6, 0xe7, 0x3f, 0x27, 0xde, 0xdf, 0xc4, 0xca, 0xa0, 0xff,
	0x99, 0xac, 0xd6, 0xea, 0xfd, 0x21, 0x8e, 0xa4, 0xc6, 0xa8, 0x46, 0x5c, 0x0b, 0x99, 0xfd, 0xff,
	0xf4, 0xad, 0x5f, 0xd3, 0x64, 0xb6, 0xaa, 0xa5, 0x3f, 0x1c, 0x42, 0x47, 0x33, 0x45, 0x57, 0x82,
	0x7f, 0x47, 0xde, 0x5b, 0x9d, 0x24, 0x95, 0xfe, 0x29, 0x26, 0xe2, 0xe3, 0x31, 0xe8, 0xb2, 0xc8,
	0x94, 0xbd, 0xf8, 0x8e, 0x79, 0xc3, 0x98, 0x2d, 0x63, 0xb2, 0xc7, 0x38, 0x2b, 0x31, 0x97, 0x5b,
	0x56, 0xb2, 0x0d, 0x98, 0x4d, 0x2d, 0x43, 0x9e, 0x76, 0xcd, 0xcc, 0xb8, 0xc5, 0x78, 0x16, 0x33,
	0xd1, 0x63, 0x42, 0xbf, 0x52, 0xa8, 0x88, 0x84, 0x7e, 0x77, 0x88, 0xbb, 0x6f, 0x23, 0x34, 0x3a,
	0xee, 0xb0, 0xfd, 0x31, 0x19, 0x1e, 0xb6, 0x3f, 0x0e, 0x98, 0x1f, 0xa0, 0xfd, 0x4d, 0x2c, 0xa8,
	0xbc, 0xdf, 0x4f, 0xb2, 0x1a, 0xd8, 0xe4, 0x51, 0x24, 0xcb, 0x4c, 0xd3, 0x88, 0x3c, 0x1a, 0xdc,
	0x29, 0xf5, 0x82, 0xb1, 0x21, 0xf0, 0x96, 0x83, 0x07, 0x32, 0xf0, 0x02, 0x4f, 0x5d, 0x3a, 0x45,
	0x2e, 0x4c, 0x28, 0xd3, 0x1a, 0x75, 0x91, 0xf5, 0x2b, 0x7c, 0x9d, 0xb6, 0xb7, 0x8d, 0xf2, 0x46,
	0x9b, 0xa1, 0x7e, 0x2e, 0x22, 0xb0, 0x1e, 0x4c, 0x91, 0x52, 0xa6, 0xa8, 0xe2, 0x5b, 0x7d, 0x55,
	0x58, 0xcc, 0x35, 0x6f, 0xfd, 0x74, 0xc8, 0x7c, 0x75, 0x56, 0x45, 0x8c, 0x7e, 0x73, 0xc8, 0xa2,
	0xcd, 0xd2, 0xe5, 0x7d, 0x72, 0x2f, 0x83, 0x49, 0xb2, 0xe7, 0xcd, 0x05, 0x47, 0x72, 0x60, 0x76,
	0x17, 0xdd, 0xbc, 0xbb, 0x2b, 0xb3, 0x5e, 0x21, 0x53, 0xeb, 0x0e, 0x1d, 0x68, 0x59, 0xbf, 0xea,
	0x78, 0xd9, 0x29, 0xbe, 0x24, 0xf5, 0x57, 0xc1, 0x38, 0xb4, 0x10, 0x3d, 0xc3, 0x78, 0x6d, 0xc4,
	0x76, 0xbd, 0x2d, 0xbb, 0xd3, 0x59, 0xdd, 0x5c, 0xbb, 0x53, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xc7, 0xc5, 0x50, 0x83, 0x0a, 0x06, 0x00, 0x00,
}
